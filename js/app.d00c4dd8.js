(function(t){function e(e){for(var i,a,o=e[0],c=e[1],l=e[2],d=0,h=[];d<o.length;d++)a=o[d],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&h.push(r[a][0]),r[a]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(t[i]=c[i]);u&&u(e);while(h.length)h.shift()();return s.push.apply(s,l||[]),n()}function n(){for(var t,e=0;e<s.length;e++){for(var n=s[e],i=!0,o=1;o<n.length;o++){var c=n[o];0!==r[c]&&(i=!1)}i&&(s.splice(e--,1),t=a(a.s=n[0]))}return t}var i={},r={app:0},s=[];function a(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=i,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="";var o=window["webpackJsonp"]=window["webpackJsonp"]||[],c=o.push.bind(o);o.push=e,o=o.slice();for(var l=0;l<o.length;l++)e(o[l]);var u=c;s.push([0,"chunk-vendors"]),n()})({0:function(t,e,n){t.exports=n("cd49")},"027c":function(t,e,n){},"02cb":function(t,e,n){},"03c4":function(t,e,n){},1:function(t,e){},"10ef":function(t,e,n){},2:function(t,e){},"2c2d":function(t,e,n){},"2f53":function(t,e,n){"use strict";n("03c4")},3809:function(t,e,n){},"46fd":function(t,e,n){"use strict";n("6ca7")},5885:function(t,e,n){"use strict";n("cd45")},"59f6":function(t,e,n){},"618e":function(t,e,n){"use strict";n("2c2d")},"680b":function(t,e,n){},"6aed":function(t,e,n){n("4160"),n("c975"),n("fb6a"),n("4d63"),n("ac1f"),n("25f0"),n("466d"),n("5319"),n("498a"),n("159b");var i=n("c461"),r=n("770b"),s="",a=!0;e.throw=!0;var o=t.exports=function(t){var e=new RegExp("[^%]*%[0-9]*[A-Za-z][^%]*","g"),n=t.match(e);if(null===n)throw new Error("Unable to parse scanf selector.");var i,r=n.length,o=!1,c=0,l=Array.prototype.slice.call(arguments,1);if(this.sscanf||(a||(s=""),a=!0),l.length>0)i={},o=!0;else{if(!(r>1))return b(n[0]);i=[]}return n.forEach((function(t){o?i[l.shift()||c++]=b(t):i.push(b(t))})),i};t.exports.sscanf=function(t,e){return"string"===typeof t&&t.length?(a&&(s=""),s=t,a=!1,o.apply({sscanf:!0},Array.prototype.slice.call(arguments,1))):null};var c=function(t,e,n,o){var c;if(!s.length||"\r"===s){if(!a)return null;s=r()}var l="("+n+")",u=s;if("STR"===o&&e.trim().length>0){var d=i.regslashes(t),h=i.regslashes(e)+"[\\w\\W]*";d.length&&(u=u.replace(new RegExp(d),"")),u=u.replace(new RegExp(h),"")}else l=i.regslashes(t)+l;var p=u.match(new RegExp(l));return p?(c=p[1],s=s.substr(s.indexOf(c)).replace(c,"").replace(e,""),"HEXFLOAT"===o?p:c):null},l=function(t,n){var r=c(t,n,"[-]?[A-Za-z0-9]+");if(!r)return null;if(r.length>2&&"0"===r[0]){if("x"===r[1].toLowerCase())try{return i.hex2int(r)}catch(s){return e.throw?NaN:null}if("o"===r[1].toLowerCase())try{return i.octal2int(r)}catch(s){return e.throw?NaN:null}}return parseInt(r)},u=function(t,e){var n=c(t,e,".");return n},d=function(t,e){var n=c(t,e,"[-]?[0-9]+[.]?[0-9]*");return parseFloat(n)},h=function(t,e){var n=c(t,e,"^([+-]?)0x([0-9a-f]*)(.[0-9a-f]*)?(p[+-]?[0-9a-f]+)?","HEXFLOAT"),i=n[2],r=n[3],s=n[4],a=n[5]||"p0",o=parseInt(i+r+(void 0!==s?s.slice(1):""),16),l=parseInt(a.slice(1),16)-4*(void 0!==s?s.length-1:0);return o*Math.pow(2,l)},p=function(t,n){var r=c(t,n,"[A-Za-z0-9]+");try{return i.hex2int(r)}catch(s){return e.throw?NaN:null}},f=function(t,n){var r=c(t,n,"[A-Za-z0-9]+");try{return i.octal2int(r)}catch(s){return e.throw?NaN:null}},m=function(t,e){var n=c(t,e,"([\\w\\]=-]|\\S+[^\\ ])+(\\\\[\\w\\ ][\\w\\:]*)*","STR");return/\\/.test(n)&&(n=i.stripslashes(n)),n},g=function(t,e){var n=c(t,e,"[^\n\r]*");return/\\/.test(n)&&(n=i.stripslashes(n)),n},b=function(t){var e,n=t.match(/%(0[1-9]+)?[A-Za-z]+/),i=t.match(/[^%]*/);if(!n)return console.warn("Invalid scanf selector: [%s]",t),null;var r=n[0].replace(n[1],""),s=i?i[0]:null,a=t.substr(t.indexOf(r)+r.length);switch(r){case"%d":case"%ld":case"%llu":case"%lu":case"%u":e=l(s,a);break;case"%c":e=u(s,a);break;case"%s":e=m(s,a);break;case"%S":e=g(s,a);break;case"%X":case"%x":e=p(s,a);break;case"%O":case"%o":e=f(s,a);break;case"%a":e=h(s,a);break;case"%f":e=d(s,a);break;default:throw new Error('Unknown type "'+r+'"')}return e}},"6b4d":function(t,e,n){},"6ca7":function(t,e,n){},"75fc":function(t,e,n){"use strict";n("02cb")},"770b":function(t,e,n){(function(e,i){n("d3b7"),n("25f0");var r,s=n("3e8f"),a=256,o=e.alloc?e.alloc(a):new e(a);t.exports=function(){var t="win32"===i.platform?i.stdin.fd:s.openSync("/dev/stdin","rs");r=0;try{r=s.readSync(t,o,0,a)}catch(n){if("EAGAIN"===n.code)console.error("ERROR: interactive stdin input not supported."),i.exit(1);else if("EOF"===n.code)return"";throw n}if(0===r)return"";var e=o.toString(void 0,0,r-1);return e}}).call(this,n("b639").Buffer,n("4362"))},"7fd0":function(t,e,n){},9224:function(t){t.exports=JSON.parse('{"a":"1.9.0"}')},"92a1":function(t,e,n){"use strict";n("027c")},"9ae0":function(t,e,n){},"9cfe":function(t,e,n){"use strict";n("59f6")},a210:function(t,e,n){},aa75:function(t,e,n){"use strict";n("10ef")},b4f7:function(t,e,n){"use strict";n("7fd0")},c461:function(t,e,n){n("ac1f"),n("5319");var i={a:"a".charCodeAt(),f:"f".charCodeAt(),A:"A".charCodeAt(),F:"F".charCodeAt(),0:"0".charCodeAt(),7:"7".charCodeAt(),9:"9".charCodeAt()};e.hex2int=function(t){t=t.replace(/^[0Oo][Xx]/,"");for(var e=0,n=0,i=t.length-1;i>=0;i--)e+=r(t[i],n++);return e};var r=function(t,e){var n=null,r=t.charCodeAt();if(i.a<=r&&r<=i.f)n=r-i.a+10;else if(i.A<=r&&r<=i.F)n=r-i.A+10;else{if(!(i[0]<=r&&r<=i[9]))throw new Error("Invalid ascii ["+t+"]");n=r-i[0]}while(e--)n*=16;return n};e.octal2int=function(t){t=t.replace(/^0[Oo]?/,"");for(var e=0,n=0,i=t.length-1;i>=0;i--)e+=s(t[i],n++);return e};var s=function(t,e){var n=null,r=t.charCodeAt();if(!(r>=i[0]&&r<=i[7]))throw new Error("Invalid char to Octal ["+t+"]");n=r-i[0];while(e--)n*=8;return n};e.regslashes=function(t){return t.replace(/\[/g,"\\[").replace(/\]/g,"\\]").replace(/\(/g,"\\(").replace(/\)/g,"\\)").replace(/\|/g,"\\|")},e.stripslashes=function(t){return t.replace(/\\([\sA-Za-z\\]|[0-7]{1,3})/g,(function(t,e){switch(e){case"\\":return"\\";case"0":return"\0";default:return/^\w$/.test(e)?o(e):/^\s$/.test(e)?e:/([0-7]{1,3})/.test(e)?a(e):t}}))};var a=function(t){var n=e.octal2int(t);return String.fromCharCode(n)},o=function(t){switch(t.toLowerCase()){case"b":return"\b";case"f":return"\f";case"n":return"\n";case"r":return"\r";case"t":return"\t";case"v":return"\v";default:return t}}},cd45:function(t,e,n){},cd49:function(t,e,n){"use strict";n.r(e);var i={};n.r(i),n.d(i,"parse",(function(){return Ye})),n.d(i,"compile",(function(){return Ze})),n.d(i,"compileOne",(function(){return Xe})),n.d(i,"load",(function(){return Je})),n.d(i,"build",(function(){return Qe}));var r={};n.r(r),n.d(r,"execute",(function(){return _n})),n.d(r,"deflex",(function(){return Rn})),n.d(r,"generateLabelOffset",(function(){return Bn})),n.d(r,"state",(function(){return On}));n("e260"),n("e6cf"),n("cca6"),n("a79d");var s=n("2b0e"),a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"app"}},[n("div",{staticClass:"container-fluid h-100"},[n("div",{staticClass:"row h-100"},[n("div",{staticClass:"col-12 h-100",attrs:{id:"emulator"}},[n("div",{staticClass:"row px-0",staticStyle:{height:"24px"}},[t._m(0),n("div",{staticClass:"col-7 col-md-8 col-lg-9 pl-1 text-left"},[n("div",{staticClass:"row px-0"},[n("div",{staticClass:"col-8 pr-1"},[n("h5",{staticClass:"mb-0"},[t._v(t._s(t.env))])]),t._m(1)])])]),n("div",{staticClass:"row px-0",staticStyle:{height:"calc(100% - 36px)"}},[n("div",{staticClass:"col-5 col-md-4 col-lg-3 pr-1"},[n("registers",{staticStyle:{height:"calc(100% - 22px)"}}),n("div",{staticClass:"d-inline-block float-left mt-1"},[t._v(" New here? "),n("a",{staticClass:"link text-white clickable",on:{click:t.startTour}},[t._v("Take the tour!")])])],1),n("div",{staticClass:"col-7 col-md-8 col-lg-9 pl-1",staticStyle:{height:"calc(100% - 232px)"}},[n("div",{staticClass:"row px-0 h-100"},[n("div",{staticClass:"col-8 pr-1 h-100"},[n("keep-alive",[n(t.env,{tag:"component",on:{switch:t.switchEnvironment}})],1)],1),n("div",{staticClass:"col-4 pl-1 h-100"},[n("tutorial")],1)]),n("div",{staticClass:"row px-0 pt-2",staticStyle:{height:"210px"}},[n("div",{staticClass:"col-6 pr-1",staticStyle:{"max-height":"100%"}},[n("instruction")],1),n("div",{staticClass:"col-6 pl-1",staticStyle:{"max-height":"100%"}},[n("memory"),n("div",{staticClass:"settings clickable",on:{click:function(e){return t.$refs.settings.show()}}},[n("i",{staticClass:"button fas fa-sliders-h"})])],1)]),t._m(2)])])])])]),n("settings",{ref:"settings"}),n("b-modal",{ref:"about",attrs:{centered:"","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"}},[n("div",{staticClass:"px-5 py-1"},[n("div",{staticClass:"mt-4"},[t._v(" created by polysoft it ")])])]),n("b-modal",{attrs:{visible:t.isTooSmall,centered:"","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"}},[n("h4",[t._v("oh no!")]),n("div",{staticClass:"mt-3"},[t._v(" It looks like the device you're using is too small to properly interact with iRISC. "),n("br"),n("br"),t._v(" I recommend retrying on a larger, desktop or laptop device for the best experience (at least 1280x720). ")]),n("div",{staticClass:"text-center mt-3 mb-2"},[n("b-button",{on:{click:function(e){t.dismissTooSmall=!0}}},[t._v(" try anyway ")])],1)]),n("b-modal",{ref:"errors",attrs:{id:"errors-modal",size:"600","hide-header":"","hide-footer":"",centered:"","body-class":"irisc-modal p-1"},scopedSlots:t._u([{key:"default",fn:function(e){var i=e.hide;return[n("div",{staticClass:"mx-2 my-1"},[t._v(" Assembly failed due to following error(s). "),n("div",{staticClass:"mt-3 ml-3"},t._l(t.errorSummary,(function(e,i){return n("div",{key:i,staticClass:"mb-3",domProps:{innerHTML:t._s(e)}})})),0),n("div",{staticClass:"text-center mt-4 mb-2"},[n("b-button",{on:{click:i}},[t._v(" fix ")])],1)])]}}])})],1)},o=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"col-5 col-md-4 col-lg-3 pr-1 text-left"},[n("h5",{staticClass:"mb-0"},[t._v("registers")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"col-4 pl-1"},[n("h5",{staticClass:"mb-0"},[t._v("tutorial")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"row px-0",staticStyle:{height:"24px"}},[n("div",{staticClass:"col-6 pr-1 text-left"},[n("h5",{staticClass:"mb-0"},[t._v("assembler")])]),n("div",{staticClass:"col-6 pl-1 text-left"},[n("h5",{staticClass:"mb-0 d-inline-block"},[t._v("memory")]),n("div",{staticClass:"d-inline-block float-right mt-1"},[t._v(" created by "),n("a",{staticClass:"text-white",attrs:{href:"https://polysoftit.co.uk/"}},[t._v("polysoft it")]),t._v(" // "),n("a",{staticClass:"text-white",attrs:{href:"https://github.com/rtybanana/irisc-web"}},[t._v("src")])])])])}],c=(n("d81d"),function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"prism-container pl-1 pr-0 py-1 position-relative",class:{crt:t.settings.crtEffect},attrs:{"tour-item":"editor"},on:{mouseover:t.hover,click:t.click,dblclick:t.dblclick,"!keydown":[function(e){return(e.type.indexOf("key")||191===e.keyCode)&&e.ctrlKey?(e.preventDefault(),e.stopPropagation(),t.lineComment(e)):null},function(e){return(e.type.indexOf("key")||83===e.keyCode)&&e.ctrlKey?(e.preventDefault(),e.stopPropagation(),t.save(e)):null}],keydown:function(e){if(!e.type.indexOf("key")&&t._k(e.keyCode,"esc",27,e.key,["Esc","Escape"]))return null;!t.tourActive&&t.$emit("switch")}}},[n("prism-editor",{ref:"prism",attrs:{id:"editor",highlight:t.highlighter,"tab-size":1,"insert-spaces":!1,readonly:t.tourActive,"line-numbers":""},on:{input:t.autoSave},model:{value:t.program,callback:function(e){t.program=e},expression:"program"}}),n("div",{staticClass:"controls"},[n("debug",{attrs:{tooltip:t.controlTooltip},on:{"update:tooltip":function(e){t.controlTooltip=e}}}),n("i",{staticClass:"button terminal fas fa-terminal ml-1 clickable",on:{click:function(e){!t.tourActive&&t.$emit("switch")},mouseenter:function(e){t.controlTooltip="terminal"},mouseleave:function(e){t.controlTooltip=void 0}}}),n("div",{directives:[{name:"show",rawName:"v-show",value:t.controlTooltip,expression:"controlTooltip"}],staticClass:"control-tooltip"},[t._v(t._s(t.controlTooltip))])],1),n("div",{staticClass:"popup-output"},[n("div",{staticClass:"p-1",staticStyle:{"border-radius":"0.3rem","background-color":"#191d21"}},[t.hasOutput?n("div",t._l(t.output,(function(e,i){return n("div",{key:i,staticStyle:{"overflow-wrap":"break-word"}},[t._v(" "+t._s(e)+" ")])})),0):t._e(),""!==t.computedTooltip.title?n("div",{class:t.hasOutput?"mt-2":""},[n("div",{style:"color: "+t.computedTooltip.color},[t._v(t._s(t.computedTooltip.title))]),n("div",[t._v(t._s(t.computedTooltip.message))])]):t.errors.length>0?n("div",{staticClass:"clickable hoverable rounded px-1",on:{click:t.run}},[t._v(" "+t._s(t.errors.length)+" errors ")]):t._e()])]),n("div",{directives:[{name:"show",rawName:"v-show",value:!t.tourActive,expression:"!tourActive"}],staticClass:"files"},[n("files")],1),n("b-modal",{ref:"save",attrs:{centered:"","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"},scopedSlots:t._u([{key:"default",fn:function(e){var i=e.hide;return[n("div",{staticClass:"mx-2 my-1"},[n("h4",[t._v("save as")]),n("files",{staticClass:"file-explorer mt-3",attrs:{"force-show":"","prevent-default-file":"","selected-file":t.selectedFile},on:{"open:file":function(e){t.filename=e.name}}}),n("div",{directives:[{name:"show",rawName:"v-show",value:!t.currentDirectory.writeable,expression:"!currentDirectory.writeable"}]},[n("small",{staticClass:"token operation"},[t._v("folder is write protected.")])]),n("div",{staticClass:"mt-3"},[t._v("filename")]),n("b-form-input",{on:{keydown:t.saveAllowChar},model:{value:t.filename,callback:function(e){t.filename=e},expression:"filename"}}),t.selectedFile?[t.selectedFile.writeable?n("div",[n("small",{staticClass:"token label"},[t._v("overwriting an existing file.")])]):n("div",[n("small",{staticClass:"token operation"},[t._v("file is write protected.")])])]:n("div",[n("small",{staticClass:"token line-comment"},[t._v("creating a new file.")])]),n("div",{staticClass:"text-center mt-4 mb-2"},[n("b-button",{staticClass:"mr-2",on:{click:i}},[t._v(" cancel ")]),n("b-button",{on:{click:t.saveAs}},[t._v(" save ")])],1)],2)]}}])})],1)}),l=[];n("99af"),n("7db0"),n("c740"),n("4160"),n("a630"),n("caad"),n("a15b"),n("13d5"),n("b0c0"),n("a9e3"),n("ac1f"),n("2532"),n("3ca3"),n("466d"),n("5319"),n("1276"),n("159b");function u(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300;return function(){for(var i=this,r=arguments.length,s=new Array(r),a=0;a<r;a++)s[a]=arguments[a];clearTimeout(e),e=setTimeout((function(){return t.apply(i,s)}),n)}}function d(t,e){return t.map((function(t,n){return[t,e[n]]}))}n("45fc");var h,p,f,m=n("5530"),g=(n("c19f"),n("4ec9"),n("d3b7"),n("5cc6"),n("fb2c"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7"),n("ddb0"),n("ade3"));(function(t){t[t["AND"]=0]="AND",t[t["EOR"]=1]="EOR",t[t["SUB"]=2]="SUB",t[t["RSB"]=3]="RSB",t[t["ADD"]=4]="ADD",t[t["ADC"]=5]="ADC",t[t["SBC"]=6]="SBC",t[t["RSC"]=7]="RSC",t[t["TST"]=8]="TST",t[t["TEQ"]=9]="TEQ",t[t["CMP"]=10]="CMP",t[t["CMN"]=11]="CMN",t[t["ORR"]=12]="ORR",t[t["MOV"]=13]="MOV",t[t["BIC"]=14]="BIC",t[t["MVN"]=15]="MVN",t[t["B"]=32]="B",t[t["BL"]=33]="BL",t[t["BX"]=34]="BX"})(f||(f={}));var b,v,y,k,w={and:f.AND,eor:f.EOR,sub:f.SUB,rsb:f.RSB,add:f.ADD,adc:f.ADC,sbc:f.SBC,rsc:f.RSC,tst:f.TST,teq:f.TEQ,cmp:f.CMP,cmn:f.CMN,orr:f.ORR,mov:f.MOV,bic:f.BIC,mvn:f.MVN,bx:f.BX,bl:f.BL,b:f.B},x=(h={},Object(g["a"])(h,f.AND,"Bitwise AND"),Object(g["a"])(h,f.EOR,"Bitwise XOR"),Object(g["a"])(h,f.SUB,"Subtraction"),Object(g["a"])(h,f.RSB,"Reverse Subtraction"),Object(g["a"])(h,f.ADD,"Addition"),Object(g["a"])(h,f.ADC,"Add with Carry"),Object(g["a"])(h,f.SBC,"Subtract with Carry"),Object(g["a"])(h,f.RSC,"Reverse Subtraction with Carry"),Object(g["a"])(h,f.TST,"Test"),Object(g["a"])(h,f.TEQ,"Test Equivalence"),Object(g["a"])(h,f.CMP,"Compare"),Object(g["a"])(h,f.CMN,"Compare Negative"),Object(g["a"])(h,f.ORR,"Bitwise OR"),Object(g["a"])(h,f.MOV,"Move"),Object(g["a"])(h,f.BIC,"Bit Clear"),Object(g["a"])(h,f.MVN,"Move Negative"),Object(g["a"])(h,f.B,"Branch"),Object(g["a"])(h,f.BL,"Branch and Link"),Object(g["a"])(h,f.BX,"Branch and Exchange"),h),T=(p={},Object(g["a"])(p,f.AND,"Performs a bitwise AND operation and stores the result."),Object(g["a"])(p,f.EOR,"Performs a bitwise exclusive OR operation and stores the result."),Object(g["a"])(p,f.SUB,"Performs an arithmetic subtraction from left to right and stores the result."),Object(g["a"])(p,f.RSB,"Performs an arithmetic subtraction from right to left and stores the result."),Object(g["a"])(p,f.ADD,"Performs an arithmetic addition and stores the result."),Object(g["a"])(p,f.ADC,"???"),Object(g["a"])(p,f.SBC,"???"),Object(g["a"])(p,f.RSC,"???"),Object(g["a"])(p,f.TST,"Performs a bitwise AND operation, sets the CPSR flags and discards the result."),Object(g["a"])(p,f.TEQ,"Performs a bitwise XOR operation, sets the CPSR flags and discards the result."),Object(g["a"])(p,f.CMP,"Performs an arithmetic subtraction, sets the CPSR flags and discards the result."),Object(g["a"])(p,f.CMN,"Performs an arithmetic addition, sets the CPSR flags and discards the result."),Object(g["a"])(p,f.ORR,"Performs a bitwise OR operation and stores the result."),Object(g["a"])(p,f.MOV,"Stores the second operand value in the destination register."),Object(g["a"])(p,f.BIC,"Performs a bitwise AND operation with the complement of the second operand."),Object(g["a"])(p,f.MVN,"Stores the additive inverse of the second operand value in the destination register."),Object(g["a"])(p,f.B,"Branches to the provided instruction address or label."),Object(g["a"])(p,f.BL,"Branches to the provided instruction address or label and stores the return address."),Object(g["a"])(p,f.BX,"Branches to the provided instruction address or label and optionally changes instruction type."),p);(function(t){t[t["R0"]=0]="R0",t[t["R1"]=1]="R1",t[t["R2"]=2]="R2",t[t["R3"]=3]="R3",t[t["R4"]=4]="R4",t[t["R5"]=5]="R5",t[t["R6"]=6]="R6",t[t["R7"]=7]="R7",t[t["R8"]=8]="R8",t[t["R9"]=9]="R9",t[t["R10"]=10]="R10",t[t["R11"]=11]="R11",t[t["R12"]=12]="R12",t[t["SP"]=13]="SP",t[t["LR"]=14]="LR",t[t["PC"]=15]="PC"})(k||(k={}));var O,_,C,R,S=["r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","sp","lr","pc"],j={r0:k.R0,r1:k.R1,r2:k.R2,r3:k.R3,r4:k.R4,r5:k.R5,r6:k.R6,r7:k.R7,r8:k.R8,r9:k.R9,r10:k.R10,r11:k.R11,r12:k.R12,sp:k.SP,lr:k.LR,pc:k.PC},I=(b={},Object(g["a"])(b,k.R0,"Register 0"),Object(g["a"])(b,k.R1,"Register 1"),Object(g["a"])(b,k.R2,"Register 2"),Object(g["a"])(b,k.R3,"Register 3"),Object(g["a"])(b,k.R4,"Register 4"),Object(g["a"])(b,k.R5,"Register 5"),Object(g["a"])(b,k.R6,"Register 6"),Object(g["a"])(b,k.R7,"Register 7"),Object(g["a"])(b,k.R8,"Register 8"),Object(g["a"])(b,k.R9,"Register 9"),Object(g["a"])(b,k.R10,"Register 10"),Object(g["a"])(b,k.R11,"Register 11"),Object(g["a"])(b,k.R12,"Register 12"),Object(g["a"])(b,k.SP,"Stack Pointer"),Object(g["a"])(b,k.LR,"Link Register"),Object(g["a"])(b,k.PC,"Program"),b),E=(v={},Object(g["a"])(v,k.R0,"r0"),Object(g["a"])(v,k.R1,"r1"),Object(g["a"])(v,k.R2,"r2"),Object(g["a"])(v,k.R3,"r3"),Object(g["a"])(v,k.R4,"r4"),Object(g["a"])(v,k.R5,"r5"),Object(g["a"])(v,k.R6,"r6"),Object(g["a"])(v,k.R7,"r7"),Object(g["a"])(v,k.R8,"r8"),Object(g["a"])(v,k.R9,"r9"),Object(g["a"])(v,k.R10,"r10"),Object(g["a"])(v,k.R11,"r11"),Object(g["a"])(v,k.R12,"r12"),Object(g["a"])(v,k.SP,"sp"),Object(g["a"])(v,k.LR,"lr"),Object(g["a"])(v,k.PC,"pc"),v),A=(y={},Object(g["a"])(y,k.R0,"General Purpose Register."),Object(g["a"])(y,k.R1,"General Purpose Register."),Object(g["a"])(y,k.R2,"General Purpose Register."),Object(g["a"])(y,k.R3,"General Purpose Register."),Object(g["a"])(y,k.R4,"General Purpose Register."),Object(g["a"])(y,k.R5,"General Purpose Register."),Object(g["a"])(y,k.R6,"General Purpose Register."),Object(g["a"])(y,k.R7,"General Purpose Register."),Object(g["a"])(y,k.R8,"General Purpose Register."),Object(g["a"])(y,k.R9,"General Purpose Register."),Object(g["a"])(y,k.R10,"General Purpose Register."),Object(g["a"])(y,k.R11,"General Purpose Register."),Object(g["a"])(y,k.R12,"General Purpose Register."),Object(g["a"])(y,k.SP,"The memory address for the top of the stack."),Object(g["a"])(y,k.LR,"The return address of the current function."),Object(g["a"])(y,k.PC,"The memory address of the next instruction."),y);(function(t){t[t["EQ"]=0]="EQ",t[t["NE"]=1]="NE",t[t["CS"]=2]="CS",t[t["CC"]=3]="CC",t[t["MI"]=4]="MI",t[t["PL"]=5]="PL",t[t["VS"]=6]="VS",t[t["VC"]=7]="VC",t[t["HI"]=8]="HI",t[t["LS"]=9]="LS",t[t["GE"]=10]="GE",t[t["LT"]=11]="LT",t[t["GT"]=12]="GT",t[t["LE"]=13]="LE",t[t["AL"]=14]="AL"})(R||(R={}));var L,N,D={eq:R.EQ,ne:R.NE,cs:R.CS,cc:R.CC,mi:R.MI,pl:R.PL,vs:R.VS,vc:R.VC,hi:R.HI,ls:R.LS,ge:R.GE,lt:R.LT,gt:R.GT,le:R.LE,al:R.AL,"":R.AL},M=(O={},Object(g["a"])(O,R.EQ,"Equal"),Object(g["a"])(O,R.NE,"Not Equal"),Object(g["a"])(O,R.CS,"Unsigned More Than or Equal to"),Object(g["a"])(O,R.CC,"Unsigned Less Than"),Object(g["a"])(O,R.MI,"Negative"),Object(g["a"])(O,R.PL,"Positive or Zero"),Object(g["a"])(O,R.VS,"Overflow"),Object(g["a"])(O,R.VC,"No Overflow"),Object(g["a"])(O,R.HI,"Unsigned More Than"),Object(g["a"])(O,R.LS,"Unsigned Less Than or Equal to"),Object(g["a"])(O,R.GE,"Signed More Than or Equal to"),Object(g["a"])(O,R.LT,"Signed Less Than"),Object(g["a"])(O,R.GT,"Signed More Than"),Object(g["a"])(O,R.LE,"Signed Less Than or Equal to"),Object(g["a"])(O,R.AL,"Always"),O),P=(_={},Object(g["a"])(_,R.EQ,"The instruction is only executed if the zero flag (Z) is set."),Object(g["a"])(_,R.NE,"The instruction is only executed if the zero flag (Z) is clear."),Object(g["a"])(_,R.CS,"The instruction is only executed if the carry flag (C) is set."),Object(g["a"])(_,R.CC,"The instruction is only executed if the carry flag (C) is clear."),Object(g["a"])(_,R.MI,"The instruction is only executed if the negative flag (N) is set."),Object(g["a"])(_,R.PL,"The instruction is only executed if the negative flag (N) is clear."),Object(g["a"])(_,R.VS,"The instruction is only executed if the overflow flag (V) is set."),Object(g["a"])(_,R.VC,"The instruction is only executed if the overflow flag (V) is clear."),Object(g["a"])(_,R.HI,"The instruction is only executed if the carry flag (C) is set AND the zero flag (Z) is clear."),Object(g["a"])(_,R.LS,"The instruction is only executed if the carry flag (C) is clear OR the zero flag (Z) is set."),Object(g["a"])(_,R.GE,"The instruction is only executed if the negative flag (N) and the overflow flag (V) are the same."),Object(g["a"])(_,R.LT,"The instruction is only executed if the negative flag (N) and the overflow flag (V) are different."),Object(g["a"])(_,R.GT,"The instruction is only executed if the zero flag (Z) is clear and the negative (N) and overflow (V) flags are the same."),Object(g["a"])(_,R.LE,"The instruction is only executed if the zero flag (Z) is set and the negative (N) and overflow (V) flags are different."),Object(g["a"])(_,R.AL,"The instruction is executed unconditionally. This is the default condition."),_);C={},Object(g["a"])(C,R.EQ,"If the zero flag (Z) is set."),Object(g["a"])(C,R.NE,"If the zero flag (Z) is clear."),Object(g["a"])(C,R.CS,"If the carry flag (C) is set."),Object(g["a"])(C,R.CC,"If the carry flag (C) is clear."),Object(g["a"])(C,R.MI,"If the negative flag (N) is set."),Object(g["a"])(C,R.PL,"If the negative flag (N) is clear."),Object(g["a"])(C,R.VS,"If the overflow flag (V) is set."),Object(g["a"])(C,R.VC,"If the overflow flag (V) is clear."),Object(g["a"])(C,R.HI,"If the carry flag (C) is set AND the zero flag (Z) is clear."),Object(g["a"])(C,R.LS,"If the carry flag (C) is clear OR the zero flag (Z) is set."),Object(g["a"])(C,R.GE,"If the negative flag (N) and the overflow flag (V) are the same."),Object(g["a"])(C,R.LT,"If the negative flag (N) and the overflow flag (V) are different."),Object(g["a"])(C,R.GT,"If the zero flag (Z) is clear and the negative (N) and overflow (V) flags are the same."),Object(g["a"])(C,R.LE,"If the zero flag (Z) is set and the negative (N) and overflow (V) flags are different."),Object(g["a"])(C,R.AL,"Unconditionally. This is the default condition.");(function(t){t[t["LSL"]=0]="LSL",t[t["LSR"]=1]="LSR",t[t["ASR"]=2]="ASR",t[t["ROR"]=3]="ROR"})(N||(N={}));var B,F,H,U,z={lsl:N.LSL,lsr:N.LSR,asr:N.ASR,ror:N.ROR},V=(L={},Object(g["a"])(L,N.LSL,"Logical Shift Left"),Object(g["a"])(L,N.LSR,"Logical Shift Right"),Object(g["a"])(L,N.ASR,"Arithmetic Shift Right"),Object(g["a"])(L,N.ROR,"Rotate Right"),L);(function(t){t[t["N"]=0]="N",t[t["Z"]=1]="Z",t[t["C"]=2]="C",t[t["V"]=3]="V"})(U||(U={}));var W,$,G,q,Y,Z=(B={},Object(g["a"])(B,U.N,"N"),Object(g["a"])(B,U.Z,"Z"),Object(g["a"])(B,U.C,"C"),Object(g["a"])(B,U.V,"V"),B),X=(F={},Object(g["a"])(F,U.N,"Negative Flag (N)"),Object(g["a"])(F,U.Z,"Zero Flag (Z)"),Object(g["a"])(F,U.C,"Carry Flag (C)"),Object(g["a"])(F,U.V,"Overflow Flag (V)"),F),J=(H={},Object(g["a"])(H,U.N,"This bit is set when the signed result of the operation is negative."),Object(g["a"])(H,U.Z,"This bit is set when the result of the operation is equal to zero."),Object(g["a"])(H,U.C,"This bit is set when the operation results in an unsigned overflow."),Object(g["a"])(H,U.V,"This bit is set when the operation results in a signed overflow."),H),Q=["Do not set the CPSR flags based on the result of this instruction.","Set the CPSR flags based on the result of this instruction."];(function(t){t[t["LDR"]=0]="LDR",t[t["STR"]=1]="STR"})(G||(G={})),function(t){t[t["LDM"]=2]="LDM",t[t["STM"]=3]="STM"}(q||(q={})),function(t){t[t["POP"]=4]="POP",t[t["PUSH"]=5]="PUSH"}(Y||(Y={}));var K,tt={ldr:G.LDR,str:G.STR,ldm:q.LDM,stm:q.STM,push:Y.PUSH,pop:Y.POP},et=(W={},Object(g["a"])(W,G.LDR,"Load Single"),Object(g["a"])(W,G.STR,"Store Single"),Object(g["a"])(W,q.LDM,"Load Multiple"),Object(g["a"])(W,q.STM,"Store Multiple"),Object(g["a"])(W,Y.PUSH,"Stack Push"),Object(g["a"])(W,Y.POP,"Stack Pop"),$={},Object(g["a"])($,G.LDR,"Loads a single byte or word of data from memory."),Object(g["a"])($,G.STR,"Stores a single byte or work of data into memory."),Object(g["a"])($,q.LDM,"Loads multiple bytes or words of data from memory."),Object(g["a"])($,q.STM,"Stores multiple bytes or words of data into memory."),Object(g["a"])($,Y.PUSH,"Shorthand for storing multiple words to the stack."),Object(g["a"])($,Y.POP,"Shorthand for loading multiple words from the stack."),["ldm","stm","push","pop"]);(function(t){t[t["IA"]=0]="IA",t[t["DA"]=1]="DA",t[t["IB"]=2]="IB",t[t["DB"]=3]="DB"})(K||(K={}));var nt,it,rt,st,at={ia:K.IA,da:K.DA,ib:K.IB,db:K.DB},ot={increment:[K.IB,K.IA],decrement:[K.DB,K.DA],before:[K.IB,K.DB],after:[K.IA,K.DA]},ct={read:[G.LDR,q.LDM,Y.POP],write:[G.STR,q.STM,Y.PUSH]};n("84c3");(function(t){t[t["BYTE"]=0]="BYTE",t[t["HWORD"]=1]="HWORD",t[t["WORD"]=2]="WORD"})(st||(st={}));var lt,ut={".byte":st.BYTE,".hword":st.HWORD,".word":st.WORD,".asciz":st.BYTE,".skip":st.BYTE},dt=(nt={},Object(g["a"])(nt,st.BYTE,1),Object(g["a"])(nt,st.HWORD,2),Object(g["a"])(nt,st.WORD,4),nt),ht=(it={},Object(g["a"])(it,st.BYTE,8),Object(g["a"])(it,st.HWORD,16),Object(g["a"])(it,st.WORD,32),rt={},Object(g["a"])(rt,st.BYTE,Uint8Array),Object(g["a"])(rt,st.HWORD,Uint16Array),Object(g["a"])(rt,st.WORD,Uint32Array),rt);(function(t){t[t["TEXT"]=0]="TEXT",t[t["DATA"]=1]="DATA",t[t["EXTERN"]=2]="EXTERN",t[t["BALIGN"]=3]="BALIGN"})(lt||(lt={}));var pt,ft={".text":lt.TEXT,".data":lt.DATA,".extern":lt.EXTERN,".balign":lt.BALIGN};(function(t){t[t["PUTCHAR"]=0]="PUTCHAR",t[t["PUTS"]=1]="PUTS",t[t["PRINTF"]=2]="PRINTF",t[t["GETS"]=3]="GETS",t[t["SCANF"]=4]="SCANF",t[t["MALLOC"]=5]="MALLOC",t[t["CALLOC"]=6]="CALLOC",t[t["FREE"]=7]="FREE"})(pt||(pt={}));var mt,gt,bt,vt={putchar:pt.PUTCHAR,puts:pt.PUTS,printf:pt.PRINTF,gets:pt.GETS,scanf:pt.SCANF,malloc:pt.MALLOC,calloc:pt.CALLOC,free:pt.FREE},yt=-4,kt=n("8785"),wt=n("9224"),xt=function(t){return t.raw}(mt||(mt=Object(kt["a"])(["\n      ██╗  ██████╗   ██╗  ███████╗   ██████╗\n      ╚═╝  ██╔══██╗  ██║  ██╔════╝  ██╔════╝\n      ██║  ██████╔╝  ██║  ███████╗  ██║     \n      ██║  ██╔══██╗  ██║  ╚════██║  ██║     \n      ██║  ██║  ██║  ██║  ███████║  ╚██████╗\n      ╚═╝  ╚═╝  ╚═╝  ╚═╝  ╚══════╝   ╚═════╝\n      repl interface\n"])))[0],Tt='  <span class="internal">    <span class="d-inline-block" style="white-space: pre;">'.concat(xt,"</span>\n\n    Welcome to the iRISC ").concat(wt["a"]," repl interface.\n\n    Here you are able to execute single ARMv7 commands and immediately see the effect using a command-line interface.    Simply type a valid ARM instruction on the prompt below to begin.\n\n    Enter ':help' to see some other cool things you can do.  </span>\n  &nbsp;"),Ot='\n<span class="internal" style="white-space: pre;">\n<u>terminal help:</u>\n\n<div class="border-left">  :reset (:r) \t reset the simulator\n  :clear (:c) \t clear terminal output\n  :help  (:h) \t display help text\n</div>\n<div class="border-left">  ./src       \t run the program currently loaded in the editor\n              \t     \'ctrl + c\' to force exit a running program\n</div>\n<div class="border-left">  vi          \t switch to the editor using your favourite text editor\n  vim         \t     press \'esc\' to return to terminal from editor\n  nano        \t     provide a path as a parameter to open a specific file\n  nvim\n  emacs -nw\n  ne\n  micro\n  tilde</div>\n</span>',_t=["mov","mvn","tst","teq","cmp","cmn","and","eor","sub","rsb","add","adc","sbc","rsc","orr","bic","lsl","lsr","asr","ror","ldr","str","ldm","stm","push","pop","bx","bl","b"];(function(t){t[t["REGISTER"]=0]="REGISTER",t[t["IMMEDIATE"]=1]="IMMEDIATE"})(gt||(gt={})),function(t){t["TERMINAL"]="terminal",t["EDITOR"]="editor"}(bt||(bt={}));var Ct=n("2909"),Rt=n("d4ec"),St=n("bee2"),jt=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1/0,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];Object(Rt["a"])(this,t),Object(g["a"])(this,"storage",[]),this.capacity=e,this.autoRoll=n}return Object(St["a"])(t,[{key:"enqueue",value:function(t,e){if("function"===typeof e)for(var n=0;n<this.storage.length;n++)if(e(this.storage[n]))return this.storage[n]=t,void(this.storage=Object(Ct["a"])(this.storage));if(this.size()===this.capacity){if(!this.autoRoll)throw Error("Queue has reached max capacity, you cannot add more items");this.dequeue()}this.storage.push(t)}},{key:"dequeue",value:function(){return this.storage.shift()}},{key:"size",value:function(){return this.storage.length}},{key:"data",value:function(){return this.storage}}]),t}(),It=s["default"].observable({crtEffect:!1}),Et={settings:function(){return Object(m["a"])(Object(m["a"])({},It),{},{memSize:qe.memory().size,delay:qe.delay()})}},At={init:function(){var t=localStorage.getItem("settings");if(t){var e,n,i,r=JSON.parse(t);qe.setDelay(null!==(e=r.delay)&&void 0!==e?e:500),qe.init(null!==(n=r.memSize)&&void 0!==n?n:256),It.crtEffect=null!==(i=r.crtEffect)&&void 0!==i&&i}},setCrtEffect:function(t){It.crtEffect=t},updateStorage:function(){var t=Object(m["a"])(Object(m["a"])({},It),{},{delay:qe.delay(),memSize:qe.memory().size});localStorage.setItem("settings",JSON.stringify(t))}},Lt=Object(m["a"])(Object(m["a"])({},At),Et),Nt=n("57e4"),Dt=n("b8ca"),Mt=n("c197");function Pt(){var t=new Nt["a"].Tour({useModalOverlay:!0});t.addStep({title:"Welcome to iRISC",text:"Take a quick tour of the application to learn what everything is!",buttons:[{text:"skip it",action:function(){this.complete()}},{text:"start tour",action:function(){qe.reset(),this.next()}}]}),t.addStep({id:"terminal",attachTo:{element:'[tour-item="terminal"]',on:"bottom"},text:'\n\t\t\t<div>\n\t\t\t\tThis is the terminal. Here, you may execute individual instructions and immediately see their effect on the simulator.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tType \'<span class="token operation">mov</span> <span class="token register">r1</span>, <span class="token immediate">#1</span>\'\n\t\t\t\tinto the terminal and use the enter key to continue!\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]}}),t.addStep({attachTo:{element:'[tour-item="r1"]',on:"right"},floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"got it",action:function(){this.next()}}],when:{show:function(){var t,n,i=null===(t=Nt["a"].activeTour)||void 0===t?void 0:t.getCurrentStep(),r=null===i||void 0===i?void 0:i.getElement(),s=null===r||void 0===r?void 0:r.querySelector(".shepherd-content"),a=null===s||void 0===s?void 0:s.querySelector(".shepherd-button"),o=document.createElement("div");if(o.className="shepherd-text","mov r1, #1"===(null===(n=e.currentInstruction)||void 0===n?void 0:n.text))o.innerHTML='\n\t\t\t\t\t\t<div>Nice!</div> \n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class="mt-3">\n\t\t\t\t\t\t\tYou <span class="token operation">mov</span>ed the value <span class="token immediate">#1</span> \n\t\t\t\t\t\t\tinto register <span class="token register">r1</span>!\n\t\t\t\t\t\t</div>\n\t\t\t\t\t';else{var c=Object(Mt["highlight"])(e.currentInstruction.text,Mt["languages"].armv7,"ARMv7"),l=qe.registers()[k.R1];1===l?(o.innerHTML="\n\t\t\t\t\t\t\t<div>".concat(c,"?</div> \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"mt-3\">\n\t\t\t\t\t\t\t\tThere's a one in here at least, so that's something.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t"),a.innerHTML="your way was boring"):(o.innerHTML='\n\t\t\t\t\t\t\t<div>...</div> \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class="mt-3">\n\t\t\t\t\t\t\t\tGuess we\'ll just use '.concat(c," as our example instead...\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t"),a.innerText="oops")}null===s||void 0===s||s.insertBefore(o,s.querySelector(".shepherd-footer"))}}}),t.addStep({attachTo:{element:'[tour-item="assembler"]',on:"top"},text:'\n\t\t\t<div>\n\t\t\t\tThis is the <span class="text-irisc">assembler</span>. It gives detailed information about the last instruction.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tThe binary number at the top is the assembled bitcode for the last instruction. You can hover the different sections to learn\n\t\t\t\thow the computer decodes this bitcode for execution.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"okay",action:function(){this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="editor-switch"]',on:"bottom"},text:'\n\t\t\tClick this button to switch to the <span class="text-irisc">code editor</span>.\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},advanceOn:{selector:'[tour-item="editor-switch"]',event:"click"}}),t.addStep({id:"editor",attachTo:{element:'[tour-item="editor"]',on:"bottom"},text:'\n\t\t\t<div>\n\t\t\t\tThis is the <span class="text-irisc">code editor</span>. In here you can write simple scripts of assembly instructions or even full ARMv7 programs.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tYou can add breakpoints by clicking the line number of the instruction you want to break on.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tAdd a breakpoint to line #20 to continue.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},when:{hide:function(){qe.reset()}}}),t.addStep({attachTo:{element:'[tour-item="debugger"]',on:"bottom"},text:'\n\t\t\t<div>\n\t\t\t\tThese are the <span class="text-irisc">debug controls</span>.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tThe standard operations are included: run/pause, stop and step forward; \n\t\t\t\tbut also <u>step back</u> (<i class="fas fa-step-backward fa-xs token label"></i>) \n\t\t\t\tand a tick rate slider to control the length of time between CPU \'ticks\'.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(35)]},buttons:[{text:"righto",action:function(){this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="debug-run"]',on:"bottom"},text:'\n\t\t\tClick the <i class="fas fa-play fa-xs text-green"></i> button to run the program.\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},advanceOn:{selector:'[tour-item="debug-run"]',event:"click"},when:{show:function(){qe.setDelay(500)}}}),t.addStep({id:"run-program",attachTo:{element:'[tour-item="editor"]'},arrow:!1,canClickTarget:!1,classes:"d-none"}),t.addStep({attachTo:{element:'[tour-item="history"]',on:"right"},text:'\n\t\t\t<div>\n\t\t\t\tClick here to open the <span class="text-irisc">state history</span> modal.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},advanceOn:{selector:'[tour-item="history"]',event:"click"}}),t.addStep({attachTo:{element:'[tour-item="state-history"]',on:"right"},text:'\n\t\t\t<div>\n\t\t\t\tThis modal contains the complete <span class="text-irisc">state history</span> for the running program or terminal session.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tAfter every instruction execution, a snapshot is taken of the simulator state. This modal allows you to compare the differences\n\t\t\t\tand replay states right back to the start of execution.\n\t\t\t</div>\n\t\t',canClickTarget:!1,floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"cool",action:function(){this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="state-history-debug"]',on:"bottom"},text:'\n\t\t\t<div>\n\t\t\t\tThis popout debugger allows you to control the flow of the program without having to exit \n\t\t\t\tthe <span class="txet-irisc">state history</span> modal.\n\t\t\t</div>\n\t\t',highlightClass:"disabled",floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"nifty",action:function(){this.next()}}]}),t.addStep({id:"state-history-tick",attachTo:{element:'[tour-item="state-history-tick-1"]',on:"right"},text:"\n\t\t\t<div>\n\t\t\t\tClick on any previous state to restore the simulator back to the corresponding tick.\n\t\t\t</div>\n\t\t",floatingUIOptions:{middleware:[Object(Dt["a"])(15)]}}),t.addStep({attachTo:{element:'[tour-item="state-history-tick-1"]',on:"right"},text:"\n\t\t\t<div>\n\t\t\t\tNice one.\n\t\t\t</div>\n\t\t",canClickTarget:!1,floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"thanks?",action:function(){e.vueApp.$root.$emit("bv::hide::modal","state-history"),this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="memory"]',on:"top"},text:'\n\t\t\t<div>\n\t\t\t\tThis area displays the simulator memory. It is arranged like the virtual address space of a program running on your computer.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\t<span class="token register">Text</span>, <span class="token operation">data</span> (instructions and static variables), \n\t\t\t\tand the <span class="token label">heap</span> grow upwards from the lower addresses on the left, the <span class="token line-comment">stack</span> \n\t\t\t\tgrows down from the higher addresses on the right.\n\t\t\t</div>\n\t\t',canClickTarget:!1,floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"alrighty",action:function(){this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="memory-usage"] .region',on:"top"},text:'\n\t\t\t<div>\n\t\t\t\tThis section indicates the portion of memory used by the <span class="token register">text</span> (instructions) of the program\n\t\t\t\tin the <span class="text-irisc">code editor</span>.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tClick on any section of the memory usage visualiser to open the <span class="text-irisc">memory explorer</span>.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},advanceOn:{selector:'[tour-item="memory-usage"] .region',event:"click"}}),t.addStep({id:"memory-data",attachTo:{element:'[tour-item="memory-data"]',on:"right"},text:'\n\t\t\t<div>\n\t\t\t\tThis is the <span class="text-irisc">memory explorer</span>. It shows the actual data stored in each byte of the \n\t\t\t\tsimulated RAM.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t\tBytes are displayed line-by-line from left to right in ascending order of address.\n\t\t\t</div>\n\t\t',floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"okay, enough already",action:function(){e.vueApp.$root.$emit("bv::hide::modal","memory-explorer"),this.next()}}]}),t.addStep({attachTo:{element:'[tour-item="tutorial"]',on:"left"},text:"\n\t\t\t<div>\n\t\t\t\tFinally, there's a tutorial over here to help you get started with ARM assembly if you've never written any before.\n\t\t\t</div>\n\t\t",floatingUIOptions:{middleware:[Object(Dt["a"])(15)]},buttons:[{text:"whatever",action:function(){this.next()}}]}),t.addStep({title:"And that's it!",text:'\n\t\t\t<div>\n\t\t\t\t<i>Iff</i> you like this app or are interested in how it was made you can check the source code via the\n\t\t\t\t<u>src</u> link in the bottom right.\n\t\t\t</div>\n\n\t\t\t<div class="mt-3">\n\t\t\t <small>You can even star it if you like!</small>\n\t\t\t</div>\n\t\t',buttons:[{text:"finally!",action:function(){this.complete()}}]});var e=new s["default"]({computed:{currentTick:qe.currentTick,currentInstruction:qe.currentInstruction,breakpoints:qe.breakpoints,vueApp:qe.vue},methods:{isStep:function(e){var n;return(null===(n=t.getCurrentStep())||void 0===n?void 0:n.id)===e}},watch:{currentInstruction:function(e){this.isStep("terminal")&&e&&t.next()},breakpoints:function(e){this.isStep("editor")&&e.find((function(t){return 19===t.lineNumber}))&&(qe.removeBreakpoints(),qe.toggleBreakpoint(19),t.next())},currentTick:function(e){this.isStep("run-program")?3===e&&setTimeout((function(){return t.next()}),500):this.isStep("state-history-tick")&&1===e&&t.next()}}});return t}n("25f0");function Bt(t){var e=0,n="undefined"!==typeof window.getSelection;if(n){var i=window.getSelection();if(0!==(null===i||void 0===i?void 0:i.rangeCount)){var r=window.getSelection().getRangeAt(0),s=r.cloneRange();s.selectNodeContents(t),s.setEnd(r.endContainer,r.endOffset),e=s.toString().length}}return e}function Ft(t,e){var n=window.getSelection(),i=document.createRange();i.setStart(t.childNodes[0],e),i.collapse(!0),null===n||void 0===n||n.removeAllRanges(),null===n||void 0===n||n.addRange(i),t.focus()}n("cb29");var Ht=s["default"].observable({running:!1,paused:!1,step:!1,delay:500,cpu:{registers:new Uint32Array(new ArrayBuffer(64)),observableRegisters:Array(16).fill(0),cpsr:[!1,!1,!1,!1],tick:0},memory:{size:256,sizes:[128,256,512,1024,2048,4096],buffer:void 0,wordView:new Uint32Array,byteView:new Uint8Array,observableWordView:[],observableByteView:[],text:[],textHeight:0,textMap:{},dataHeight:0,dataTable:{},dataMap:new Map,heapHeight:0,heapMap:new Map,stackHeight:0},previousPC:0,currentInstruction:void 0,wasExecuted:!1,stdin:void 0,interrupted:!1,output:[""],errors:[],breakpoints:[],hoveredError:null,exitStatus:void 0,snapshots:new jt(500,!0),vue:void 0});n("90d7"),n("4d90");function Ut(t){return t=(4294967295&t)>>>0,Math.log2(t&-t)}function zt(t){return t=(4294967295&t)>>>0,Math.floor(Math.log2(t))}function Vt(t,e){return t>>>e|t<<32-e}function Wt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=$t(e);return n.substring(64-t).split("").map((function(t){return parseInt(t,10)})).reverse()}function $t(t){return t>=0?t.toString(2).padStart(64,"0"):(-t-1).toString(2).replace(/[01]/g,(function(t){return(+!+t).toString()})).padStart(64,"1")}var Gt,qt={tick:function(){Ht.cpu.tick++},setRegister:function(t,e){s["default"].set(Ht.cpu.registers,t,e),this.observeRegisters()},observeRegisters:function(){Ht.cpu.observableRegisters=Object(Ct["a"])(Ht.cpu.registers)},checkFlags:function(t){var e=Wt(4,t),n=Ht.cpu.cpsr,i=!1;switch(t){case R.EQ:case R.NE:i=n[U.Z];break;case R.CS:case R.CC:i=n[U.C];break;case R.MI:case R.PL:i=n[U.N];break;case R.VS:case R.VC:i=n[U.V];break;case R.HI:case R.LS:i=n[U.C]&&!n[U.Z];break;case R.GE:case R.LT:i=n[U.N]===n[U.V];break;case R.GT:case R.LE:i=n[U.N]===n[U.V]&&!n[U.Z];break;default:return!0}return 1===e[0]&&(i=!i),i},setFlags:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:" ",r=Wt(32,t)[31],a=Wt(32,e)[31],o=Wt(32,n)[31],c=Wt(33,n),l=[!1,!1,!1,!1];l[U.N]=1===c[31],l[U.Z]=0===(4294967295&n),"+"===i?(l[U.C]=1===c[32],l[U.V]=r===a&&r!==o):"-"===i&&(l[U.C]=!(1===c[32]),l[U.V]=r!==a&&a===o),s["default"].set(Ht.cpu,"cpsr",l)}},Yt=n("3835"),Zt=(n("fb6a"),n("257e")),Xt=n("262e"),Jt=n("2caf"),Qt=n("9072"),Kt="#de3759",te="#6A5ACD",ee="#ffbf00",ne=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){var a;return Object(Rt["a"])(this,n),a=e.call(this),Object(g["a"])(Object(Zt["a"])(a),"color",Kt),a.message=t,a.statement=i,a.lineNumber=r,a.tokenIndex=s,a}return Object(St["a"])(n,[{key:"type",get:function(){return"IriscError"}},{key:"constructHelper",value:function(){return"".concat(this.lineNumber+1," : ").concat(this.message)}},{key:"constructHelperHTML",value:function(){var t=this,e=this.statement.map((function(e,n){var i='\n          <span \n            class="token '.concat(e.alias," ").concat(e.type," ").concat(n===t.tokenIndex?"error":"",'"\n            style="text-decoration-color: ').concat(t.color,'"\n          >\n            ').concat(e.content,"\n          </span>\n        ");return 0!==n&&"comma"!==e.type?" ".concat(i):i})).join("");return' \n      <div style="color: '.concat(this.color,'">').concat(this.type,"</div>\n      <div>").concat(this.message,"</div>\n      ").concat(e?'\n            <div class="ml-4">\n              '.concat(this.lineNumber+1," : ").concat(e,"\n            </div>\n          "):"","\n    ")}}]),n}(Object(Qt["a"])(Error)),ie=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){return Object(Rt["a"])(this,n),e.call(this,t,i,r,s)}return Object(St["a"])(n,[{key:"type",get:function(){return"SyntaxError"}}],[{key:"badToken",value:function(t,e,i,r,s){return new n("".concat(t.toUpperCase()," value expected - received ").concat(e.type.toUpperCase()," '").concat(e.content,"' instead."),i,r,s)}}]),n}(ne),re=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){return Object(Rt["a"])(this,n),e.call(this,t,i,r,s)}return Object(St["a"])(n,[{key:"type",get:function(){return"NumericalError"}}]),n}(ne),se=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){var a;return Object(Rt["a"])(this,n),a=e.call(this,t,i,r,s),Object(g["a"])(Object(Zt["a"])(a),"color",ee),a}return Object(St["a"])(n,[{key:"type",get:function(){return"AssemblyError"}}]),n}(ne),ae=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){var a;return Object(Rt["a"])(this,n),a=e.call(this,t,i,r,s),Object(g["a"])(Object(Zt["a"])(a),"color",te),a}return Object(St["a"])(n,[{key:"type",get:function(){return"ReferenceError"}}]),n}(ne),oe=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r){var s;return Object(Rt["a"])(this,n),s=e.call(this,t,i,r,-1),Object(g["a"])(Object(Zt["a"])(s),"color",ee),s}return Object(St["a"])(n,[{key:"type",get:function(){return"RuntimeError"}}]),n}(ne),ce=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i,r,s){return Object(Rt["a"])(this,n),e.call(this,t,i,r,s)}return Object(St["a"])(n,[{key:"type",get:function(){return"InteractiveError"}}]),n}(ne),le=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t){return Object(Rt["a"])(this,n),e.call(this,t,[],-1,-1)}return Object(St["a"])(n,[{key:"type",get:function(){return"FileSystemError"}}]),n}(ne),ue={bi_operand:"bi-operand",tri_operand:"tri-operand",branch:"branch",shift:"shift",transfer:{single:"single-transfer",block:"block-transfer",stack:"stack-transfer"},string:"string",register:"register",immediate:"immediate",number:"number",indexer:"indexer",reg_list:"reg-list",comma:"comma",data_label:"data-label",sign:"sign",updating:"updating",label:"label",op_label:"op-label",directive:"directive",line_comment:"line-comment",end:"end",whitespace:"whitespace",unknown:"unknown"},de=function(){function t(e,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,t),this._statement=e,this._lineNumber=n,this._currentToken=i}return Object(St["a"])(t,[{key:"statement",get:function(){return this._statement}},{key:"lineNumber",get:function(){return this._lineNumber}},{key:"currentToken",get:function(){return this._currentToken}},{key:"previousToken",value:function(){if(this._currentToken>0)return this._statement[this._currentToken-1];throw new ie("Could not assemble instruction - please contact the developer.",this.statement,this.lineNumber,-1)}},{key:"nextToken",value:function(){if(this._currentToken<this._statement.length)return this._statement[this._currentToken++];throw new ie("Unexpected instruction end '"+this._statement[this._statement.length-1].content+"'.",this._statement,this._lineNumber,this._statement.length-1)}},{key:"peekToken",value:function(){if(this._currentToken<this._statement.length)return this._statement[this._currentToken];throw new ie("Unexpected instruction end '"+this._statement[this._statement.length-1].content+"'.",this._statement,this._lineNumber,this._statement.length-1)}},{key:"hasToken",value:function(){return this._currentToken<this._statement.length}},{key:"getToken",value:function(t){if(t<this._statement.length)return this._statement[t];throw new ie("Unexpected instruction end '"+this._statement[this._statement.length-1].content+"'.",this._statement,this._lineNumber,this._statement.length-1)}},{key:"parseComma",value:function(t){if("comma"==t.type)return!0;throw ie.badToken(ue.comma,t,this._statement,this._lineNumber,this._currentToken)}},{key:"parseReg",value:function(t){if("register"==t.type)return j[t.content];throw ie.badToken(ue.register,t,this._statement,this._lineNumber,this._currentToken)}},{key:"parseImm",value:function(t,e){if(t.type!=ue.immediate)throw ie.badToken(ue.immediate,t,this._statement,this._lineNumber,this._currentToken);return this.parseNum(t,e)}},{key:"parseNum",value:function(t,e){var n,i=0,r=Object(Ct["a"])(t.content).reverse();if("bin"==t.alias)i=2,n=r.findIndex((function(t){return!"01".includes(t)}));else if("oct"==t.alias)i=8,n=r.findIndex((function(t){return!"01234567".includes(t)}));else if("dec"==t.alias)i=10,n=r.findIndex((function(t){return!"0123456789".includes(t)}));else{if("hex"!=t.alias)throw ie.badToken(ue.immediate,t,this._statement,this._lineNumber,this._currentToken);i=16,n=r.findIndex((function(t){return!"0123456789abcdef".includes(t)}))}n=-1===n?r.length:n,n=r.length-n;var s=parseInt(t.content.slice(n),i);if(!e||s<Math.pow(2,e))return s;throw new re("IMMEDIATE value '"+t.content+"' (decimal "+s+") is greater than the "+e+"-bit maximum.",this._statement,this._lineNumber,this._currentToken)}},{key:"parseShiftedImm",value:function(t,e){var n=this.parseImm(t),i=0;if(0==n)return[n,i];if(n>4294967295)throw new re("IMMEDIATE value '".concat(t.content,"' (decimal ").concat(n,") cannot be represented in 32 bits."),this._statement,this._lineNumber,this._currentToken);var r=Ut(n),s=zt(n);if(s>31)throw new re("IMMEDIATE value '".concat(t.content,"' (decimal ").concat(n,") cannot be represented in 32 bits."),this._statement,this._lineNumber,this._currentToken);if(s-r>e-1){var a=this.isValidRolledCorner(t,n,e),o=Object(Yt["a"])(a,2);n=o[0],i=o[1]}else s>e-1&&(n=Vt(n,2*Math.floor((s-(e-2))/2)),i=32-2*Math.floor((s-(e-2))/2));if(i%2!==0)throw new re("The barrel shifter can only rotate an IMMEDIATE value by an even number of bits.",this._statement,this._lineNumber,this._currentToken);return[(255&n)>>>0,i]}},{key:"isValidRolledCorner",value:function(t,e,n){var i=(255&e)>>>0,r=2*Math.ceil((zt(i)+1)/2),s=Vt(e>>>0,r),a=Ut(s),o=zt(s);if(o-a>n-1)throw new re("IMMEDIATE value '".concat(t.content,"' (decimal ").concat(e,") cannot be implicitly represented with a maximum set-bit width of ").concat(n,"."),this._statement,this._lineNumber,this._currentToken);if(a<=23)throw new re("IMMEDIATE value '".concat(t.content," (decimal ").concat(e,") cannot be implicitly represented within 8 bits with the restriction that it is rotated an even number of times.\n\nThis is a complicated edge-case of the barrel shifter, well done for discovering it. If you would like to learn more, I suggest researching the rules of the barrel shifter yourself. The ARMv7-A reference manual should contain everything you need."),this._statement,this._lineNumber,this._currentToken);return[(255&Vt(s,24))>>>0,8-r]}}]),t}(),he=(n("498a"),function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(){return Object(Rt["a"])(this,n),e.apply(this,arguments)}return Object(St["a"])(n,[{key:"op",get:function(){return this._op}},{key:"cond",get:function(){return this._cond}},{key:"setFlags",get:function(){return this._setFlags}},{key:"text",get:function(){return this.statement.map((function(t){return t.content})).join(" ").replaceAll(/( (,|!|}|\]))|(({|\[|-) )/g,(function(t){return t.trim()}))}},{key:"splitOpCode",value:function(t){var e,n="",i="",r="",s=["cmp","cmn","tst","teq"];n=null!==(e=_t.find((function(e){return t.content.slice(0,e.length)===e})))&&void 0!==e?e:"";var a=t.content.substring(n.length);return 1!==a.length&&3!==a.length||(i=a[0],a=a.substring(1)),r=a,s.includes(n)&&(i="s"),[n,i,r]}},{key:"assemble",value:function(){return{bitcode:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],explanation:[{title:"Unsupported Instruction",subtitle:"Cannot assemble this instruction",detail:"The assembler is currently work-in-progress. Support for this instruction type is coming soon.",range:32}]}}}]),n}(de)),pe=(n("b64b"),function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Object(Rt["a"])(this,n),r=e.call(this,t,i,s),void 0===ft[r.peekToken().content])throw new ie("Unrecognised directive '".concat(r.peekToken().content,"'."),t,i,s);switch(r._directive=ft[r.nextToken().content],r._directive){case lt.EXTERN:r.parseExtern();break;case lt.BALIGN:r.parseBalign();break}if(r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid section declaration end."),t,i,s+1);return r}return Object(St["a"])(n,[{key:"directive",get:function(){return this._directive}},{key:"isText",get:function(){return this._directive===lt.TEXT}},{key:"isData",get:function(){return this._directive===lt.DATA}},{key:"isExtern",get:function(){return this._directive===lt.EXTERN}},{key:"identifier",get:function(){return this._identifier}},{key:"call",get:function(){return this._call}},{key:"value",get:function(){return this._value}},{key:"parseExtern",value:function(){if(void 0===vt[this.peekToken().content])throw new ie("\n        Expected a recognised external C function call identifier - received '".concat(this.peekToken().type,"' ").concat(this.peekToken().content,"' instead. \n        As of now, only [").concat(Object.keys(vt).join(", "),"] are supported."),this.statement,this.lineNumber,this.currentToken);this._identifier=this.nextToken().content,this._call=vt[this._identifier]}},{key:"parseBalign",value:function(){var t=this.parseNum(this.nextToken());this._value=t}}]),n}(de)),fe=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Object(Rt["a"])(this,n),r=e.call(this,t,i,s),r._identifier=r.nextToken().content.slice(0,-1),r._type=ut[r.peekToken().content],r._specificType=r.nextToken().content,r._data=r.parseData(),r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid data declaration end."),t,i,s);return r}return Object(St["a"])(n,[{key:"identifier",get:function(){return this._identifier}},{key:"data",get:function(){return new Uint8Array(this._data)}},{key:"type",get:function(){return this._specificType}},{key:"parseData",value:function(){if(".asciz"===this._specificType)return this.parseString(this.nextToken());if(".byte"===this._specificType)return this.parseIntArray(st.BYTE);if(".hword"===this._specificType)return this.parseIntArray(st.HWORD);if(".word"===this._specificType)return this.parseIntArray(st.WORD);if(".skip"===this._specificType)return this.parseSkip(this.nextToken());throw new ie("Unrecognised data type '".concat(this._specificType,"'."),this.statement,this.lineNumber,this._currentToken-1)}},{key:"parseString",value:function(t){if("string"!==t.type)throw ie.badToken(ue.string,t,this._statement,this._lineNumber,this._currentToken);for(var e=t.content.slice(1,-1),n=JSON.parse('"'.concat(e,'"')),i=new Uint8Array(new ArrayBuffer(n.length+1)),r=0;r<e.length;r++)i[r]=n.charCodeAt(r);return i}},{key:"parseIntArray",value:function(t){var e=[this.parseSignedInt()];while(this.hasToken())this.parseComma(this.nextToken()),e.push(this.parseSignedInt());var n=new ArrayBuffer(e.length*dt[t]),i=new ht[t](n);return e.forEach((function(t,e){return i[e]=t})),n}},{key:"parseSignedInt",value:function(){var t=!1,e=this.peekToken();e.type===ue.sign&&"minus"===e.alias&&(t=!0,this.nextToken());var n=this.parseNum(this.nextToken());return t?-n:n}},{key:"parseSkip",value:function(t){var e=this.parseNum(t);return new Uint8Array(new ArrayBuffer(e))}}]),n}(de),me=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s),Object(g["a"])(Object(Zt["a"])(r),"_immShift",0);var a=r.parseRegOrImm(),o=Object(Yt["a"])(a,2),c=o[0],l=o[1];return r._Rm=c,r._type=l,r.isReg&&r.hasToken()&&r.parseShift(),r}return Object(St["a"])(n,[{key:"isReg",get:function(){return this._type===gt.REGISTER}},{key:"isImm",get:function(){return this._type===gt.IMMEDIATE}},{key:"shifted",get:function(){return void 0!==this._Rs}},{key:"shiftedByReg",get:function(){return this._shiftType===gt.REGISTER}},{key:"shiftedByImm",get:function(){return this._shiftType===gt.IMMEDIATE}},{key:"shift",get:function(){return this._shift}},{key:"immShift",get:function(){return this._immShift}},{key:"parseRegOrImm",value:function(){var t,e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;try{t=this.parseReg(this.peekToken()),e=gt.REGISTER}catch(o){if(!(o instanceof ie))throw o}if(void 0===t)try{if(8==n){var i=this.parseShiftedImm(this.peekToken(),n),r=Object(Yt["a"])(i,2),s=r[0],a=r[1];t=s,this._immShift=a}else t=this.parseImm(this.peekToken(),n);e=gt.IMMEDIATE}catch(o){if(!(o instanceof ie))throw o}if(void 0===t||void 0===e)throw new ie("Expected either REGISTER or IMMEDIATE value - received ".concat(this.peekToken().type.toUpperCase()," '").concat(this.peekToken().content,"' instead."),this._statement,this._lineNumber,this._currentToken);return this.nextToken(),[t,e]}},{key:"parseShift",value:function(){if(this.parseComma(this.nextToken()),"shift"!==this.peekToken().type)throw new ie("The comma after the final operand indicates an optional shift, but no shift was found.",this._statement,this._lineNumber,this._currentToken);this._shift=z[this.nextToken().content];var t=this.parseRegOrImm(5),e=Object(Yt["a"])(t,2),n=e[0],i=e[1];this._Rs=n,this._shiftType=i}},{key:"unpack",value:function(){return[this._Rm,this._shift,this._Rs,this._immShift]}},{key:"assemble",value:function(){var t=0,e=[],n=this.unpack(),i=Object(Yt["a"])(n,4),r=i[0],s=i[1],a=i[2],o=i[3];if(this.isImm)t=t<<4|o/2,e.push({title:"Barrel Shifter",subtitle:0==o?"Not Shifted":"Rotated Right By ".concat(o),detail:"The amount by which the eight bit immediate value is rotated right, divided by two.",range:4}),t=t<<8|r,e.push({title:"Immediate",subtitle:"Value ".concat(r),detail:"An eight bit immediate value. This value, along with the barrel shift, forms the second operand.",range:8});else{if(!this.isReg)throw new se("Source operand Rm is neither a REGISTER nor IMMEDIATE value. This is most likely a parser bug.",this._statement,this._lineNumber,-1);if(this.shifted)if(this.shiftedByReg)t=t<<4|a,e.push({title:"Optional Shift Amount",subtitle:I[a],detail:"Shift by the value in "+I[a]+".",range:4}),t<<=1,e.push({title:"Unused Bit",subtitle:"",detail:"This bit is left unset because identifying the optional shift register only requires four bits.",range:1}),t=t<<2|s,e.push({title:"Optional Shift Operation",subtitle:V[s],detail:"The type of shift to perform on the flexible operand.",range:2}),t=t<<1|1,e.push({title:"Optional Shift Type",subtitle:"Register",detail:"The flexible operand is optionally shifted by a register value.",range:1});else{if(!this.shiftedByImm)throw new se("Optional shift operand Rs is neither a REGISTER nor IMMEDIATE value. Most likely a parser bug.",this._statement,this._lineNumber,-1);t=t<<5|a,e.push({title:"Optional Shift Amount",subtitle:"Immediate ".concat(a),detail:"Shift by the provided five bit immediate value (".concat(a,")."),range:5}),t=(t<<2|s)<<1,e.push({title:"Optional Shift Operation",subtitle:V[s],detail:"The type of shift to perform on the flexible operand.",range:2}),e.push({title:"Optional Shift Type",subtitle:"Immediate",detail:"The flexible operand is optionally shifted by an immediate value.",range:1})}else t<<=8,e.push({title:"No Optional Shift",subtitle:"N/A",detail:"The flexible operand is not optionally shifted.",range:8});t=t<<4|r,e.push({title:"Flexible Operand",subtitle:I[r],detail:"This operand has special properties in ARMv7. It can be either an immediate value or an optionally shifted register.",range:4})}return[t,e]}}]),n}(de),ge=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(){var t;Object(Rt["a"])(this,n);for(var i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return t=e.call.apply(e,[this].concat(r)),Object(g["a"])(Object(Zt["a"])(t),"_setFlags",!1),Object(g["a"])(Object(Zt["a"])(t),"_updating",!1),t}return Object(St["a"])(n,[{key:"isUpdating",get:function(){return this._updating}},{key:"isRead",get:function(){return ct.read.includes(this._op)}}]),n}(he),be=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s),Object(g["a"])(Object(Zt["a"])(r),"_setFlags",!1),Object(g["a"])(Object(Zt["a"])(r),"_sign","+"),Object(g["a"])(Object(Zt["a"])(r),"_addressMode","pre"),Object(g["a"])(Object(Zt["a"])(r),"_updating",!1);var a=r.splitOpCode(r.nextToken()),o=Object(Yt["a"])(a,3),c=o[0],l=o[1],u=o[2];if(r._op=tt[c],r._transferSize=0===l.length?"word":"byte",r._cond=D[u],r._Rd=r.parseReg(r.nextToken()),r.parseComma(r.nextToken()),r.parseAddressOrLabel(),r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid instruction end."),r._statement,r._lineNumber,r._currentToken+1);return r}return Object(St["a"])(n,[{key:"transferSize",get:function(){return this._transferSize}},{key:"isReg",get:function(){return"number"===typeof this._Rn}},{key:"isLiteral",get:function(){return"string"===typeof this._Rn}},{key:"literal",get:function(){if(!this.isLiteral)throw new ae("Tried to access reference where there was none. Contact the developer at contact@polysoftit.co.uk.",this.statement,this.lineNumber,-1);return this._Rn}},{key:"parseAddressOrLabel",value:function(){if("data-label"===this.peekToken().type)this._Rn=this.nextToken().content.slice(1);else{if("indexer"!==this.peekToken().type)throw new ie("Expected either ADDRESS EXPRESSION or =LABEL value - received '".concat(this.peekToken().type,"' ").concat(this.peekToken().content,"' instead."),this._statement,this._lineNumber,this._currentToken);this.parseAddressExpr()}}},{key:"parseAddressExpr",value:function(){this.parseIndexer(this.nextToken(),"start"),this._Rn=this.parseReg(this.nextToken());try{this.parseIndexer(this.peekToken(),"end"),this._addressMode="post",this._updating=!0,this.nextToken()}catch(i){if(!(i instanceof ie))throw i}var t=!1;try{if(this.parseComma(this.nextToken()),t=!0,this.peekToken(),"sign"===this.peekToken().type){var e=this.nextToken();this._sign=e.content}if("pre"===this._addressMode){var n=this.findEndIndexer();this._flex=new me(this.statement.slice(0,n),this.lineNumber,this._currentToken)}else this._flex=new me(this.statement,this.lineNumber,this._currentToken);this._currentToken=this._flex.currentToken}catch(i){if(t)throw i;if(!(i instanceof ie))throw i}if("post"!==this._addressMode){if(this.parseIndexer(this.nextToken(),"end"),this._addressMode="pre",this.hasToken()){if("updating"!==this.peekToken().type)throw new ie("Unexpected token '".concat(this.peekToken().content,"' after valid instruction end."),this._statement,this._lineNumber,this._currentToken);this._updating=!0,this.nextToken()}}else if(this.hasToken())throw new ie("Unexpected token '".concat(this.peekToken().content,"' after valid instruction end."),this._statement,this._lineNumber,this._currentToken+1)}},{key:"findEndIndexer",value:function(){for(var t=this._currentToken+1,e=this.getToken(t);;)try{return this.parseIndexer(e,"end"),t}catch(n){e=this.getToken(++t)}}},{key:"parseIndexer",value:function(t,e){if("indexer"!==t.type)throw new ie("Expected '[' or ']' to bound addressing syntax - received '".concat(t.content,"' instead."),this.statement,this.lineNumber,this._currentToken);if(t.alias!==e)throw new ie("Incorrect square bracket orientation - received '".concat(t.content,"'."),this.statement,this.lineNumber,this._currentToken)}},{key:"unpack",value:function(){return[this._op,this._cond,this._transferSize,this._Rd,this._Rn,this._sign,this._flex,this._addressMode,this._updating]}},{key:"assemble",value:function(){var t,e,n=0,i=[],s=this.isLiteral?r.generateLabelOffset(this.literal,this):0;n=n<<4|this._cond,i.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),n=n<<2|1,i.push({title:"Instruction Type",subtitle:"Single Transfer",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:2});var a=+!(null!==(t=null===(e=this._flex)||void 0===e?void 0:e.isImm)&&void 0!==t?t:this.isLiteral);n=n<<1|a,i.push({title:"FlexOperand Type",subtitle:a?"Register":"Immediate",detail:"Tells the processor if the flexible operand is an immediate value (0) or a register (1).",range:1});var o="pre"===this._addressMode?1:0;n=n<<1|o,i.push({title:"Pre/Post Indexing Bit",subtitle:o?"Pre-indexed addressing":"Post-indexed addressing",detail:"Tells the processor to use pre- (1) or post-index addressing mode for the transfer.",range:1});var c="+"===this._sign;this.isLiteral&&(c=s>0);var l=+c;n=n<<1|l,i.push({title:"Up/Down Bit",subtitle:l?"Up":"Down",detail:"Tells the processor to add (up, 1) or subtract (down, 0) the offset from the base register.",range:1});var u="byte"===this._transferSize?1:0;n=n<<1|u,i.push({title:"Byte/Word Bit",subtitle:u?"Byte":"Word",detail:"Tells the processor to index memory by bytes (1) or words (0).",range:1});var d=+this._updating;n=n<<1|d,i.push({title:"Write-back Bit",subtitle:d?"Updating":"Not updating",detail:"Tells the processor whether (1) or not (0) to update the base register after transferring the data.",range:1});var h=this._op===G.LDR?1:0;if(n=n<<1|h,i.push({title:"Load/Store Bit",subtitle:h?"Load":"Store",detail:"Tells the processor whether we are loading (1) or storing (0) data from/to memory.",range:1}),this.isReg)if(n=n<<4|this._Rn,i.push({title:"Second Operand",subtitle:I[this._Rn],detail:"The second operand in a transfer instruction is often referred to as the 'base' register.",range:4}),n=n<<4|this._Rd,i.push({title:"First Operand",subtitle:I[this._Rd],detail:"The first operand is often referred to as the 'destination' register.",range:4}),this._flex){var p=this._flex.assemble(),f=Object(Yt["a"])(p,2),m=f[0],g=f[1];n=n<<12|m,Array.prototype.push.apply(i,g)}else n<<=12,i.push({title:"Flex Operand",subtitle:"No offset",detail:"These bits are left unset because the base address has not been offset in any way.",range:12});else n=n<<4|k.PC,i.push({title:"Second Operand",subtitle:I[k.PC],detail:"The second operand is often referred to as a 'source' register.",range:4}),n=n<<4|this._Rd,i.push({title:"First Operand",subtitle:I[this._Rd],detail:"The first operand is often referred to as the 'destination' register.",range:4}),n<<=4,i.push({title:"Barrel Shifter",subtitle:"Not shifted",detail:"The amount by which the eight bit immediate value is rotated right.",range:4}),n=n<<8|Math.abs(s),i.push({title:"Immediate",subtitle:"Value ".concat(s),detail:"An eight bit immediate value. This value, along with the barrel shift, forms the second operand.",range:8});return{bitcode:Wt(32,n).reverse(),explanation:i}}}]),n}(ge),ve=(n("4de4"),n("07ac"),function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s),Object(g["a"])(Object(Zt["a"])(r),"_addressMode",K.IA),Object(g["a"])(Object(Zt["a"])(r),"_Rlist",[]),Object(g["a"])(Object(Zt["a"])(r),"_updating",!1);var a=r.splitBlockOpCode(r.nextToken()),o=Object(Yt["a"])(a,4),c=o[0],l=o[1],u=o[2],d=o[3];if(r._op=tt[c],r._cond=D[l],r._addressMode=at[u],d?r.parsePushPop():r.parseBaseReg(),r.parseRegList(),r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid instruction end."),r._statement,r._lineNumber,r._currentToken);return r}return Object(St["a"])(n,[{key:"splitBlockOpCode",value:function(t){var e,n="",i="",r="",s=null!==(e=et.find((function(e){return t.content.slice(0,e.length)===e})))&&void 0!==e?e:"",a=t.content.substring(s.length);switch(s){case"push":return["stm",a,"db",!0];case"pop":return["ldm",a,"ia",!0];default:n=s}return 4===a.length&&(r=a.substring(0,2),a=a.substring(2)),i=a,[n,r,i,!1]}},{key:"parseBaseReg",value:function(){this._Rn=this.parseReg(this.nextToken()),"updating"===this.peekToken().type&&(this._updating=!0,this.nextToken()),this.parseComma(this.nextToken())}},{key:"parsePushPop",value:function(){this._Rn=k.SP,this._updating=!0}},{key:"parseRegList",value:function(){this.parseBrace(this.nextToken(),"start");for(var t=this._statement.slice(this._currentToken),e=0;;){try{this._Rlist.push(this.parseReg(t[e++]))}catch(n){if(n instanceof ie)throw n.tokenIndex+=e,n}try{this.parseComma(t[e]),e++}catch(n){if(n instanceof ie||void 0===t[e])break;throw n}}this._Rlist.sort((function(t,e){return t-e})),this._currentToken+=e,this.parseBrace(this.nextToken(),"end")}},{key:"parseBrace",value:function(t,e){if("reg-list"!==t.type)throw new ie("Expected '{' or '}' to bound register list syntax - received '".concat(t.content,"' instead."),this.statement,this.lineNumber,this._currentToken);if(t.alias!==e)throw new ie("Incorrect brace orientation - received '".concat(t.content,"'."),this.statement,this.lineNumber,this._currentToken)}},{key:"unpack",value:function(){return[this._op,this._cond,this._Rn,this._Rlist,this._addressMode,this._updating]}},{key:"assemble",value:function(){var t=this,e=0,n=[];e=e<<4|this._cond,n.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),e=e<<3|4,n.push({title:"Instruction Type",subtitle:"Block Transfer",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:3});var i=ot.before.includes(this._addressMode)?1:0;e=e<<1|i,n.push({title:"Pre/Post Indexing Bit",subtitle:i?"Pre-indexed addressing":"Post-indexed addressing",detail:"Tells the processor to use pre- (1) or post- (0) indexed addressing mode for the transfer.",range:1});var r=ot.increment.includes(this._addressMode)?1:0;e=e<<1|r,n.push({title:"Up/Down Bit",subtitle:r?"Up":"Down",detail:"Tells the processor to add (up, 1) or subtract (down, 0) the offset from the base register.",range:1});var s=0;e=e<<1|s,n.push({title:"PSR & Force User Bit",subtitle:"Do not load PSR or force user mode",detail:"If you would like to learn more about this bit, go to https://iitd-plos.github.io/col718/ref/arm-instructionset.pdf",range:1});var a=+this._updating;e=e<<1|a,n.push({title:"Write-back Bit",subtitle:a?"Updating":"Not updating",detail:"Tells the processor whether (1) or not (0) to update the base register after transferring the data.",range:1});var o=this._op===q.LDM?1:0;e=e<<1|o,n.push({title:"Load/Store Bit",subtitle:o?"Load":"Store",detail:"Tells the processor whether we are loading (1) or storing (0) data from/to memory.",range:1}),e=e<<4|this._Rn,n.push({title:"First Operand",subtitle:I[this._Rn],detail:"The first operand in a transfer instruction is often referred to as the 'base' register.",range:4});var c=Object.values(k).filter((function(t){return!isNaN(Number(t))}));return c.forEach((function(n){var i=t._Rlist.includes(n)?1:0;e=e<<1|i})),n.push({title:"Register List",subtitle:this._Rlist.map((function(t){return E[t]})).join(", "),detail:"This section is made up of 16 bits, each referring to one of the registers r0 -> pc arranged in order from left to right. A set bit indicates that the register should be included in the transfer.",range:16}),{bitcode:Wt(32,e).reverse(),explanation:n}}}]),n}(ge)),ye=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s);var a=r.splitOpCode(r.nextToken()),o=Object(Yt["a"])(a,3),c=o[0],l=o[1],u=o[2];if(r._op=w[c],r._setFlags=0!==l.length,r._cond=D[u],r._Rd=r.parseReg(r.nextToken()),r.parseComma(r.nextToken()),r.peekToken(),r._flex=new me(t,i,r._currentToken),r._currentToken=r._flex.currentToken,r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid instruction end."),r._statement,r._lineNumber,r._currentToken+1);return r}return Object(St["a"])(n,[{key:"unpack",value:function(){return[this._op,this._cond,this._setFlags,this._Rd,this._flex]}},{key:"assemble",value:function(){var t=0,e=[];t=t<<4|this._cond,e.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),t<<=2,e.push({title:"Instruction Type",subtitle:"Arithmetic Operation",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:2});var n=+this._flex.isImm;t=t<<1|n,e.push({title:"FlexOperand Type",subtitle:this._flex.isImm?"Immediate":"Register",detail:"Tells the processor if the flexible operand is an immediate value (1) or a register (0).",range:1}),t=t<<4|this._op,e.push({title:"Operation Code",subtitle:x[this._op],detail:T[this._op],range:4});var i=+this._setFlags;t=t<<1|i,e.push({title:"CPSR Flags",subtitle:this._setFlags?"Set":"Not Set",detail:Q[i],range:1}),t<<=4,e.push({title:"Second Operand",subtitle:"Unused",detail:"These bits are left unset because the instruction only has two operands. The first, and the flexible operand.",range:4}),t=t<<4|this._Rd,e.push({title:"First Operand",subtitle:I[this._Rd],detail:"The first operand is often referred to as the 'destination' register.",range:4});var r=this._flex.assemble(),s=Object(Yt["a"])(r,2),a=s[0],o=s[1];return t=t<<12|a,Array.prototype.push.apply(e,o),{bitcode:Wt(32,t).reverse(),explanation:e}}}]),n}(he),ke=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s),Object(g["a"])(Object(Zt["a"])(r),"_setFlags",!1);var a=r.splitOpCode(r.nextToken()),o=Object(Yt["a"])(a,3),c=o[0],l=o[1],u=o[2];if(r._op=w[c],r._setFlags=0!==l.length,r._cond=D[u],r._Rd=r.parseReg(r.nextToken()),r.parseComma(r.nextToken()),r._Rn=r.parseReg(r.nextToken()),r.parseComma(r.nextToken()),r.peekToken(),r._flex=new me(t,i,r._currentToken),r._currentToken=r._flex.currentToken,r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid instruction end."),r._statement,r._lineNumber,r._currentToken+1);return r}return Object(St["a"])(n,[{key:"unpack",value:function(){return[this._op,this._cond,this._setFlags,this._Rd,this._Rn,this._flex]}},{key:"assemble",value:function(){var t=0,e=[];t=t<<4|this._cond,e.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),t<<=2,e.push({title:"Instruction Type",subtitle:"Arithmetic Operation",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:2});var n=+this._flex.isImm;t=t<<1|n,e.push({title:"FlexOperand Type",subtitle:this._flex.isImm?"Immediate":"Register",detail:"Tells the processor if the flexible operand is an immediate value (1) or a register (0).",range:1}),t=t<<4|this._op,e.push({title:"Operation Code",subtitle:x[this._op],detail:T[this._op],range:4});var i=+this._setFlags;t=t<<1|i,e.push({title:"CPSR Flags",subtitle:this._setFlags?"Set":"Not Set",detail:Q[i],range:1}),t=t<<4|this._Rn,e.push({title:"Second Operand",subtitle:I[this._Rn],detail:"The second operand is often referred to as a 'source' register.",range:4}),t=t<<4|this._Rd,e.push({title:"First Operand",subtitle:I[this._Rd],detail:"The first operand is often referred to as the 'destination' register.",range:4});var r=this._flex.assemble(),s=Object(Yt["a"])(r,2),a=s[0],o=s[1];return t=t<<12|a,Array.prototype.push.apply(e,o),{bitcode:Wt(32,t).reverse(),explanation:e}}}]),n}(he),we=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s);var a=r.splitOpCode(r.nextToken()),o=Object(Yt["a"])(a,3),c=o[0],l=o[1],u=o[2];r._op=z[c],r._setFlags=0!==l.length,r._cond=D[u],r._Rd=r.parseReg(r.nextToken()),r.parseComma(r.nextToken()),r._Rn=r.parseReg(r.nextToken()),r.parseComma(r.nextToken());var d=r.parseRegOrImm(),h=Object(Yt["a"])(d,2),p=h[0],f=h[1];return r._Rs=p,r._type=f,r}return Object(St["a"])(n,[{key:"isReg",get:function(){return this._type===gt.REGISTER}},{key:"isImm",get:function(){return this._type===gt.IMMEDIATE}},{key:"parseRegOrImm",value:function(){var t,e;try{t=this.parseReg(this.peekToken()),e=gt.REGISTER}catch(n){if(!(n instanceof ie))throw n}if(void 0===t)try{t=this.parseImm(this.peekToken(),5),e=gt.IMMEDIATE}catch(n){if(!(n instanceof ie))throw n}if(void 0===t||void 0===e)throw new ie("Expected either REGISTER or IMMEDIATE value - received ".concat(this.peekToken().type," '").concat(this.peekToken().content,"' instead."),this._statement,this._lineNumber,this._currentToken);return this.nextToken(),[t,e]}},{key:"unpack",value:function(){return[this._op,this._cond,this._setFlags,this._Rd,this._Rn,this._Rs]}}]),n}(he),xe=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Object(Rt["a"])(this,n),r=e.call(this,t,i,s),r._identifier=r.nextToken().content.slice(0,-1),r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid data declaration end."),t,i,s);return r}return Object(St["a"])(n,[{key:"identifier",get:function(){return this._identifier}}]),n}(de),Te=/\b(b|bl|bx)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i;Mt["languages"].armv7=(Gt={},Object(g["a"])(Gt,ue.string,{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/}),Object(g["a"])(Gt,ue.line_comment,{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0}),Object(g["a"])(Gt,ue.bi_operand,{pattern:/\b(cmn|cmp|mov|mvn|teq|tst)(s)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.tri_operand,{pattern:/\b(adc|add|and|bic|eor|orr|rsb|rsc|sbc|sub)(s)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.branch,{pattern:Te,alias:"operation"}),Object(g["a"])(Gt,ue.shift,{pattern:/\b(lsl|lsr|asr|ror|rrx)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.transfer.single,{pattern:/\b(str|ldr)(b)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.transfer.block,{pattern:/\b(stm|ldm)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(fd|ed|fa|ea|ia|ib|da|db)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.transfer.stack,{pattern:/\b(push|pop)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\b/i,alias:"operation"}),Object(g["a"])(Gt,ue.register,{pattern:/\b(r([0-9]|(10|11|12))|(sp|lr|pc))\b/i}),Object(g["a"])(Gt,ue.immediate,[{pattern:/#\b0x(\d|[a-f])+\b/i,alias:"hex"},{pattern:/#\b0b(0|1)+\b/i,alias:"bin"},{pattern:/#\b0[0-7]+\b/i,alias:"oct"},{pattern:/#\b(0d)?(\d)+\b/i,alias:"dec"}]),Object(g["a"])(Gt,ue.number,[{pattern:/\b0x(\d|[a-f])+\b/i,alias:"hex"},{pattern:/\b0b(0|1)+\b/i,alias:"bin"},{pattern:/\b0[0-7]+\b/i,alias:"oct"},{pattern:/\b(0d)?(\d)+\b/i,alias:"dec"}]),Object(g["a"])(Gt,ue.indexer,[{pattern:/\[/,alias:"start"},{pattern:/\]/,alias:"end"}]),Object(g["a"])(Gt,ue.reg_list,[{pattern:/\{/,alias:"start"},{pattern:/\}/,alias:"end"}]),Object(g["a"])(Gt,ue.comma,/,/),Object(g["a"])(Gt,ue.directive,/\.\b(text|data|global|extern|byte|hword|word|asciz|skip|balign)\b/m),Object(g["a"])(Gt,ue.data_label,/=\b[A-Za-z_][A-Za-z_\d]+\b/m),Object(g["a"])(Gt,ue.sign,[{pattern:/-/m,alias:"minus"},{pattern:/\+/m,alias:"plus"}]),Object(g["a"])(Gt,ue.updating,/!/m),Object(g["a"])(Gt,ue.label,/\b[A-Za-z_][A-Za-z_\d]+\b:/m),Object(g["a"])(Gt,ue.op_label,/\b[A-Za-z_][A-Za-z_\d]+\b/m),Object(g["a"])(Gt,ue.end,/\n/m),Object(g["a"])(Gt,ue.whitespace,/\s+/),Object(g["a"])(Gt,ue.unknown,/.+/),Gt);var Oe={headings:[["OCT","HEX","BIN","Symbol","Description"]],ascii:[["000","00","00000000","NUL","Null char"],["001","01","00000001","SOH","Start of Heading"],["002","02","00000010","STX","Start of Text"],["003","03","00000011","ETX","End of Text"],["004","04","00000100","EOT","End of Transmission"],["005","05","00000101","ENQ","Enquiry"],["006","06","00000110","ACK","Acknowledgment"],["007","07","00000111","BEL","Bell"],["010","08","00001000","BS","Back Space"],["011","09","00001001","HT","Horizontal Tab"],["012","0A","00001010","LF","Line Feed"],["013","0B","00001011","VT","Vertical Tab"],["014","0C","00001100","FF","Form Feed"],["015","0D","00001101","CR","Carriage Return"],["016","0E","00001110","SO","Shift Out / X-On"],["017","0F","00001111","SI","Shift In / X-Off"],["020","10","00010000","DLE","Data Line Escape"],["021","11","00010001","DC1","Device Control 1 (oft. XON)"],["022","12","00010010","DC2","Device Control 2"],["023","13","00010011","DC3","Device Control 3 (oft. XOFF)"],["024","14","00010100","DC4","Device Control 4"],["025","15","00010101","NAK","Negative Acknowledgement"],["026","16","00010110","SYN","Synchronous Idle"],["027","17","00010111","ETB","End of Transmit Block"],["030","18","00011000","CAN","Cancel"],["031","19","00011001","EM","End of Medium"],["032","1A","00011010","SUB","Substitute"],["033","1B","00011011","ESC","Escape"],["034","1C","00011100","FS","File Separator"],["035","1D","00011101","GS","Group Separator"],["036","1E","00011110","RS","Record Separator"],["037","1F","00011111","US","Unit Separator"],["040","20","00100000"," ","Space"],["041","21","00100001","!","Exclamation mark"],["042","22","00100010",'"',"Double quotes (or speech marks)"],["043","23","00100011","#","Number"],["044","24","00100100","$","Dollar"],["045","25","00100101","%","Per cent sign"],["046","26","00100110","&","&amp;","Ampersand"],["047","27","00100111","'","Single quote"],["050","28","00101000","(","Open parenthesis (or open bracket)"],["051","29","00101001",")","Close parenthesis (or close bracket)"],["052","2A","00101010","*","Asterisk"],["053","2B","00101011","+","Plus"],["054","2C","00101100",",","Comma"],["055","2D","00101101","-","Hyphen"],["056","2E","00101110",".","Period, dot or full stop"],["057","2F","00101111","/","Slash or divide"],["060","30","00110000","0","Zero"],["061","31","00110001","1","One"],["062","32","00110010","2","Two"],["063","33","00110011","3","Three"],["064","34","00110100","4","Four"],["065","35","00110101","5","Five"],["066","36","00110110","6","Six"],["067","37","00110111","7","Seven"],["070","38","00111000","8","Eight"],["071","39","00111001","9","Nine"],["072","3A","00111010",":","Colon"],["073","3B","00111011",";","Semicolon"],["074","3C","00111100","<","Less than (or open angled bracket)"],["075","3D","00111101","=","Equals"],["076","3E","00111110",">","Greater than (or close angled bracket)"],["077","3F","00111111","?","Question mark"],["100","40","01000000","@","At symbol"],["101","41","01000001","A","Uppercase A"],["102","42","01000010","B","Uppercase B"],["103","43","01000011","C","Uppercase C"],["104","44","01000100","D","Uppercase D"],["105","45","01000101","E","Uppercase E"],["106","46","01000110","F","Uppercase F"],["107","47","01000111","G","Uppercase G"],["110","48","01001000","H","Uppercase H"],["111","49","01001001","I","Uppercase I"],["112","4A","01001010","J","Uppercase J"],["113","4B","01001011","K","Uppercase K"],["114","4C","01001100","L","Uppercase L"],["115","4D","01001101","M","Uppercase M"],["116","4E","01001110","N","Uppercase N"],["117","4F","01001111","O","Uppercase O"],["120","50","01010000","P","Uppercase P"],["121","51","01010001","Q","Uppercase Q"],["122","52","01010010","R","Uppercase R"],["123","53","01010011","S","Uppercase S"],["124","54","01010100","T","Uppercase T"],["125","55","01010101","U","Uppercase U"],["126","56","01010110","V","Uppercase V"],["127","57","01010111","W","Uppercase W"],["130","58","01011000","X","Uppercase X"],["131","59","01011001","Y","Uppercase Y"],["132","5A","01011010","Z","Uppercase Z"],["133","5B","01011011","[","Opening bracket"],["134","5C","01011100","\\","Backslash"],["135","5D","01011101","]","Closing bracket"],["136","5E","01011110","^","Caret - circumflex"],["137","5F","01011111","_","Underscore"],["140","60","01100000","`","Grave accent"],["141","61","01100001","a","Lowercase a"],["142","62","01100010","b","Lowercase b"],["143","63","01100011","c","Lowercase c"],["144","64","01100100","d","Lowercase d"],["145","65","01100101","e","Lowercase e"],["146","66","01100110","f","Lowercase f"],["147","67","01100111","g","Lowercase g"],["150","68","01101000","h","Lowercase h"],["151","69","01101001","i","Lowercase i"],["152","6A","01101010","j","Lowercase j"],["153","6B","01101011","k","Lowercase k"],["154","6C","01101100","l","Lowercase l"],["155","6D","01101101","m","Lowercase m"],["156","6E","01101110","n","Lowercase n"],["157","6F","01101111","o","Lowercase o"],["160","70","01110000","p","Lowercase p"],["161","71","01110001","q","Lowercase q"],["162","72","01110010","r","Lowercase r"],["163","73","01110011","s","Lowercase s"],["164","74","01110100","t","Lowercase t"],["165","75","01110101","u","Lowercase u"],["166","76","01110110","v","Lowercase v"],["167","77","01110111","w","Lowercase w"],["170","78","01111000","x","Lowercase x"],["171","79","01111001","y","Lowercase y"],["172","7A","01111010","z","Lowercase z"],["173","7B","01111011","{","Opening brace"],["174","7C","01111100","|","Vertical bar"],["175","7D","01111101","}","Closing brace"],["176","7E","01111110","~","Equivalency sign - tilde"],["177","7F","01111111","","Delete"],["200","80","10000000","€","Euro sign"],["201","81","10000001"," ",""],["202","82","10000010","‚","Single low-9 quotation mark"],["203","83","10000011","ƒ","Latin small letter f with hook"],["204","84","10000100","„","Double low-9 quotation mark"],["205","85","10000101","…","Horizontal ellipsis"],["206","86","10000110","†","Dagger"],["207","87","10000111","‡","Double dagger"],["210","88","10001000","ˆ","Modifier letter circumflex accent"],["211","89","10001001","‰","Per mille sign"],["212","8A","10001010","Š","Latin capital letter S with caron"],["213","8B","10001011","‹","Single left-pointing angle quotation"],["214","8C","10001100","Œ","Latin capital ligature OE"],["215","8D","10001101"," "," "],["216","8E","10001110","Ž","Latin capital letter Z with caron"],["217","8F","10001111"," "," "],["220","90","10010000"," "," "],["221","91","10010001","‘","Left single quotation mark"],["222","92","10010010","’","Right single quotation mark"],["223","93","10010011","“","Left double quotation mark"],["224","94","10010100","”","Right double quotation mark"],["225","95","10010101","•","Bullet"],["226","96","10010110","–","En dash"],["227","97","10010111","—","Em dash"],["230","98","10011000","˜","Small tilde"],["231","99","10011001","™","Trade mark sign"],["232","9A","10011010","š","Latin small letter S with caron"],["233","9B","10011011","›","Single right-pointing angle quotation mark"],["234","9C","10011100","œ","Latin small ligature oe"],["235","9D","10011101"," "," "],["236","9E","10011110","ž","Latin small letter z with caron"],["237","9F","10011111","Ÿ","Latin capital letter Y with diaeresis"],["240","A0","10100000"," ","Non-breaking space"],["241","A1","10100001","¡","Inverted exclamation mark"],["242","A2","10100010","¢","Cent sign"],["243","A3","10100011","£","Pound sign"],["244","A4","10100100","¤","Currency sign"],["245","A5","10100101","¥","Yen sign"],["246","A6","10100110","¦","Pipe, Broken vertical bar"],["247","A7","10100111","§","Section sign"],["250","A8","10101000","¨","Spacing diaeresis - umlaut"],["251","A9","10101001","©","Copyright sign"],["252","AA","10101010","ª","Feminine ordinal indicator"],["253","AB","10101011","«","Left double angle quotes"],["254","AC","10101100","¬","Not sign"],["255","AD","10101101","­","Soft hyphen"],["256","AE","10101110","®","Registered trade mark sign"],["257","AF","10101111","¯","Spacing macron - overline"],["260","B0","10110000","°","Degree sign"],["261","B1","10110001","±","Plus-or-minus sign"],["262","B2","10110010","²","Superscript two - squared"],["263","B3","10110011","³","Superscript three - cubed"],["264","B4","10110100","´","Acute accent - spacing acute"],["265","B5","10110101","µ","Micro sign"],["266","B6","10110110","¶","Pilcrow sign - paragraph sign"],["267","B7","10110111","·","Middle dot - Georgian comma"],["270","B8","10111000","¸","Spacing cedilla"],["271","B9","10111001","¹","Superscript one"],["272","BA","10111010","º","Masculine ordinal indicator"],["273","BB","10111011","»","Right double angle quotes"],["274","BC","10111100","¼","Fraction one quarter"],["275","BD","10111101","½","Fraction one half"],["276","BE","10111110","¾","Fraction three quarters"],["277","BF","10111111","¿","Inverted question mark"],["300","C0","11000000","À","Latin capital letter A with grave"],["301","C1","11000001","Á","Latin capital letter A with acute"],["302","C2","11000010","Â","Latin capital letter A with circumflex"],["303","C3","11000011","Ã","Latin capital letter A with tilde"],["304","C4","11000100","Ä","Latin capital letter A with diaeresis"],["305","C5","11000101","Å","Latin capital letter A with ring above"],["306","C6","11000110","Æ","Latin capital letter AE"],["307","C7","11000111","Ç","Latin capital letter C with cedilla"],["310","C8","11001000","È","Latin capital letter E with grave"],["311","C9","11001001","É","Latin capital letter E with acute"],["312","CA","11001010","Ê","Latin capital letter E with circumflex"],["313","CB","11001011","Ë","Latin capital letter E with diaeresis"],["314","CC","11001100","Ì","Latin capital letter I with grave"],["315","CD","11001101","Í","Latin capital letter I with acute"],["316","CE","11001110","Î","Latin capital letter I with circumflex"],["317","CF","11001111","Ï","Latin capital letter I with diaeresis"],["320","D0","11010000","Ð","Latin capital letter ETH"],["321","D1","11010001","Ñ","Latin capital letter N with tilde"],["322","D2","11010010","Ò","Latin capital letter O with grave"],["323","D3","11010011","Ó","Latin capital letter O with acute"],["324","D4","11010100","Ô","Latin capital letter O with circumflex"],["325","D5","11010101","Õ","Latin capital letter O with tilde"],["326","D6","11010110","Ö","Latin capital letter O with diaeresis"],["327","D7","11010111","×","Multiplication sign"],["330","D8","11011000","Ø","Latin capital letter O with slash"],["331","D9","11011001","Ù","Latin capital letter U with grave"],["332","DA","11011010","Ú","Latin capital letter U with acute"],["333","DB","11011011","Û","Latin capital letter U with circumflex"],["334","DC","11011100","Ü","Latin capital letter U with diaeresis"],["335","DD","11011101","Ý","Latin capital letter Y with acute"],["336","DE","11011110","Þ","Latin capital letter THORN"],["337","DF","11011111","ß","Latin small letter sharp s - ess-zed"],["340","E0","11100000","à","Latin small letter a with grave"],["341","E1","11100001","á","Latin small letter a with acute"],["342","E2","11100010","â","Latin small letter a with circumflex"],["343","E3","11100011","ã","Latin small letter a with tilde"],["344","E4","11100100","ä","Latin small letter a with diaeresis"],["345","E5","11100101","å","Latin small letter a with ring above"],["346","E6","11100110","æ","Latin small letter ae"],["347","E7","11100111","ç","Latin small letter c with cedilla"],["350","E8","11101000","è","Latin small letter e with grave"],["351","E9","11101001","é","Latin small letter e with acute"],["352","EA","11101010","ê","Latin small letter e with circumflex"],["353","EB","11101011","ë","Latin small letter e with diaeresis"],["354","EC","11101100","ì","Latin small letter i with grave"],["355","ED","11101101","í","Latin small letter i with acute"],["356","EE","11101110","î","Latin small letter i with circumflex"],["357","EF","11101111","ï","Latin small letter i with diaeresis"],["360","F0","11110000","ð","Latin small letter eth"],["361","F1","11110001","ñ","Latin small letter n with tilde"],["362","F2","11110010","ò","Latin small letter o with grave"],["363","F3","11110011","ó","Latin small letter o with acute"],["364","F4","11110100","ô","Latin small letter o with circumflex"],["365","F5","11110101","õ","Latin small letter o with tilde"],["366","F6","11110110","ö","Latin small letter o with diaeresis"],["367","F7","11110111","÷","Division sign"],["370","F8","11111000","ø","Latin small letter o with slash"],["371","F9","11111001","ù","Latin small letter u with grave"],["372","FA","11111010","ú","Latin small letter u with acute"],["373","FB","11111011","û","Latin small letter u with circumflex"],["374","FC","11111100","ü","Latin small letter u with diaeresis"],["375","FD","11111101","ý","Latin small letter y with acute"],["376","FE","11111110","þ","Latin small letter thorn"],["377","FF","11111111","ÿ","Latin small letter y with diaeresis"]]},_e=function(t){Object(Xt["a"])(n,t);var e=Object(Jt["a"])(n);function n(t,i){var r,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(Rt["a"])(this,n),r=e.call(this,t,i,s),Object(g["a"])(Object(Zt["a"])(r),"_regex",Te);var a=r.splitOpCode(r.nextToken()),o=Object(Yt["a"])(a,3),c=o[0],l=o[1],u=o[2];if(r._op=w[c],r._setFlags=0!==l.length,r._cond=D[u],"register"===r.peekToken().type)r._Rd=r.parseReg(r.peekToken());else{if("op-label"!==r.peekToken().type)throw new ie("Expected either REGISTER or LABEL value - received '".concat(r.peekToken().type,"' ").concat(r.peekToken().content,"' instead."),t,i,s);r._Rd=r.peekToken().content}if(r.nextToken(),r.hasToken())throw new ie("Unexpected token '".concat(r.peekToken().content,"' after valid instruction end."),t,i,s+1);return r}return Object(St["a"])(n,[{key:"Rd",get:function(){return this._Rd}},{key:"splitOpCode",value:function(t){var e,n="",i="",r="",s=this._regex.exec(t.content);return n=s[1],r=null!==(e=s[2])&&void 0!==e?e:"",[n,i,r]}},{key:"unpack",value:function(){return[this._op,this._cond,this._Rd]}},{key:"assemble",value:function(){if(this._op===f.BX)return this.assembleBX();var t=0,e=[];t=t<<4|this._cond,e.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),t=t<<3|5,e.push({title:"Instruction Type",subtitle:"Branch",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:3});var n=this._op===f.BL?1:0;t=t<<1|n,e.push({title:"Link Bit",subtitle:n?"Link":"Do not link",detail:"Tells the processor to set the link register to the instruction after the branch so that it can be returned to.",range:1});var i=r.generateLabelOffset(this._Rd,this);return t=t<<24|16777215&i,e.push({title:"Offset",subtitle:"Value ".concat(i),detail:"A 24 bit encoding of the offset from the current PC to the label address. This actually works a little differently in real processors, but this is the gist.",range:24}),{bitcode:Wt(32,t).reverse(),explanation:e}}},{key:"assembleBX",value:function(){var t=0,e=[];return t=t<<4|this._cond,e.push({title:"Condition Code",subtitle:M[this._cond],detail:P[this._cond],range:4}),t=t<<24|1245169,e.push({title:"Instruction Type",subtitle:"Branch and exchange",detail:"Indicates the organisation of bits to the processor so that the instruction can be decoded.",range:24}),t=t<<4|this._Rd,e.push({title:"First Operand",subtitle:I[this._Rd],detail:"The first operand contains the address to which the processor should branch.",range:4}),{bitcode:Wt(32,t).reverse(),explanation:e}}}]),n}(he),Ce={align:function(t){return 8*Math.ceil(t/8)},store:function(t,e,n){if("word"===n){var i=new ArrayBuffer(4),r=new Uint32Array(i),s=new Uint8Array(i);r.set([t],0),Ht.memory.byteView.set(s,e)}else"byte"===n&&(Ht.memory.byteView[e]=t);this.observeMemory()},storeBytes:function(t,e){if(e+t.length>Ht.memory.size-Ht.memory.stackHeight)throw new oe("SIGSEG: Segmentation fault.",Ht.currentInstruction.statement,Ht.currentInstruction.lineNumber);Ht.memory.byteView.set(t,e),this.observeMemory()},observeMemory:function(){Ht.memory.observableByteView=Array.from(Ht.memory.byteView),Ht.memory.observableWordView=Array.from(Ht.memory.wordView)},getMemoryAccessRange:function(t,e){if(e||(e=Object(m["a"])(Object(m["a"])({},Ht),{},{key:0})),t instanceof ve){var n=t.unpack(),i=Object(Yt["a"])(n,6),r=(i[0],i[1],i[2]),s=i[3],a=i[4],o=(i[5],e.cpu.registers[r]),c=ot.increment.includes(a),l=s.length;return c?{base:o,limit:o+4*l}:{base:o-4*l,limit:o}}if(t instanceof be){var u,d=t.unpack(),h=Object(Yt["a"])(d,9),p=(h[0],h[1],h[2]),f=(h[3],h[4]),g=h[5];h[6],h[7],h[8];if(u="string"===typeof f?e.memory.dataTable[f]:e.cpu.registers[f],"word"===p)return"+"===g?{base:u,limit:u+4}:{base:u-4,limit:u};if("byte"===p)return"+"===g?{base:u,limit:u+1}:{base:u-1,limit:u}}}},Re=n("cd3f"),Se=n.n(Re),je=(n("96cf"),n("1da1")),Ie={start:function(){Ht.running?Ht.step||this.resume():(Ae.reinstateSnapshot(0),Ht.paused=!1,We.reset(),Ee.run())},stepForward:function(){Ht.running&&Ht.paused?this.setStep(!0):(this.pause(),Ht.running||(We.reset(),Ee.run()))},stepBack:function(){Ae.reinstateSnapshot(Ht.cpu.tick-1)},pause:function(){Ht.paused=!0},resume:function(){Ht.paused=!1},setStep:function(t){Ht.step=t},stop:function(){Ht.interrupted=!1,Ht.running=!1,Ht.paused=!1},setDelay:function(t){Ht.delay=t},addError:function(t){Ht.errors.push(t)},hoverError:function(t){Ht.hoveredError=t},unhoverError:function(){Ht.hoveredError=null},toggleBreakpoint:function(t){var e=Ht.memory.text.find((function(e){return e.lineNumber===t}));if(e){var n=Ht.breakpoints.find((function(t){return t.lineNumber===(null===e||void 0===e?void 0:e.lineNumber)}));n?Ht.breakpoints=Ht.breakpoints.filter((function(t){return t.lineNumber!==(null===n||void 0===n?void 0:n.lineNumber)})):Ht.breakpoints.push(e)}},removeBreakpoints:function(){Ht.breakpoints=[]},addOutput:function(t){Object(Ct["a"])(t).forEach((function(t){if("\n"===t)Ht.output.push("");else{var e=Ht.output.length-1,n=Ht.output[e];s["default"].set(Ht.output,e,"".concat(n).concat(t))}}))},setExitStatus:function(t){Ht.exitStatus=t,this.stop()}},Ee={run:function(){var t=Object(je["a"])(regeneratorRuntime.mark((function t(e){var n,i;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!(Ht.errors.length>0)){t.next=3;break}return Ht.vue.$root.$emit("bv::show::modal","errors-modal"),t.abrupt("return");case 3:e||(We.setEntryPoint(),Ve.setStackHeight(0),Ht.memory.heapMap=new Map,Ve.setHeapHeight()),Ht.running=!0,t.prev=5;case 6:if(!Ht.running){t.next=23;break}if(e){t.next=17;break}if(Ie.setStep(!1),n=Ve.instruction(Ht.cpu.registers[k.PC]),Ht.previousPC=Ht.cpu.registers[k.PC],qt.setRegister(k.PC,Ht.cpu.registers[k.PC]+4),void 0!==n){t.next=15;break}throw i=Ht.currentInstruction,new oe("SIGSEG: Segmentation fault.",i.statement,i.lineNumber);case 15:return t.next=17,r.execute(n);case 17:return e=!1,t.next=20,this.sleep();case 20:Ht.cpu.registers[k.PC]===Ht.memory.size+4?Ie.setExitStatus(0):function(){var t=Ve.instruction(Ht.cpu.registers[k.PC]);Ht.breakpoints.find((function(e){return e.lineNumber===t.lineNumber}))&&Ie.pause()}(),t.next=6;break;case 23:t.next=29;break;case 25:t.prev=25,t.t0=t["catch"](5),console.error(t.t0),t.t0 instanceof oe&&Ie.setExitStatus(t.t0);case 29:case"end":return t.stop()}}),t,this,[[5,25]])})));function e(e){return t.apply(this,arguments)}return e}(),sleep:function(){var t=Object(je["a"])(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e=0;case 1:if(!(e<Ht.delay||Ht.paused)||!Ht.running||Ht.step){t.next=7;break}return t.next=4,new Promise((function(t){return setTimeout(t,10)}));case 4:e+=10,t.next=1;break;case 7:return t.abrupt("return");case 8:case"end":return t.stop()}}),t)})));function e(){return t.apply(this,arguments)}return e}()},Ae={takeSnapshot:function(){var t={key:Date.now(),cpu:Se()(Ht.cpu),memory:Se()(Ht.memory),running:Ht.running,previousPC:Ht.previousPC,currentInstruction:Ht.currentInstruction,wasExecuted:Ht.wasExecuted,output:Se()(Ht.output),exitStatus:Se()(Ht.exitStatus)};Ht.snapshots.enqueue(t,(function(e){return e.cpu.tick===t.cpu.tick}))},reinstateSnapshot:function(t){if(!(t<0)){var e=Ht.snapshots.data().find((function(e){return e.cpu.tick===t}));if(!e)throw Error;var n=Ht.running;Ht.cpu=Se()(e.cpu);var i=new ArrayBuffer(e.memory.size),r=new Uint8Array(i);r.set(e.memory.byteView),Ht.memory=Object(m["a"])(Object(m["a"])({},Se()(e.memory)),{},{buffer:i,byteView:r,wordView:new Uint32Array(i)}),Ht.running=e.running,Ht.paused=!0,Ht.previousPC=e.previousPC,Ht.currentInstruction=e.currentInstruction,Ht.wasExecuted=e.wasExecuted,Ht.output=Se()(e.output),Ht.exitStatus=Se()(e.exitStatus),Ve.observeMemory(),e.running&&!n&&Ee.run(!0)}}},Le={setTextHeight:function(t){Ht.memory.textHeight=t},setInstructions:function(t){Ht.memory.text=t,this.validate(),t.forEach((function(t,e){try{var n=t.assemble().bitcode,i=parseInt(n.join(""),2);Ht.memory.wordView.set([i],e)}catch(r){console.warn("skipping instruction: ".concat(t.lineNumber," : ").concat(t.text))}})),Ht.currentInstruction=void 0,Ht.cpu.tick=0,Ve.observeMemory(),Ae.takeSnapshot()},instruction:function(t){if(t>Ht.memory.textHeight)throw new oe("SIGSEG: Segmentation fault.",[],-1);if(t%4!==0)throw new oe("SIGBUS: Bus error - misaligned access.",[],-1);return Ht.memory.text[t/4]},addLabel:function(t,e){s["default"].set(Ht.memory.textMap,t,e)},hasLabel:function(t){return void 0!==Ht.memory.textMap[t]},label:function(t){return Ht.memory.textMap[t]},setCurrentInstruction:function(t){Ht.currentInstruction=t},setExecuted:function(t){Ht.wasExecuted=t},validate:function(){Ht.memory.text.forEach((function(t){t instanceof xe?void 0===Ht.memory.textMap[t.identifier]&&Ie.addError(new ae("Missing reference to '".concat(t.identifier,"'."),t.statement,t.lineNumber,1)):t instanceof _e?"string"===typeof t.Rd&&void 0===Ht.memory.textMap[t.Rd]&&Ie.addError(new ae("Missing reference to '".concat(t.Rd,"'."),t.statement,t.lineNumber,1)):t instanceof be&&t.isLiteral&&void 0===Ht.memory.dataTable[t.literal]&&Ie.addError(new ae("Missing reference to '".concat(t.literal,"'."),t.statement,t.lineNumber,3))}))}},Ne={allocateData:function(t,e){var n=new Uint8Array(new ArrayBuffer(Ht.memory.size)),i={},r=new Map;t.forEach((function(t){n.set(t.data,t.offset);var e=Ht.memory.textHeight+t.offset;i[t.label]=e,r.set(e,t)}));try{var s;null===(s=Ht.memory.byteView)||void 0===s||s.set(n.slice(0,e),Ht.memory.textHeight)}catch(a){qe.addError(new se("Not enough memory to assemble program in editor.",[],-1,-1))}Ht.memory.dataHeight=4*Math.ceil(e/4),Ht.memory.dataTable=i,Ht.memory.dataMap=r},dataLabel:function(t){return Ht.memory.dataTable[t]}},De=n("b85c"),Me={running:function(){return Ht.running},paused:function(){return Ht.paused},step:function(){return Ht.step},delay:function(){return Ht.delay},currentTick:function(){return Ht.cpu.tick},registers:function(){return Ht.cpu.observableRegisters},cpsr:function(){return Ht.cpu.cpsr},memory:function(){return Object(m["a"])(Object(m["a"])({},Ht.memory),{},{exitPoint:Ht.memory.size+4})},byteView:function(){return Ht.memory.observableByteView},wordView:function(){return Ht.memory.observableWordView},heapBase:function(){return Ht.memory.textHeight+Ht.memory.dataHeight},currentInstruction:function(){return Ht.currentInstruction},previousPC:function(){return Ht.previousPC},wasExecuted:function(){return Ht.wasExecuted},interrupted:function(){return Ht.interrupted},stdin:function(){return Ht.stdin},output:function(){return Ht.output},errors:function(){return Ht.errors},breakpoints:function(){return Ht.breakpoints},hoveredError:function(){return Ht.hoveredError},exitStatus:function(){return Ht.exitStatus},snapshots:function(){return Ht.snapshots},vue:function(){return Ht.vue}},Pe={malloc:function(t){t=Ve.align(t);var e=Be(t);return e=e?Fe(e,t):He(Me.heapBase()+Ht.memory.heapHeight,t),e},calloc:function(t,e){e=Ve.align(t*e);var n=Be(e);return n?Fe(n,e):n=He(Me.heapBase()+Ht.memory.heapHeight,e),0!==n&&(Ue(n,e),Ve.observeMemory()),n},realloc:function(t,e){return 0},free:function(t){if(Ht.memory.heapMap.has(t)){var e=Ht.memory.heapMap.get(t);Ht.memory.heapMap.set(t,Object(m["a"])(Object(m["a"])({},e),{},{allocated:!1})),this.setHeapHeight()}},setHeapHeight:function(){var t=Me.heapBase();Ht.memory.heapMap.forEach((function(e,n){t>n+e.size||(t=n+e.size)})),Ht.memory.heapHeight=t-Ht.memory.textHeight-Ht.memory.dataHeight,Ht.memory.heapMap=new Map(Ht.memory.heapMap)}};function Be(t){var e,n=null,i=Object(De["a"])(Ht.memory.heapMap);try{for(i.s();!(e=i.n()).done;){var r=Object(Yt["a"])(e.value,2),s=r[0],a=r[1];if(!a.allocated&&!(t>a.size)){n=s;break}}}catch(o){i.e(o)}finally{i.f()}return n}function Fe(t,e){var n=Ht.memory.heapMap.get(t),i=n.size-e;return t=He(t,e),i>0&&He(t+e,i,!0),t}function He(t,e,n){return t+e>Ht.memory.size-Ht.memory.stackHeight?0:(Ht.memory.heapMap.set(t,{size:e,allocated:!n}),Ve.setHeapHeight(),t)}function Ue(t,e){var n=new Array(e).fill(0);Ht.memory.byteView.set(n,t)}var ze={setStackHeight:function(t){Ht.memory.stackHeight=t}},Ve=Object(m["a"])(Object(m["a"])(Object(m["a"])(Object(m["a"])(Object(m["a"])({},Ce),Le),Ne),Pe),ze),We={init:function(t){Ht.running=!1,Ht.paused=!1,Ht.step=!1,this.initMemory(t),this.reset()},setVueInstance:function(t){Ht.vue=t},reset:function(){Ht.cpu.registers=new Uint32Array(new ArrayBuffer(64)),qt.setRegister(k.SP,Ht.memory.size),qt.setRegister(k.LR,Ht.memory.size+4),qt.observeRegisters(),Ht.cpu.tick=0,Ht.cpu.cpsr=s["default"].observable([!1,!1,!1,!1]),Ht.stdin=void 0,Ht.interrupted=!1,Ht.output=[""],Ht.exitStatus=void 0,Ht.currentInstruction=void 0},initMemory:function(t){void 0!==t&&(Ht.memory.size=t),Ht.memory.textHeight=0,Ht.memory.textMap={},Ht.memory.dataHeight=0,Ht.memory.dataTable={},Ht.memory.heapHeight=0,Ht.memory.heapMap=new Map,Ht.memory.stackHeight=0,Ht.memory.text=[],Ht.memory.buffer=new ArrayBuffer(Ht.memory.size),Ht.memory.byteView=new Uint8Array(Ht.memory.buffer),Ht.memory.wordView=new Uint32Array(Ht.memory.buffer);var e=Array.from({length:Ht.memory.size},(function(){return Math.floor(256*Math.random())}));e.forEach((function(t,e){Ht.memory.byteView[e]=t})),Ve.observeMemory(),Ht.errors=[],Ht.exitStatus=void 0,Ht.snapshots=new jt(500,!0)},setEntryPoint:function(){Ve.hasLabel("main")&&qt.setRegister(k.PC,Ve.label("main"))}},$e={interrupt:function(){var t=Object(je["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return Ht.stdin=void 0,Ht.interrupted=!0,t.next=4,this.waitForIO();case 4:return t.abrupt("return",t.sent);case 5:case"end":return t.stop()}}),t,this)})));function e(){return t.apply(this,arguments)}return e}(),setStdin:function(t){Ht.stdin=t,Ie.addOutput(t),Ht.interrupted=!1},waitForIO:function(){var t=Object(je["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!Ht.interrupted){t.next=5;break}return t.next=3,new Promise((function(t){return setTimeout(t,100)}));case 3:t.next=0;break;case 5:return t.abrupt("return");case 6:case"end":return t.stop()}}),t)})));function e(){return t.apply(this,arguments)}return e}()},Ge=Object(m["a"])(Object(m["a"])(Object(m["a"])(Object(m["a"])(Object(m["a"])(Object(m["a"])({},We),qt),Ve),Ie),$e),Ae),qe=Object(m["a"])(Object(m["a"])({},Ge),Me);function Ye(t){return Object(Mt["tokenize"])(t,Mt["languages"].armv7).reduce((function(t,e){return e instanceof Mt["Token"]&&("end"===e.type?t.push([]):["whitespace","line-comment"].includes(e.type)||("string"===e.type?t[t.length-1].push(e):t[t.length-1].push(Object(m["a"])(Object(m["a"])({},e),{},{content:e.content.toLowerCase()})))),t}),[[]])}function Ze(t){return t.reduce((function(t,e,n){try{var i=Xe(e,n);null!==i&&t.push(i)}catch(e){e instanceof ne&&qe.addError(e)}return t}),[])}function Xe(t,e){if(0===t.length)return null;if("bi-operand"===t[0].type)return new ye(t,e,0);if("tri-operand"===t[0].type)return new ke(t,e,0);if("shift"===t[0].type)return new we(t,e,0);if("branch"===t[0].type)return new _e(t,e,0);if("label"===t[0].type)return 1===t.length?new xe(t,e,0):new fe(t,e,0);if("directive"===t[0].type)return new pe(t,e,0);if("single-transfer"===t[0].type)return new be(t,e,0);if("block-transfer"===t[0].type||"stack-transfer"===t[0].type)return new ve(t,e,0);if("op-label"===t[0].type)throw new ie("Invalid label-like token detected, did you forget a colon?",t,e,0);throw new ie("Unrecognised instruction.",t,e,0)}function Je(t){var e;(function(t){t[t["Text"]=0]="Text",t[t["Data"]=1]="Data"})(e||(e={}));var n=[],i=0,r=[],s=e.Text;if(t.forEach((function(t,a){if(t instanceof pe)switch(t.directive){case lt.TEXT:s=e.Text;break;case lt.DATA:s=e.Data;break;case lt.EXTERN:qe.addLabel(t.identifier,yt);break;case lt.BALIGN:i=Math.ceil(i/t.value)*t.value;break}else if(t instanceof fe){s!==e.Data&&qe.addError(new se("Cannot declare data allocations outside of the .data section.",t.statement,t.lineNumber,-1));var o=r.some((function(e){return e.label===t.identifier}));(qe.hasLabel(t.identifier)||o)&&qe.addError(new se("Cannot declare multiple labels with the same name: '".concat(t.identifier,"'."),t.statement,t.lineNumber,-1)),r.push({label:t.identifier,type:t.type,data:t.data,size:t.data.length,offset:i}),i+=t.data.length}else if(t instanceof xe){s!==e.Text&&qe.addError(new se("Cannot declare branchable labels outside of the .text section.",t.statement,t.lineNumber,0));var c=r.some((function(e){return e.label===t.identifier}));qe.hasLabel(t.identifier)||c?qe.addError(new se("Cannot declare multiple labels with the same name: '".concat(t.identifier,"'."),t.statement,t.lineNumber,0)):qe.addLabel(t.identifier,4*n.length)}else t instanceof he&&(s!==e.Text&&qe.addError(new se("Cannot declare instructions outside of the .text section.",t.statement,t.lineNumber,0)),n.push(t))})),n.length%2!==0){var a="andeq r0, r0, r0",o=Ye(a),c=Xe(o[0],-1);n.push(c)}qe.setTextHeight(4*n.length),qe.allocateData(r,i),qe.setInstructions(n)}function Qe(t){qe.stop(),qe.initMemory(),qe.removeBreakpoints();var e=Ye(t),n=Ze(e);Je(n)}n("b680"),n("5377");var Ke=n("53ca"),tn=n("3022"),en=function(t,e,n,i){var r,s,a=[],o=0;while(r=e.exec(t)){if(s=t.slice(o,e.lastIndex-r[0].length),s.length&&a.push(s),n){var c=n.apply(i,r.slice(1).concat(a.length));"undefined"!=typeof c&&("%"===c.specifier?a.push("%"):a.push(c))}o=e.lastIndex}return s=t.slice(o),s.length&&a.push(s),a},nn=function(t){this._mapped=!1,this._format=t,this._tokens=en(t,this._re,this._parseDelim,this)};nn.prototype._re=/%(?:\(([\w_.]+)\)|([1-9]\d*)\$)?([0 +\-#]*)(\*|\d+)?(?:(\.)(\*|\d+)?)?[hlL]?([%bscdeEfFgGioOuxX])/g,nn.prototype._parseDelim=function(t,e,n,i,r,s,a){return t&&(this._mapped=!0),{mapping:t,intmapping:e,flags:n,_minWidth:i,period:r,_precision:s,specifier:a}},nn.prototype._specifiers={b:{base:2,isInt:!0},o:{base:8,isInt:!0},x:{base:16,isInt:!0},X:{extend:["x"],toUpper:!0},d:{base:10,isInt:!0},i:{extend:["d"]},u:{extend:["d"],isUnsigned:!0},c:{setArg:function(t){if(!isNaN(t.arg)){var e=parseInt(t.arg);if(e<0||e>127)throw new Error("invalid character code passed to %c in printf");t.arg=isNaN(e)?""+e:String.fromCharCode(e)}}},s:{setMaxWidth:function(t){t.maxWidth="."==t.period?t.precision:-1}},e:{isDouble:!0,doubleNotation:"e"},E:{extend:["e"],toUpper:!0},f:{isDouble:!0,doubleNotation:"f"},F:{extend:["f"]},g:{isDouble:!0,doubleNotation:"g"},G:{extend:["g"],toUpper:!0},O:{isObject:!0}},nn.prototype.format=function(t){if(this._mapped&&"object"!=Object(Ke["a"])(t))throw new Error("format requires a mapping");for(var e,n="",i=0,r=0;r<this._tokens.length;r++)if(e=this._tokens[r],"string"==typeof e)n+=e;else{if(this._mapped){for(var s=e.mapping.split("."),a=t,o=0,c=s.length;o<c;o++)if(a=a[s[o]],"undefined"===typeof a)break;if("undefined"==typeof a)throw new Error("missing key '"+e.mapping+"'");e.arg=a}else{if(e.intmapping&&(i=parseInt(e.intmapping)-1),i>=arguments.length)throw new Error("got "+arguments.length+" printf arguments, insufficient for '"+this._format+"'");e.arg=arguments[i++]}if(!e.compiled){e.compiled=!0,e.sign="",e.zeroPad=!1,e.rightJustify=!1,e.alternative=!1;for(var l={},u=e.flags.length;u--;){var d=e.flags.charAt(u);switch(l[d]=!0,d){case" ":e.sign=" ";break;case"+":e.sign="+";break;case"0":e.zeroPad=!l["-"];break;case"-":e.rightJustify=!0,e.zeroPad=!1;break;case"#":e.alternative=!0;break;default:throw Error("bad formatting flag '"+e.flags.charAt(u)+"'")}}e.minWidth=e._minWidth?parseInt(e._minWidth):0,e.maxWidth=-1,e.toUpper=!1,e.isUnsigned=!1,e.isInt=!1,e.isDouble=!1,e.isObject=!1,e.precision=1,"."==e.period&&(e._precision?e.precision=parseInt(e._precision):e.precision=0);var h=this._specifiers[e.specifier];if("undefined"==typeof h)throw new Error("unexpected specifier '"+e.specifier+"'");if(h.extend){var p=this._specifiers[h.extend];for(var f in p)h[f]=p[f];delete h.extend}for(var m in h)e[m]=h[m]}if("function"==typeof e.setArg&&e.setArg(e),"function"==typeof e.setMaxWidth&&e.setMaxWidth(e),"*"==e._minWidth){if(this._mapped)throw new Error("* width not supported in mapped formats");if(e.minWidth=parseInt(arguments[i++]),isNaN(e.minWidth))throw new Error("the argument for * width at position "+i+" is not a number in "+this._format);e.minWidth<0&&(e.rightJustify=!0,e.minWidth=-e.minWidth)}if("*"==e._precision&&"."==e.period){if(this._mapped)throw new Error("* precision not supported in mapped formats");if(e.precision=parseInt(arguments[i++]),isNaN(e.precision))throw Error("the argument for * precision at position "+i+" is not a number in "+this._format);e.precision<0&&(e.precision=1,e.period="")}e.isInt?("."==e.period&&(e.zeroPad=!1),this.formatInt(e)):e.isDouble?("."!=e.period&&(e.precision=6),this.formatDouble(e)):e.isObject&&this.formatObject(e),this.fitField(e),n+=""+e.arg}return n},nn.prototype._zeros10="0000000000",nn.prototype._spaces10="          ",nn.prototype.formatInt=function(t){var e=parseInt(t.arg);if(!isFinite(e)){if("number"!=typeof t.arg)throw new Error("format argument '"+t.arg+"' not an integer; parseInt returned "+e);e=0}e<0&&(t.isUnsigned||10!=t.base)&&(e=4294967295+e+1),e<0?(t.arg=(-e).toString(t.base),this.zeroPad(t),t.arg="-"+t.arg):(t.arg=e.toString(t.base),e||t.precision?this.zeroPad(t):t.arg="",t.sign&&(t.arg=t.sign+t.arg)),16==t.base&&(t.alternative&&(t.arg="0x"+t.arg),t.arg=t.toUpper?t.arg.toUpperCase():t.arg.toLowerCase()),8==t.base&&t.alternative&&"0"!=t.arg.charAt(0)&&(t.arg="0"+t.arg)},nn.prototype.formatDouble=function(t){var e=parseFloat(t.arg);if(!isFinite(e)){if("number"!=typeof t.arg)throw new Error("format argument '"+t.arg+"' not a float; parseFloat returned "+e);e=0}switch(t.doubleNotation){case"e":t.arg=e.toExponential(t.precision);break;case"f":t.arg=e.toFixed(t.precision);break;case"g":Math.abs(e)<1e-4?t.arg=e.toExponential(t.precision>0?t.precision-1:t.precision):t.arg=e.toPrecision(t.precision),t.alternative||(t.arg=t.arg.replace(/(\..*[^0])0*e/,"$1e"),t.arg=t.arg.replace(/\.0*e/,"e").replace(/\.0$/,""));break;default:throw new Error("unexpected double notation '"+t.doubleNotation+"'")}t.arg=t.arg.replace(/e\+(\d)$/,"e+0$1").replace(/e-(\d)$/,"e-0$1"),t.alternative&&(t.arg=t.arg.replace(/^(\d+)$/,"$1."),t.arg=t.arg.replace(/^(\d+)e/,"$1.e")),e>=0&&t.sign&&(t.arg=t.sign+t.arg),t.arg=t.toUpper?t.arg.toUpperCase():t.arg.toLowerCase()},nn.prototype.formatObject=function(t){var e="."===t.period?t.precision:null;t.arg=tn.inspect(t.arg,{showHidden:!t.alternative,depth:e,colors:t.sign,compact:!0})},nn.prototype.zeroPad=function(t,e){e=2==arguments.length?e:t.precision;var n=!1;"string"!=typeof t.arg&&(t.arg=""+t.arg),"-"===t.arg.substr(0,1)&&(n=!0,t.arg=t.arg.substr(1));var i=e-10;while(t.arg.length<i)t.arg=t.rightJustify?t.arg+this._zeros10:this._zeros10+t.arg;var r=e-t.arg.length;t.arg=t.rightJustify?t.arg+this._zeros10.substring(0,r):this._zeros10.substring(0,r)+t.arg,n&&(t.arg="-"+t.arg)},nn.prototype.fitField=function(t){t.maxWidth>=0&&t.arg.length>t.maxWidth&&(t.arg=t.arg.substring(0,t.maxWidth)),t.zeroPad?this.zeroPad(t,t.minWidth):this.spacePad(t)},nn.prototype.spacePad=function(t,e){e=2==arguments.length?e:t.minWidth,"string"!=typeof t.arg&&(t.arg=""+t.arg);var n=e-10;while(t.arg.length<n)t.arg=t.rightJustify?t.arg+this._spaces10:this._spaces10+t.arg;var i=e-t.arg.length;t.arg=t.rightJustify?t.arg+this._spaces10.substring(0,i):this._spaces10.substring(0,i)+t.arg};var rn=function(){var t,e,i=Array.prototype.slice.call(arguments);i[0]instanceof n("d485").Stream&&(t=i.shift()),e=i.shift();var r=new nn(e),s=r.format.apply(r,i);if(!t)return s;t.write(s)},sn=function(t){var e=new nn(t);return e._tokens.filter((function(t){return"string"!=typeof t}))};function an(){var t=[],e=On.registers[k.R0];while(0!==On.memory.byteView[e])t.push(String.fromCharCode(On.memory.byteView[e])),e++;var n=t.join(""),i=sn(n),r=!1,s=k.R1,a=0,o=i.map((function(t,e){var n,i=s,o=a;if(!r&&s>k.R3&&(r=!0),r){var c=qe.currentInstruction();throw new oe("Passing arguments to printf via the stack is not yet supported. Coming soon!",c.statement,c.lineNumber)}if("c"===t.specifier){var l=on(r,s,a),u=Object(Yt["a"])(l,3);n=u[0],i=u[1],o=u[2]}else if("s"===t.specifier){var d=cn(r,s,a),h=Object(Yt["a"])(d,3);n=h[0],i=h[1],o=h[2]}else{if(!["i","d"].includes(t.specifier)){var p=qe.currentInstruction();throw new oe("printf format strings with specifiers other than %c, %s, %d and %i are not yet supported.",p.statement,p.lineNumber)}var f=ln(r,s,a),m=Object(Yt["a"])(f,3);n=m[0],i=m[1],o=m[2]}return s=i,a=o,n})),c=rn.apply(void 0,[n].concat(Object(Ct["a"])(o)));return qe.addOutput(c),wn(),qe.setRegister(k.R0,c.length),!0}function on(t,e,n){var i;if(t){var r=On.registers[k.R11];i=String.fromCharCode(On.memory.byteView[r+n]),n+=4}else i=String.fromCharCode(On.registers[e]),e+=1;return[i,e,n]}function cn(t,e,n){var i;if(t){var r=On.registers[k.R11];i=On.memory.byteView[r+n],n+=4}else i=On.registers[e],e+=1;var s=[];while(0!==On.memory.byteView[i])s.push(String.fromCharCode(On.memory.byteView[i])),i++;var a=s.join("");return[a,e,n]}function ln(t,e,n){var i,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];if(t){var s=On.registers[k.R11];i=On.memory.wordView[(s+n)/4],n+=4}else i=r?-(1+~On.registers[e]):On.registers[e],e+=1;return[i,e,n]}function un(){var t=On.registers[k.R0];return qe.addOutput(String.fromCharCode(t)),wn(),qe.setRegister(k.R0,t),!0}function dn(){var t=[],e=On.registers[k.R0];while(0!==On.memory.byteView[e])t.push(String.fromCharCode(On.memory.byteView[e])),e++;var n=t.join("");return qe.addOutput("".concat(n,"\n")),wn(),qe.setRegister(k.R0,1),!0}function hn(){return pn.apply(this,arguments)}function pn(){return pn=Object(je["a"])(regeneratorRuntime.mark((function t(){var e,n,i;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,qe.interrupt();case 2:return e=On.registers[k.R0],n=qe.stdin()+String.fromCharCode(0),i=Object(Ct["a"])(n).map((function(t,e){return n.charCodeAt(e)})),qe.storeBytes(i,e),wn(),qe.setRegister(k.R0,e),t.abrupt("return",!0);case 9:case"end":return t.stop()}}),t)}))),pn.apply(this,arguments)}n("a623"),n("8ba4"),n("9129");var fn=n("6aed"),mn=(fn.scanf,fn.sscanf);function gn(){return bn.apply(this,arguments)}function bn(){return bn=Object(je["a"])(regeneratorRuntime.mark((function t(){var e,n,i,r,s,a,o,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,qe.interrupt();case 2:if(e=qe.stdin(),void 0!==e){t.next=6;break}return qe.setRegister(k.R0,-1),t.abrupt("return",!0);case 6:n=[],i=On.registers[k.R0];while(0!==On.memory.byteView[i])n.push(String.fromCharCode(On.memory.byteView[i])),i++;if(r=n.join(""),s=mn(e,r),!s.every((function(t){return null==t||Number.isNaN(t)}))){t.next=14;break}return qe.setRegister(k.R0,-1),t.abrupt("return",!0);case 14:return a=!1,o=k.R1,c=0,s.forEach((function(t){var e=On.registers[o],n=c;if(!a&&o>k.R3&&(a=!0),a){var i=qe.currentInstruction();throw new oe("Passing arguments to printf via the stack is not yet supported. Coming soon!",i.statement,i.lineNumber)}if("number"===typeof t){if(!Number.isInteger(t)){var r=qe.currentInstruction();throw new oe("Floats and doubles are not yet supported by iRISC. Maybe someday eh?",r.statement,r.lineNumber)}qe.store(t,e,"word")}else if("string"===typeof t)if(t.length>1){var s=Object(Ct["a"])(t).map((function(e,n){return t.charCodeAt(n)}));qe.storeBytes(s,e)}else qe.store(t.charCodeAt(0),e,"byte");o+=1,c=n})),t.abrupt("return",!0);case 19:case"end":return t.stop()}}),t)}))),bn.apply(this,arguments)}function vn(){var t=On.registers[k.R0],e=qe.malloc(t);return wn(),qe.setRegister(k.R0,e),!0}function yn(){var t=On.registers[k.R0],e=On.registers[k.R1],n=qe.calloc(t,e);return wn(),qe.setRegister(k.R0,n),!0}function kn(){var t=On.registers[k.R0];return qe.free(t),wn(),!0}function wn(){var t=256;qe.setRegister(k.R0,Math.floor(Math.random()*t)),qe.setRegister(k.R1,Math.floor(Math.random()*t)),qe.setRegister(k.R2,Math.floor(Math.random()*t)),qe.setRegister(k.R3,Math.floor(Math.random()*t))}function xn(t,e){return Tn.apply(this,arguments)}function Tn(){return Tn=Object(je["a"])(regeneratorRuntime.mark((function t(e,n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n!==pt.PUTCHAR){t.next=2;break}return t.abrupt("return",un());case 2:if(n!==pt.PUTS){t.next=4;break}return t.abrupt("return",dn());case 4:if(n!==pt.PRINTF){t.next=6;break}return t.abrupt("return",an());case 6:if(n!==pt.GETS){t.next=10;break}return t.next=9,hn();case 9:return t.abrupt("return",t.sent);case 10:if(n!==pt.SCANF){t.next=14;break}return t.next=13,gn();case 13:return t.abrupt("return",t.sent);case 14:if(n!==pt.MALLOC){t.next=16;break}return t.abrupt("return",vn());case 16:if(n!==pt.CALLOC){t.next=18;break}return t.abrupt("return",yn());case 18:if(n!==pt.FREE){t.next=20;break}return t.abrupt("return",kn());case 20:throw new oe("Attempted to branch to unrecognised function call. This is likely an error with iRISC. Please inform the developers.",e.statement,e.lineNumber);case 21:case"end":return t.stop()}}),t)}))),Tn.apply(this,arguments)}var On={get registers(){return qe.registers()},get cpsr(){return qe.cpsr()},get memory(){return qe.memory()},get previousPC(){return qe.previousPC()},get breakpoints(){return qe.breakpoints()}};function _n(t){return Cn.apply(this,arguments)}function Cn(){return Cn=Object(je["a"])(regeneratorRuntime.mark((function t(e){var n,i=arguments;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!(i.length>1&&void 0!==i[1])||i[1],n=!1,qe.setCurrentInstruction(e),!(e instanceof _e)){t.next=7;break}return t.next=6,An(e);case 6:n=t.sent;case 7:return e instanceof ye&&(n=jn(e)),e instanceof ke&&(n=In(e)),e instanceof we&&(n=En(e)),e instanceof be&&(n=Nn(e)),e instanceof ve&&(n=Dn(e)),qe.tick(),qe.setExecuted(n),qe.takeSnapshot(),t.abrupt("return",n);case 16:case"end":return t.stop()}}),t)}))),Cn.apply(this,arguments)}function Rn(t){var e,n,i=t.unpack(),r=Object(Yt["a"])(i,4),s=r[0],a=r[1],o=r[2],c=r[3];if(t.isImm)return Vt(s,c);(e=On.registers[s],t.shifted)&&(n=t.shiftedByImm?o:On.registers[o],e=Sn(a,e,n));return e}function Sn(t,e,n){switch(t){case N.LSL:return e<<n;case N.LSR:return 0==n&&(n=32),e>>>n;case N.ASR:return e>>n;case N.ROR:return Vt(e,n);default:var i=On.memory.text[On.registers[k.PC]];throw new oe("While attempting to perform a flex operand optional shift.",i.statement,i.lineNumber)}}function jn(t){var e=t.unpack(),n=Object(Yt["a"])(e,5),i=n[0],r=n[1],s=n[2],a=n[3],o=n[4];if(!qe.checkFlags(r))return!1;var c=Rn(o);switch(i){case f.MOV:s&&qe.setFlags(On.registers[a],c,c),qe.setRegister(a,c);break;case f.MVN:s&&qe.setFlags(On.registers[a],-c,-c),qe.setRegister(a,-c);break;case f.CMP:qe.setFlags(On.registers[a],c,On.registers[a]-c,"-");break;case f.CMN:qe.setFlags(On.registers[a],c,On.registers[a]+c,"+");break;case f.TST:qe.setFlags(On.registers[a],c,On.registers[a]&c);break;case f.TEQ:qe.setFlags(On.registers[a],c,On.registers[a]^c);break}return!0}function In(t){var e=t.unpack(),n=Object(Yt["a"])(e,6),i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],c=n[5];if(!qe.checkFlags(r))return!1;var l,u=On.registers[o],d=Rn(c);switch(i){case f.AND:s&&qe.setFlags(u,d,u&d),l=u&d;break;case f.EOR:s&&qe.setFlags(u,d,u^d),l=u^d;break;case f.ORR:s&&qe.setFlags(u,d,u|d),l=u|d;break;case f.ADD:s&&qe.setFlags(u,d,u+d,"+"),l=u+d;break;case f.SUB:s&&qe.setFlags(u,d,u-d,"-"),l=u-d;break;case f.RSB:s&&qe.setFlags(d,u,d-u,"-"),l=d-u;break;case f.BIC:s&&qe.setFlags(d,u,u&~d),l=u&~d;break;case f.ADC:l=u+d+(On.cpsr[U.C]?1:0),s&&qe.setFlags(u,d,u+d+(On.cpsr[U.C]?1:0),"+");break;case f.SBC:l=u-d-(On.cpsr[U.C]?0:1),s&&qe.setFlags(u,d,u-d-(On.cpsr[U.C]?0:1),"-");break;case f.RSC:l=d-u-(On.cpsr[U.C]?0:1),s&&qe.setFlags(u,d,d-u-(On.cpsr[U.C]?0:1),"-");break}if(void 0===l){var h=On.memory.text[On.registers[k.PC]];throw new oe("While attempting to perform a '".concat(x[i],"' instruction."),h.statement,h.lineNumber)}return qe.setRegister(a,l),!0}function En(t){var e=t.unpack(),n=Object(Yt["a"])(e,6),i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],c=n[5];if(!qe.checkFlags(r))return!1;var l,u,d=On.registers[o];switch(l=t.isReg?On.registers[c]:c,i){case N.LSL:s&&qe.setFlags(d,l,d<<l),u=d<<l;break;case N.LSR:s&&qe.setFlags(d,l,d>>l),u=d>>>l;break;case N.ASR:s&&qe.setFlags(d,l,d>>l),u=d>>l;break;case N.ROR:s&&qe.setFlags(d,l,Vt(d,l)),u=Vt(d,l);break;default:throw new oe("While attempting to perform a shift operation.",t.statement,t.lineNumber)}return qe.setRegister(a,u),!0}function An(t){return Ln.apply(this,arguments)}function Ln(){return Ln=Object(je["a"])(regeneratorRuntime.mark((function t(e){var n,i,r,s,a,o,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.unpack(),i=Object(Yt["a"])(n,3),r=i[0],s=i[1],a=i[2],qe.checkFlags(s)){t.next=3;break}return t.abrupt("return",!1);case 3:if("string"!==typeof a){t.next=13;break}if(o=qe.label(a),o!==yt){t.next=11;break}return t.next=8,xn(e,vt[a]);case 8:return c=t.sent,c&&(r===f.BL&&qe.setRegister(k.LR,On.registers[k.PC]),qe.setRegister(k.PC,On.registers[k.LR])),t.abrupt("return",c);case 11:t.next=14;break;case 13:o=On.registers[a];case 14:t.t0=r,t.next=t.t0===f.B||t.t0===f.BX?17:t.t0===f.BL?19:22;break;case 17:return qe.setRegister(k.PC,o),t.abrupt("break",22);case 19:return qe.setRegister(k.LR,On.registers[k.PC]),qe.setRegister(k.PC,o),t.abrupt("break",22);case 22:return t.abrupt("return",!0);case 23:case"end":return t.stop()}}),t)}))),Ln.apply(this,arguments)}function Nn(t){var e,n,i,r=t.unpack(),s=Object(Yt["a"])(r,9),a=s[0],o=s[1],c=s[2],l=s[3],u=s[4],d=s[5],h=s[6],p=s[7],f=s[8];if(!qe.checkFlags(o))return!1;if("string"===typeof u){if(e=qe.dataLabel(u),a===G.LDR)return qe.setRegister(l,e),!0;throw new oe("Cannot store directly to label.",t.statement,t.lineNumber)}e=On.registers[u];var m=h?Rn(h):0;switch(n="+"===d?e+m:e-m,"pre"===p&&(e=n),Mn(e,c,t),f&&qe.setRegister(u,n),a){case G.LDR:i="word"===c?On.memory.wordView[e/4]:On.memory.byteView[e],qe.setRegister(l,i);break;case G.STR:Pn(n,u,t),i="word"===c?On.registers[l]:255&On.registers[l],qe.store(i,e,c);break}return!0}function Dn(t){var e=t.unpack(),n=Object(Yt["a"])(e,6),i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],c=n[5];if(!qe.checkFlags(r))return!1;var l=On.registers[s],u=ot.increment.includes(o),d=ot.before.includes(o);switch(Mn(l,"word",t),u||(a=a.slice().reverse()),i){case q.LDM:a.forEach((function(e){d&&(u?l+=4:l-=4),Pn(l,s,t),qe.setRegister(e,On.memory.wordView[l/4]),d||(u?l+=4:l-=4),s===k.SP&&qe.setStackHeight(On.memory.size-l)}));break;case q.STM:a.forEach((function(e){d&&(u?l+=4:l-=4),s===k.SP&&qe.setStackHeight(On.memory.size-l),Pn(l,s,t),qe.store(On.registers[e],l,"word"),d||(u?l+=4:l-=4)}));break}return c&&qe.setRegister(s,l),!0}function Mn(t,e,n){switch(e){case"byte":return;case"word":if(t%4===0)return}throw new oe("SIGBUS: Bus error - misaligned access.",n.statement,n.lineNumber)}function Pn(t,e,n){if(e===k.SP){if(t<On.memory.textHeight+On.memory.dataHeight+On.memory.heapHeight)throw new oe("SIGSEG: Segmentation fault.",n.statement,n.lineNumber);if(t>On.memory.size)throw new oe("SIGSEG: Segmentation fault.",n.statement,n.lineNumber)}else if(t<On.memory.textHeight||t>=On.memory.size)throw new oe("SIGSEG: Segmentation fault.",n.statement,n.lineNumber)}function Bn(t,e){if(t in On.memory.dataTable)return(On.memory.dataTable[t]-On.previousPC)/4;if(t in On.memory.textMap)return(On.memory.textMap[t]-On.previousPC)/4;throw new ae("Missing reference to '".concat(t,"'."),e.statement,e.lineNumber,-1)}var Fn=n("e57a"),Hn=n("19d3"),Un=n("a0ec"),zn=n.n(Un),Vn=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"d-inline-block",attrs:{"tour-item":"debugger"}},[t.hidePlayback?t._e():[n("i",{staticClass:"button red fas fa-stop mr-1 clickable",on:{click:t.stop,mouseenter:function(e){t.tip("stop  (ctrl + ↑)")},mouseleave:function(e){return t.tip(void 0)}}}),[n("i",{directives:[{name:"show",rawName:"v-show",value:!t.running,expression:"!running"}],staticClass:"button green fas fa-play mx-1 clickable",attrs:{"tour-item":"debug-run"},on:{click:t.run,mouseenter:function(e){t.tip("run (ctrl + ↓)")},mouseleave:function(e){return t.tip(void 0)}}}),n("i",{directives:[{name:"show",rawName:"v-show",value:t.running&&!t.paused,expression:"running && !paused"}],staticClass:"button fas fa-pause mx-1 clickable",on:{click:t.pause,mouseenter:function(e){t.tip("pause (ctrl + ↓)")},mouseleave:function(e){return t.tip(void 0)}}}),n("i",{directives:[{name:"show",rawName:"v-show",value:t.running&&t.paused,expression:"running && paused"}],staticClass:"button green fas fa-play mx-1 clickable",on:{click:t.resume,mouseenter:function(e){t.tip("continue (ctrl + ↓)")},mouseleave:function(e){return t.tip(void 0)}}})],n("i",{staticClass:"button amber step fas fa-step-backward mx-1 clickable",on:{click:t.stepBack,mouseenter:function(e){t.tip("step back (ctrl + ←)")},mouseleave:function(e){return t.tip(void 0)}}}),n("i",{staticClass:"button amber step fas fa-step-forward mx-1 clickable",on:{click:t.stepForward,mouseenter:function(e){t.tip("step (ctrl + →)")},mouseleave:function(e){return t.tip(void 0)}}})],n("div",{staticClass:"tick-rate d-inline-block mx-1",staticStyle:{width:"60px"}},[n("b-form-input",{staticStyle:{"margin-bottom":"-5px"},attrs:{type:"range",inline:"",value:1e3/t.delay,min:"0.5",max:"100",step:"0.1"},on:{input:t.setDelay,mouseenter:function(e){return t.tip("tick rate")},mouseleave:function(e){return t.tip(void 0)}}})],1)],2)},Wn=[],$n=s["default"].extend({props:{tooltip:String,hidePlayback:Boolean},computed:{currentTick:qe.currentTick,running:qe.running,paused:qe.paused,delay:qe.delay,errors:qe.errors},methods:{run:function(){return qe.start()},stop:function(){return qe.stop()},pause:function(){return qe.pause()},resume:function(){return qe.resume()},stepBack:function(){return qe.stepBack()},stepForward:function(){return qe.stepForward()},reset:function(){return qe.reset()},setDelay:function(t){qe.setDelay(1e3/t)},tip:function(t){this.$emit("update:tooltip",t)}}}),Gn=$n,qn=(n("2f53"),n("5885"),n("2877")),Yn=Object(qn["a"])(Gn,Vn,Wn,!1,null,"15cce2df",null),Zn=Yn.exports,Xn=function(){var t=this,e=t.$createElement,n=t._self._c||e;return t.currentDirectory?n("div",{directives:[{name:"click-outside",rawName:"v-click-outside",value:t.close,expression:"close"}],staticClass:"files-container p-1",class:t.showFiles?"min-width":""},[t.forceShow||t.showFiles?n("div",[n("div",{staticClass:"mb-1"},[t._v(" /"+t._s(t.currentDirectory.name)+" ")]),t._l(t.directories,(function(e){return n("div",{key:e.name},[n("a",{staticClass:"link text-grey clickable",on:{click:function(n){return t.openDirectory(e)}}},[n("i",[t._v(t._s(e.name)+"/")])])])})),t.hideFiles?t._e():t._l(t.files,(function(e){return n("div",{key:e.name},[n("a",{staticClass:"link text-white clickable",class:{open:!t.selectedFile&&t.currentFile===e,selected:t.selectedFile===e},on:{click:function(n){return t.openFile(e)}}},[t._v(" "+t._s(e.name)+" ")])])})),t.currentDirectory.parent?n("div",[n("a",{staticClass:"link text-grey clickable",on:{click:function(e){return t.openDirectory(t.currentDirectory.parent)}}},[t._v("..")])]):t._e()],2):n("a",{staticClass:"link clickable",staticStyle:{color:"#f9e1b3"},on:{click:function(e){t.showFiles=!0}}},[t._v("files")])]):t._e()},Jn=[],Qn=(n("2ca0"),{name:"helloworld.s",static:!0,writeable:!1}),Kn=[{name:"userfiles",directories:[],files:[{name:"readme.s",static:!0,writeable:!1}],writeable:!0},{name:"samples",directories:[],files:[Qn,{name:"typewriter.s",static:!0,writeable:!1},{name:"strlen.s",static:!0,writeable:!1},{name:"recursion.s",static:!0,writeable:!1},{name:"stackoverflow!.s",static:!0,writeable:!1},{name:"bubblesort.s",static:!0,writeable:!1},{name:"buggymess.s",static:!0,writeable:!1}],writeable:!1}],ti=s["default"].observable({name:"",directories:[],files:[],writeable:!0,parentDirectory:void 0,openDirectory:void 0,openFile:void 0}),ei={filesystem:function(){return ti},currentDirectory:function(){var t;return null!==(t=ti.openDirectory)&&void 0!==t?t:ti},currentFile:function(){return ti.openFile},pwd:function(){var t=this.currentDirectory(),e=[t.name];while(t.parent)e=[t.parent.name].concat(Object(Ct["a"])(e)),t=t.parent;var n=e.join("/");return""===n&&(n="/"),n}},ni={init:function(){ti.openDirectory=ti,ti.directories=Kn,ti.directories.forEach((function(t){return t.parent=ti})),ti.directories.forEach((function(t){return t.files.forEach((function(e){return e.parent=t}))})),this.loadLocal(),this.reopen()},loadLocal:function(){var t=Object.keys(localStorage).filter((function(t){return t.startsWith("/")})).sort();t.forEach((function(t){var e=t.split("/").slice(1),n=ti;e.forEach((function(i,r){var s=!0;if(r===e.length-1&&(s=!1),s){var a=n.directories.find((function(t){return t.name===i}));a||(a={name:i,parent:n,files:[],directories:[],writeable:!0},n.directories.push(a)),n=a}else{var o;n.files.push({name:i,parent:n,static:!1,content:null!==(o=localStorage.getItem(t))&&void 0!==o?o:void 0,writeable:!0})}}))}))},reopen:function(){try{var t,e=null!==(t=localStorage.getItem("openFile"))&&void 0!==t?t:"",n=this.resolvePath(e);if(si(n))throw new le("");this.openDirectory(n.parent),this.openFile(n)}catch(i){console.trace(),console.error("Could not reopen file from local storage.")}},openFile:function(){var t=Object(je["a"])(regeneratorRuntime.mark((function t(e){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.content||!e.static){t.next=4;break}return t.next=3,fetch("samples/".concat(e.name)).then((function(t){return t.text()})).then((function(t){return t}));case 3:e.content=t.sent;case 4:if(n=ii(e),null!==n){t.next=7;break}throw new le("Could not find file in local directory tree.");case 7:localStorage.setItem("openFile",n),ti.openFile=e;case 9:case"end":return t.stop()}}),t)})));function e(e){return t.apply(this,arguments)}return e}(),openDirectory:function(t){ti.parentDirectory=ti.openDirectory,ti.openDirectory=t},cd:function(t){var e=this.resolvePath(t);if(!si(e))throw new le("Argument is not a valid directory.");this.openDirectory(e)},textEdit:function(t){var e=this.resolvePath(t);if(si(e))throw new le("Cannot text-edit a directory.");this.openFile(e)},resolvePath:function(t){var e=ti.openDirectory;t.startsWith("/")&&(e=ti);var n=t.split("/").filter((function(t){return""!==t}));return n.forEach((function(t,i){var r;if(".."===t?r=e.parent:"."===t?r=e:(r=e.directories.find((function(e){return e.name===t})),r||i!==n.length-1||(r=e.files.find((function(e){return e.name===t})))),!r)throw new le("Could not resolve path.");e=r})),e},addDirectory:function(t,e){e.directories.includes(t)||(t.parent=e,e.directories.push(t))},newFile:function(t,e){return{name:t,content:e,writeable:!0,static:!1}},addFile:function(t,e){e.files.some((function(e){return e.name===t.name}))||(t.parent=e,e.files.push(t))},save:function(t,e){var n;if(!t.writeable)throw new le("Permission denied.");var i=ii(t);if(null===i)throw new le("Could not find file in local directory tree.");t.content=e,localStorage.setItem(i,null!==(n=t.content)&&void 0!==n?n:"")}};function ii(t){var e,n=[null===(e=t.parent)||void 0===e?void 0:e.name,t.name],i=t.parent;while(null!==(r=i)&&void 0!==r&&r.parent){var r;n.unshift(i.parent.name),i=i.parent}return n.join("/")}var ri,si=function(t){return void 0!==(null===t||void 0===t?void 0:t.files)},ai=Object(m["a"])(Object(m["a"])({},ni),ei),oi=s["default"].extend({name:"files",props:{forceShow:Boolean,hideFiles:Boolean,preventDefaultFile:Boolean,preventDefaultDirectory:Boolean,selectedFile:Object},data:function(){return{showFiles:!1}},computed:{currentDirectory:ai.currentDirectory,currentFile:ai.currentFile,isRoot:function(){return this.currentDirectory===ai.filesystem()},files:function(){return this.currentDirectory.files.slice().sort()},directories:function(){return this.currentDirectory.directories.slice().sort()}},methods:{openDirectory:function(t){this.preventDefaultDirectory?this.$emit("open:directory",t):ai.openDirectory(t)},openFile:function(t){this.preventDefaultFile?this.$emit("open:file",t):ai.openFile(t)},close:function(){this.showFiles=!1}},watch:{currentFile:function(t){this.$emit("open",t)}}}),ci=oi,li=(n("618e"),Object(qn["a"])(ci,Xn,Jn,!1,null,"279caa7a",null)),ui=li.exports,di=(n("a878"),n("cabf"),s["default"].extend({name:"editor",components:{PrismEditor:Fn["a"],debug:Zn,files:ui},data:function(){return{program:"",tooltip:{title:"",color:"",message:""},filename:"",tourActive:!1,controlTooltip:void 0}},computed:{settings:Lt.settings,memory:qe.memory,running:qe.running,paused:qe.paused,delay:qe.delay,currentInstruction:qe.currentInstruction,currentTick:qe.currentTick,interrupted:qe.interrupted,currentFile:ai.currentFile,currentDirectory:ai.currentDirectory,fileNames:function(){return this.currentDirectory.files.map((function(t){return t.name}))},selectedFile:function(){var t=this;return this.currentDirectory.files.find((function(e){return e.name===t.filename}))},activeTour:function(){return!!Nt["a"].activeTour},output:qe.output,hasOutput:function(){return!(1===this.output.length&&!this.output[0])},errors:qe.errors,breakpoints:qe.breakpoints,exitStatus:qe.exitStatus,computedTooltip:function(){return this.interrupted?{title:"Interrupted",color:"#7dad7d",message:"Switch to the terminal to provide input."}:""!==this.tooltip.title?this.tooltip:this.exitStatus instanceof oe?{title:this.exitStatus.type,color:this.exitStatus.color,message:this.exitStatus.message}:0===this.exitStatus?{title:"Exit Success",color:"#5d9455",message:"Program executed without error."}:{title:"",color:"",message:""}}},methods:{run:qe.start,stop:qe.stop,pause:qe.pause,resume:qe.resume,stepBack:qe.stepBack,stepForward:qe.stepForward,reset:qe.reset,setDelay:function(t){qe.setDelay(1e3/t)},hover:function(t){var e;if(null!==(e=t.target.parentNode)&&void 0!==e&&e.className.includes("error")){if(!t.target.parentNode.dataset["errorIdx"])return;var n=parseInt(t.target.parentNode.dataset["errorIdx"]);if(-1===n)return;var i=this.errors[n];this.tooltip={title:i.type,color:i.color,message:i.message}}else this.tooltip={message:"",color:"",title:""}},click:function(t){var e;if(null!==(e=t.target.parentNode)&&void 0!==e&&e.className.includes("error")){t.preventDefault(),t.stopPropagation();var n,i=this.$refs.prism,r=i.$refs.textarea,s=parseInt(t.target.parentNode.dataset["errorIdx"]);n=-1===s?this.exitStatus:this.errors[s],r.dispatchEvent(new CustomEvent("errorClick",{detail:{coords:{x:t.layerX,y:t.layerY},lineNumber:n.lineNumber}}))}else t.target.className.includes("line-number")&&qe.toggleBreakpoint(t.target.innerText-1)},dblclick:function(t){var e;if(null!==(e=t.target.parentNode)&&void 0!==e&&e.className.includes("error")){t.preventDefault(),t.stopPropagation();var n,i=this.$refs.prism,r=i.$refs.textarea,s=parseInt(t.target.parentNode.dataset["errorIdx"]);n=-1===s?this.exitStatus:this.errors[s],r.dispatchEvent(new CustomEvent("errorDblClick",{detail:{coords:{x:t.layerX,y:t.layerY},lineNumber:n.lineNumber}}))}},lineComment:function(t){var e=this.$refs.prism,n=e.$refs.textarea,i=n.selectionStart,r=n.selectionEnd,s=n.value.split(/\r?\n|\r/),a=l(n),o=a.reduce((function(t,e){var n=s[e];return"// "!==n.substring(0,3)&&""!==n&&t++,t}),0),c=!0;function l(t){var e=t.value.substr(0,t.selectionStart).split(/\r?\n|\r/).length-1,n=t.value.substr(0,t.selectionEnd).split(/\r?\n|\r/).length-1;return Array.from({length:n-e+1},(function(t,n){return n+e}))}o<a.length/2&&(c=!1),a.forEach((function(t){c&&"// "!==s[t].substring(0,3)&&""!==s[t]?(s[t]="// ".concat(s[t]),r+=3):c||"// "!==s[t].substring(0,3)||(s[t]=s[t].substring(3),r-=3)})),this.program=s.join("\n"),this.$nextTick((function(){return n.setSelectionRange(i,r)}))},highlighter:function(t){var e=Object(Mt["highlight"])(t,Mt["languages"].armv7,"ARMv7");if(0===e.length)return"";var n=e.split('<span class="token end">\n</span>'),i=n.map((function(t){var e;return null!==(e=t.match(/<span.*?<\/span>\s*/gim))&&void 0!==e?e:[]}));return this.highlightTokenErrors(i),n=i.map((function(t){return t.join("")})),this.highlightLineErrors(n),this.highlightBreakpoints(n),this.highlightExecuting(n),n.join('<span class="token end">\n</span>')},highlightTokenErrors:function(t){this.errors.forEach((function(e,n){if(-1!==e.tokenIndex){var i=t[e.lineNumber],r=-1,s=null===i||void 0===i?void 0:i.findIndex((function(t,n){if(t.includes("whitespace")||r++,r===e.tokenIndex)return!0})),a=null===i||void 0===i?void 0:i[s];void 0!==a&&(i[s]='<span class="token error" style="text-decoration-color: '.concat(e.color,'" data-error-idx="').concat(n,'">').concat(a,"</span>"))}}))},highlightLineErrors:function(t){if(this.errors.forEach((function(e,n){if(-1===e.tokenIndex){var i=t[e.lineNumber];void 0!==i&&(t[e.lineNumber]='<span class="line error" style="text-decoration-color: '.concat(e.color,'" data-error-idx="').concat(n,'">').concat(i,"</span>"))}})),this.exitStatus instanceof oe){var e=t[this.exitStatus.lineNumber];void 0!==e&&(t[this.exitStatus.lineNumber]='<span class="line error" style="text-decoration-color: '.concat(this.exitStatus.color,'" data-error-idx="').concat(-1,'">').concat(e,"</span>"))}},highlightBreakpoints:function(t){this.breakpoints.forEach((function(e){var n=t[e.lineNumber];void 0!==n&&(t[e.lineNumber]='<span class="line breakpoint">'.concat(n,"</span>"))}))},highlightExecuting:function(t){if(this.running&&this.currentInstruction){var e=t[this.currentInstruction.lineNumber];void 0!==e&&(t[this.currentInstruction.lineNumber]='<span class="line executing">'.concat(e,"</span>")),this.$nextTick((function(){var t=document.querySelector(".line.executing");t&&Object(Hn["a"])(t,{scrollMode:"if-needed",block:"nearest",inline:"nearest"})}))}},moveCaretToCursor:function(t){var e=t.detail.coords,n=t.target,i=this.getCaretPositionAtCursor(n,e,t.detail.lineNumber);n.setSelectionRange(i,i),n.focus()},highlightWordAtCursor:function(t){var e=t.detail.coords,n=t.target,i=this.getCaretPositionAtCursor(n,e,t.detail.lineNumber),r=i,s=i;while(/\w/.test(n.value[r-1])&&r>0)r--;while(/\w/.test(n.value[s])&&s<n.value.length)s++;n.setSelectionRange(r,s),n.focus()},getCaretPositionAtCursor:function(t,e,n){for(var i=t.value.split("\n"),r=0,s=0;s<n;s++)r+=i[s].length+1;for(var a=r+i[n].length,o=Number.MAX_VALUE,c=0,l=r;l<a;l++){var u=zn()(t,l),d={x:u.left,y:u.top+u.height/2},h=p(e,d);h<o&&(o=h,c=l)}return c;function p(t,e){var n=e.x-t.x,i=e.y-t.y;return i*i+n*n}},focus:function(){var t=this.$refs.prism,e=t.$refs.textarea;e.focus()},save:function(){var t,e;Nt["a"].activeTour||(this.filename=null!==(t=null===(e=this.currentFile)||void 0===e?void 0:e.name)&&void 0!==t?t:"",this.$refs.save.show())},saveAllowChar:function(t){/^[^\d\w._]$/.test(t.key)&&t.preventDefault()},saveAs:function(){if(this.currentDirectory.writeable&&(!this.selectedFile||this.selectedFile.writeable)){var t=this.selectedFile;t||(t=ai.newFile(this.filename,""),ai.addFile(t,this.currentDirectory)),ai.save(t,this.program),ai.openFile(t),this.$refs.save.hide()}},autoSave:u((function(t){Nt["a"].activeTour||localStorage.setItem("program",t)})),load:function(){var t;this.program=null!==(t=localStorage.getItem("program"))&&void 0!==t?t:""}},created:function(){this.load()},mounted:function(){var t=this.$refs.prism,e=t.$refs.textarea;e.addEventListener("errorClick",this.moveCaretToCursor),e.addEventListener("errorDblClick",this.highlightWordAtCursor)},updated:function(){var t=this;Nt["a"].activeTour&&!this.tourActive&&(this.tourActive=!0,ai.openFile(Qn),Nt["a"].activeTour.once("inactive",(function(){t.tourActive=!1,t.load()})))},activated:function(){this.focus()},beforeDestroy:function(){var t=this.$refs.prism,e=t.$refs.textarea;e.removeEventListener("errorClick",this.moveCaretToCursor),e.removeEventListener("errorDblClick",this.highlightWordAtCursor)},watch:{program:u(i.build,500),memory:function(t,e){t.size!==e.size&&i.build(this.program)},currentFile:function(t){var e;this.program=null!==(e=t.content)&&void 0!==e?e:"",localStorage.setItem("program",this.program),this.reset()},filename:function(t){this.filename=t.replace(/[^\d\w._]/g,"")}}})),hi=di,pi=(n("92a1"),Object(qn["a"])(hi,c,l,!1,null,"025b9e4e",null)),fi=pi.exports,mi=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"d-flex flex-column container text-left p-3",attrs:{"tour-item":"assembler"}},[n("div",{staticClass:"mb-3"},[t._l(t.sections,(function(e,i){return n("span",{key:i,staticClass:"section",on:{mouseenter:function(n){return t.tip(e)},mouseleave:t.untip}},t._l(e.bits,(function(e,i){return n("span",{key:i,staticClass:"bit"},[t._v(" "+t._s(e)+" ")])})),0)})),n("div",{staticClass:"history clickable",attrs:{"tour-item":"history"},on:{click:t.showHistory}},[n("i",{staticClass:"button fas fa-history"})])],2),n("div",{staticClass:"fenced flex-grow-1",staticStyle:{overflow:"auto"}},[t.computedTooltip.type===t.TipType.INSTRUCTION?[n("div",{domProps:{innerHTML:t._s(t.computedTooltip.title)}}),n("div",{staticStyle:{"font-size":"14px"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.computedTooltip.subtitle.length>0,expression:"computedTooltip.subtitle.length > 0"}]},[n("span",{class:"Executed"===t.computedTooltip.subtitle?"executed":"not-executed"},[t._v(" "+t._s(t.computedTooltip.subtitle)+" ")])]),n("div",[t._v(t._s(t.computedTooltip.detail))])])]:[n("div",[t._v(t._s(t.computedTooltip.title))]),n("div",{staticStyle:{"font-size":"14px"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:t.computedTooltip.subtitle.length>0,expression:"computedTooltip.subtitle.length > 0"}]},[t._v(t._s(t.computedTooltip.subtitle))]),n("div",[t._v(t._s(t.computedTooltip.detail))])])]],2),n("b-modal",{ref:"history",attrs:{id:"state-history","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"}},[n("div",{staticClass:"px-4 py-1",attrs:{"tour-item":"state-history"}},[n("h4",[t._v("state history")]),n("div",{staticClass:"position-relative mt-3"},[t._l(t.snapshots,(function(e){return n("div",{key:e.key,ref:"tick_"+e.tick,refInFor:!0,staticClass:"snapshot fenced clickable mb-4",class:t.currentTick===e.tick?"current":"not-current",attrs:{"tour-item":"state-history-tick-"+e.tick},on:{click:function(n){return t.reinstate(e.tick)}}},[n("span",{staticClass:"d-inline-block tick rounded py-1"},[t._v(t._s(e.tick))]),n("div",{staticStyle:{color:"#DCDCDC"}},[n("span",{staticClass:"p-1",domProps:{innerHTML:t._s(e.instruction)}}),n("span",{staticClass:"reinstate px-1 float-right"},[n("i",{staticClass:"fas fa-share fa-rotate-180 fa-xs"})])]),n("div",{staticClass:"ml-3"},t._l(e.registersHit,(function(i){var r=i[0],s=i[1];return n("div",{key:r},[t._v(" "+t._s(t.regName[r])+": "+t._s(s)+" >> "+t._s(e.registers[r])+" ")])})),0),e.memWrite?n("div",{staticClass:"ml-3"},[t._v(" bytes "),n("u",[t._v("written")]),t._v(" in range: "+t._s(e.memWrite.base)+" - "+t._s(e.memWrite.limit)+" ")]):t._e(),e.memRead?n("div",{staticClass:"ml-3"},[t._v(" bytes "),n("u",[t._v("read")]),t._v(" in range: "+t._s(e.memRead.base)+" - "+t._s(e.memRead.limit)+" ")]):t._e()])})),n("div",{staticClass:"position-absolute",staticStyle:{top:"0"}},[n("transition",{attrs:{name:"slide-fade-right"}},[t.historyShown?n("div",{staticClass:"position-fixed fenced control-box px-1 pb-1 pt-0",attrs:{"tour-item":"state-history-debug"}},[n("div",{staticClass:"pb-1"},[t._v("debugger")]),n("debug",{staticClass:"debugger",attrs:{tooltip:t.debuggerTooltip},on:{"update:tooltip":function(e){t.debuggerTooltip=e}}}),n("div",{directives:[{name:"show",rawName:"v-show",value:t.debuggerTooltip,expression:"debuggerTooltip"}],staticClass:"control-tooltip fenced px-1"},[t._v(" "+t._s(t.debuggerTooltip)+" ")])],1):t._e()])],1)],2)])])],1)},gi=[];function bi(t,e){var n={key:t.key,tick:t.cpu.tick,instruction:t.currentInstruction?Object(Mt["highlight"])(t.currentInstruction.text,Mt["languages"].armv7,"ARMv7"):"Base State",registers:t.cpu.observableRegisters,flags:t.cpu.cpsr,registersHit:new Map,flagsHit:new Map};if(e)if(n.registersHit=d(t.cpu.observableRegisters,e.cpu.observableRegisters).reduce((function(t,e,n){var i=Object(Yt["a"])(e,2),r=i[0],s=i[1];return r!==s&&t.set(n,s),t}),new Map),n.flagsHit=d(t.cpu.cpsr,e.cpu.cpsr).reduce((function(t,e,n){var i=Object(Yt["a"])(e,2),r=i[0],s=i[1];return r!==s&&t.set(n,s),t}),new Map),t.currentInstruction instanceof ge){var i=qe.getMemoryAccessRange(t.currentInstruction,e);t.currentInstruction.isRead?n.memRead=i:n.memWrite=i}else{var r=Array.from(e.memory.byteView),s=Array.from(t.memory.byteView);n.memWrite=d(s,r).reduce((function(t,e,n){var i=Object(Yt["a"])(e,2),r=i[0],s=i[1];return r!==s&&(t?t.limit=n:t={base:n,limit:n}),t}),void 0)}return n}(function(t){t["INSTRUCTION"]="instruction",t["SECTION"]="section",t["DEFAULT"]="default"})(ri||(ri={}));var vi=s["default"].extend({name:"instruction",components:{debug:Zn},data:function(){return{regName:S,regTitle:I,regExplain:A,flagName:Z,flagTitle:X,flagExplain:J,default:{bitcode:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],explanation:[{title:"No Instruction",subtitle:"",detail:"Execute an instruction to examine its machine code.",range:32}]},tooltip:void 0,historyShown:!1,debuggerTooltip:void 0}},computed:{paused:qe.paused,delay:qe.delay,currentInstruction:qe.currentInstruction,wasExecuted:qe.wasExecuted,currentTick:qe.currentTick,memSize:function(){return qe.memory().size},TipType:function(){return ri},sections:function(){var t,e,n=null!==(t=null===(e=this.currentInstruction)||void 0===e?void 0:e.assemble())&&void 0!==t?t:this.default,i=0;return n.explanation.map((function(t){var e=Object(m["a"])(Object(m["a"])({},t),{},{bits:n.bitcode.slice(i,i+t.range)});return i+=t.range,e}))},computedTooltip:function(){return this.tooltip?this.tooltip:this.currentInstruction?{title:Object(Mt["highlight"])(this.currentInstruction.text,Mt["languages"].armv7,"ARMv7"),subtitle:this.wasExecuted?"Executed":"Not Executed",detail:"This is the assembled machine code for the last instruction. Hover over the different sections to see what they mean.",type:ri.INSTRUCTION}:Object(m["a"])(Object(m["a"])({},this.default.explanation[0]),{},{type:ri.DEFAULT})},snapshots:function(){return qe.snapshots().data().slice().reduce((function(t,e,n,i){var r=i[n-1];return t.push(bi(e,r)),t}),[]).reverse()}},methods:{tip:function(t){this.tooltip=Object(m["a"])(Object(m["a"])({},t),{},{type:ri.SECTION})},untip:function(){this.tooltip=void 0},showHistory:function(){var t=this;this.historyShown=!1,this.$refs.history.show();var e=this;setTimeout((function(){e.historyShown=!0,t.scrollToTick(t.currentTick)}),350)},scrollToTick:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"smooth";this.$nextTick((function(){var i,r=null===(i=e.$refs["tick_".concat(t)])||void 0===i?void 0:i[0];r&&r.scrollIntoView({behavior:n,block:"start",inline:"nearest"})}))},reinstate:function(t){qe.reinstateSnapshot(t)}},watch:{currentTick:{handler:function(t){var e=this;this.$nextTick((function(){var n=e.paused||e.delay>100?"smooth":"instant";e.scrollToTick(t,n)}))}}}}),yi=vi,ki=(n("75fc"),n("46fd"),Object(qn["a"])(yi,mi,gi,!1,null,"9526e860",null)),wi=ki.exports,xi=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"d-flex flex-column container text-center p-3",attrs:{"tour-item":"memory"}},[n("div",{staticClass:"dashed mb-3 px-2 py-1"},[n("div",{staticClass:"d-flex align-items-end position-relative w-100",attrs:{"tour-item":"memory-usage"}},[n("div",{staticClass:"d-flex flex-column sector text",style:"width: "+t.textWidth+"%;"},[n("div",{staticClass:"label"},[n("span",{on:{mouseenter:function(e){return t.tip("text")},mouseleave:t.untip,click:function(e){return t.explore("text")}}},[t._v(" text ")])]),n("div",{staticClass:"region",on:{mouseenter:function(e){return t.tip("text")},mouseleave:t.untip,click:function(e){return t.explore("text")}}}),n("div",{staticClass:"placeholder"})]),t.dataWidth>0?n("div",{staticClass:"d-flex flex-column sector data",style:"width: "+t.dataWidth+"%"},[n("div",{staticClass:"placeholder"}),n("div",{staticClass:"region",on:{mouseenter:function(e){return t.tip("data")},mouseleave:t.untip,click:function(e){return t.explore("data")}}}),n("div",{staticClass:"label"},[n("span",{on:{mouseenter:function(e){return t.tip("data")},mouseleave:t.untip,click:function(e){return t.explore("data")}}},[t._v(" data ")])])]):t._e(),t.heapWidth>0?n("div",{staticClass:"d-flex flex-column sector heap",style:"width: "+t.heapWidth+"%"},[n("div",{staticClass:"label"},[n("span",{on:{mouseenter:function(e){return t.tip("heap")},mouseleave:t.untip,click:function(e){return t.explore("heap")}}},[t._v(" heap ")])]),n("div",{staticClass:"region",on:{mouseenter:function(e){return t.tip("heap")},mouseleave:t.untip,click:function(e){return t.explore("heap")}}}),n("div",{staticClass:"placeholder"})]):t._e(),n("div",{staticClass:"d-flex flex-column sector uninitialised",style:"width: "+t.uninitWidth+"%"},[n("div",{staticClass:"region",on:{mouseenter:function(e){return t.tip("uninitialised")},mouseleave:t.untip,click:function(e){return t.explore("uninitialised")}}}),n("div",{staticClass:"placeholder"})]),n("div",{staticClass:"d-flex flex-column sector stack",style:"width: "+t.stackWidth+"%"},[n("div",{staticClass:"label rtl"},[n("span",{on:{mouseenter:function(e){return t.tip("stack")},mouseleave:t.untip,click:function(e){return t.explore("stack")}}},[t._v(" stack ")])]),n("div",{staticClass:"region",on:{mouseenter:function(e){return t.tip("stack")},mouseleave:t.untip,click:function(e){return t.explore("stack")}}}),n("div",{staticClass:"placeholder"})]),t.stackPointer>=0&&t.stackPointer<=100?n("div",{staticClass:"d-flex flex-column sector stack-pointer",staticStyle:{"pointer-events":"none"},style:"width: "+t.stackPointer+"%"},[n("div",{staticClass:"placeholder"}),n("div",{staticClass:"region",staticStyle:{"pointer-events":"none"}}),n("div",{staticClass:"label rtl text-white text-left"},[n("span",{on:{mouseenter:function(e){return t.tip("stackPointer")},mouseleave:t.untip}},[t._v(" sp ")])])]):t._e()])]),n("div",{staticClass:"flex-grow-1 dashed info px-2 py-1",staticStyle:{overflow:"auto"}},[t.tooltip?[n("div",{staticStyle:{width:"calc(100% - 40px)"},style:"color: "+t.tooltip.color+";"},[t._v(" "+t._s(t.tooltip.tip)+" ")])]:[n("div",[t._v(" Total: "+t._s(t.memory.size)+" bytes ")]),n("div",[t._v(" Used: "),n("span",{class:{"text-warning":t.used===t.memory.size,"text-danger":t.used>t.memory.size}},[t._v(" "+t._s(t.used)+" bytes ")])])]],2),n("explorer",{ref:"explorer"})],1)},Ti=[],Oi=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("b-modal",{ref:"modal",attrs:{id:"memory-explorer",centered:"","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"}},[n("div",{staticClass:"px-4 py-1"},[n("h4",[t._v("memory explorer")]),t.memIsInitialised?n("div",{staticClass:"my-3"},[n("div",{staticClass:"row"},[n("div",{staticClass:"col-1 pl-0 pr-3"},t._l(t.memSize/4,(function(e,i){return n("div",{key:i,staticClass:"word-index"},[t._v(t._s(4*i))])})),0),n("div",{staticClass:"col pl-0",attrs:{"tour-item":"memory-data"}},[n("div",{staticClass:"position-relative "},[n("div",t._l(t.wordView,(function(e,i){return n("div",{key:i,staticClass:"row word no-gutters"},["byte"===t.size?t._l(4,(function(e,r){return n("div",{key:i+"_"+r,staticClass:"col text-center"},[t._v(" "+t._s(t.printByte(t.byteValue(i,r)))+" ")])})):[n("div",{staticClass:"col text-center"},[t._v(" "+t._s(t.printWord(e))+" ")])]],2)})),0),n("div",{staticClass:"regions"},[n("div",{staticClass:"region text fenced tippable",style:"top: "+22*t.textOffset+"px",on:{mouseenter:function(e){return t.tip("text")},mouseleave:t.untip}},t._l(t.textWordHeight,(function(e,i){return n("div",{key:e,staticClass:"word hoverable",on:{mouseenter:function(e){t.instructionIndex=i},mouseleave:function(e){t.instructionIndex=void 0}}})})),0),t.dataWordHeight>0?n("div",{staticClass:"region data fenced tippable",style:"top: "+22*t.dataOffset+"px",on:{mouseenter:function(e){return t.tip("data")},mouseleave:t.untip}},t._l(t.dataWordHeight,(function(e,i){return n("div",{key:e,staticClass:"row word no-gutters"},["byte"===t.size?t._l(4,(function(e,r){return n("div",{key:e,staticClass:"col byte",class:t.highlitData.includes(4*i+r)?"highlight":"",on:{mouseenter:function(e){return t.dataHover(i,r)},mouseleave:function(e){t.highlitData=[],t.hoveredDeclaration=void 0}}})})):t._e()],2)})),0):t._e(),t.heapWordHeight>0?n("div",{staticClass:"region heap fenced tippable",style:"top: "+22*t.heapOffset+"px",on:{mouseenter:function(e){return t.tip("heap")},mouseleave:t.untip}},[t._l(t.heapBlocks,(function(t,e){return n("div",{key:e,staticClass:"block",style:"height: "+t.size/4*22+"px"})})),n("div",{staticClass:"region",staticStyle:{top:"0"}},t._l(t.heapContiguousBlocks,(function(e,i){return n("div",{key:i,class:e.allocated?"allocated":"",style:"height: "+e.size/4*22+"px",on:{mouseenter:function(e){return t.tip("heap")},mouseleave:t.untip}})})),0)],2):t._e(),n("div",{staticClass:"region tippable",style:"top: "+22*t.uninitOffset+"px",on:{mouseenter:function(e){return t.tip("uninitialised")},mouseleave:t.untip}},t._l(t.uninitWordHeight,(function(t){return n("div",{key:t,staticClass:"word"})})),0),n("div",{staticClass:"region stack fenced tippable",on:{mouseenter:function(e){return t.tip("stack")},mouseleave:t.untip}},t._l(t.stackWordHeight,(function(t){return n("div",{key:t,staticClass:"word"})})),0)])])]),n("div",{staticClass:"col-3 px-0"},[n("div",{staticClass:"position-fixed fenced px-2",staticStyle:{width:"117px"}},[n("h5",{staticClass:"mb-2"},[t._v("options")]),n("b-form-group",{attrs:{label:"chunk size"},scopedSlots:t._u([{key:"default",fn:function(e){var i=e.ariaDescribedby;return[n("b-form-radio-group",{staticClass:"radio",attrs:{"aria-describedby":i,buttons:"",stacked:""},model:{value:t.size,callback:function(e){t.size=e},expression:"size"}},t._l(t.sizes,(function(e){return n("b-form-radio",{key:e.value,attrs:{value:e.value}},[t._v(" "+t._s(e.text)+" ")])})),1)]}}],null,!1,3345607473)}),n("b-form-group",{attrs:{label:"datatype"},scopedSlots:t._u([{key:"default",fn:function(e){var i=e.ariaDescribedby;return[n("b-form-radio-group",{staticClass:"radio",attrs:{"aria-describedby":i,buttons:"",stacked:""},model:{value:t.datatype,callback:function(e){t.datatype=e},expression:"datatype"}},[t._l(t.datatypes,(function(e){return n("b-form-radio",{key:e.value,attrs:{value:e.value}},[t._v(" "+t._s(e.text)+" ")])})),"word"!==t.size?n("b-form-radio",{attrs:{value:"ascii"}},[t._v(" ascii ")]):t._e()],2)]}}],null,!1,2306554320)}),"byte"===t.size?n("div",{staticClass:"tippable",on:{mouseenter:function(e){return t.tip("endianness")},mouseleave:t.untip}},[n("b-form-group",{attrs:{label:"endianness"},scopedSlots:t._u([{key:"default",fn:function(e){var i=e.ariaDescribedby;return[n("b-form-radio-group",{staticClass:"radio",attrs:{"aria-describedby":i,buttons:"",stacked:""},model:{value:t.endianness,callback:function(e){t.endianness=e},expression:"endianness"}},t._l(t.endiannesses,(function(e){return n("b-form-radio",{key:e.value,attrs:{value:e.value}},[t._v(" "+t._s(e.text)+" ")])})),1)]}}],null,!1,1335541044)})],1):t._e()],1),n("transition",{attrs:{name:"slide-fade-left"}},[t.shown?[n("div",{staticClass:"position-fixed tooltip-container"},[n("div",{staticClass:"fenced tooltip-box px-1 pb-1"},[n("div",{staticClass:"pb-1",domProps:{innerHTML:t._s(t.tooltip.title)}}),n("div",{staticStyle:{"font-size":"14px"}},[n("div",{domProps:{innerHTML:t._s(t.tooltip.detail)}})])]),void 0!==t.instructionIndex&&t.instruction?n("div",{staticClass:"fenced tooltip-box mt-3 px-1 pb-1",staticStyle:{"font-size":"14px"}},[n("div",[t._v("src: "),n("span",{domProps:{innerHTML:t._s(t.highlight(t.instruction))}})]),n("div",[t._v("adr: "+t._s(4*t.instructionIndex))]),n("div",[t._v("hex: "+t._s(t.hexstr(t.wordView[t.instructionIndex],8)))]),n("div",[t._v("bin: "+t._s(t.binstr(t.wordView[t.instructionIndex],32)))])]):t._e(),t.hoveredDeclaration?n("div",{staticClass:"fenced tooltip-box mt-3 px-1 pb-1",staticStyle:{"font-size":"14px"}},[n("div",[t._v("labl: "),n("span",{staticClass:"token label"},[t._v(t._s(t.hoveredDeclaration.label))])]),n("div",[t._v(" type: "),n("span",{staticClass:"token directive"},[t._v(t._s(t.hoveredDeclaration.type)+" ")]),n("span",{directives:[{name:"show",rawName:"v-show",value:t.hoveredDeclaration.size>t.dataTypeByteSizeMap[t.dataTypeMap[t.hoveredDeclaration.type]],expression:"hoveredDeclaration.size > dataTypeByteSizeMap[dataTypeMap[hoveredDeclaration.type]]"}]},[t._v(" ["+t._s(t.hoveredDeclaration.size/t.dataTypeByteSizeMap[t.dataTypeMap[t.hoveredDeclaration.type]])+"] ")])]),n("div",[t._v("addr: "+t._s(t.hoveredDeclaration.offset+t.textHeight))]),n("div",[t._v("size: "+t._s(t.hoveredDeclaration.size)+" bytes")])]):t._e()])]:t._e()],2),n("transition",{attrs:{name:"slide-fade-right"}},[t.shown?n("div",{staticClass:"position-fixed fenced control-box px-1 pb-1"},[n("div",{staticClass:"pb-1"},[t._v("debugger")]),n("debug",{staticClass:"debugger",attrs:{tooltip:t.controlTooltip},on:{"update:tooltip":function(e){t.controlTooltip=e}}}),n("div",{directives:[{name:"show",rawName:"v-show",value:t.controlTooltip,expression:"controlTooltip"}],staticClass:"control-tooltip fenced px-1"},[t._v(" "+t._s(t.controlTooltip)+" ")])],1):t._e()])],1)])]):t._e()])])},_i=[],Ci=s["default"].extend({name:"explorer",components:{debug:Zn},data:function(){return{section:void 0,size:"byte",sizes:[{text:"byte",value:"byte"},{text:"word",value:"word"}],datatype:"hex",datatypes:[{text:"hex",value:"hex"},{text:"dec",value:"dec"},{text:"bin",value:"bin"}],endianness:"little",endiannesses:[{text:"little",value:"little"},{text:"big",value:"big"}],instructionIndex:void 0,highlitData:[],hoveredDeclaration:void 0,tooltip:{},tips:{default:{title:"memory explorer",detail:'\t\t\t\t\t\tThis explorer displays the current contents of the simulated memory arranged vertically into words and horizontally\t\t\t\t\t\tinto the 4 bytes which make up each word.\n\n\t\t\t\t\t\tInitialised regions are divided into <span class="label-text">text</span>, <span class="label-data">data</span> and\t\t\t\t\t\t<span class="label-stack">stack</span>. The unfenced region between the <span class="label-data">data</span> and\t\t\t\t\t\t<span class="label-stack">stack</span> is unintialised memory.\n\t\t\t\t\t'},text:{title:'<span class="label-text">text</span>',detail:"\t\t\t\t\t\tThis region, situated in the lowest addresses of the program's virtual address space, contains the machine code\t\t\t\t\t\tfor each instruction in the program.\n\t\t\t\t\t\t\n\t\t\t\t\t\tIn an ARMv7 CPU, every instruction fits into one word, so each row of the explorer within the text section is\t\t\t\t\t\ta single instruction from the loaded program, in the order that they were assembled.\n\t\t\t\t\t"},data:{title:'<span class="label-data">data</span>',detail:'\t\t\t\t\t\tThis region, which immediately follows the <span class="label-text">text</span> region, contains all static data\t\t\t\t\t\tdefined in the .data region of the loaded program. It is used for storing information which cannot be represented\t\t\t\t\t\tin assembly language immediate values - such as strings and arrays. \n\n\t\t\t\t\t\tIf you have defined an <span class="token directive">.asciz</span> string in the <span class="token directive">.data</span>\t\t\t\t\t\tregion of your program, you can switch to the ascii datatype and read the string as it appears: byte by byte in memory.\n\n\t\t\t\t\t\tThis area of the virtual address space may be freely modified by the associated program; however, it cannot be extended\t\t\t\t\t\ti.e. the data can be changed, but not added to.\n\t\t\t\t\t'},heap:{title:'<span class="label-heap">heap</span>',detail:'\t\t\t\t\t\tThis region is the <span class="label-heap">heap</span> and contains data which has been dynamically allocated during the execution of your program.\n\t\t\t\t\t'},uninitialised:{title:"uninitialised memory",detail:"\t\t\t\t\t\tThis region contains uninitialised memory, separating the heap (an area of dynamic memory allocation which immediately\t\t\t\t\t\tfollows the data section) from the stack in the virtual address space allocated to the loaded program.\n\n\t\t\t\t\t\tThe bytes in this section cannot be assumed to be clean, they may contain junk data from whatever process owned this\t\t\t\t\t\tphysical address space before it was allocated to your program. Be aware of this when allocating dynamic data to\t\t\t\t\t\tthe heap.\n\t\t\t\t\t"},stack:{title:'<span class="label-stack">stack</span>',detail:"\t\t\t\t\t\tThe stack is located in the highest addressess of the owning program's virtual address space. As items are pushed onto\t\t\t\t\t\tthe stack, it grows downwards through the addresses until it meets the top of the heap, at which point a segmentation fault\t\t\t\t\t\tis thrown.\n\n\t\t\t\t\t\tAccording to the Procedure Call Standard for the ARM Architecture (AAPCS), the stack should be 8-byte aligned, this means\t\t\t\t\t\tthat the stack must always contain an even number of words. There's nothing forcing you to do this but it is considered\t\t\t\t\t\tgood practice because it improves memory access speeds on some systems. \n\t\t\t\t\t"},endianness:{title:"endianness",detail:'\t\t\t\t\t\t\'Endianness\' describes the byte order within collections of bytes in memory. Since ARMv7 is a 32 bit processor,\t\t\t\t\t\tthe most common \'collection\' of bytes are 32-bit (4-byte) integers. In almost all modern computers, numbers are\t\t\t\t\t\tstored \'<span class="irisc">little-endian</span>\', meaning that the \'logical\' byte order as a human might expect\t\t\t\t\t\tis reversed (!!).\n\n\t\t\t\t\t\tTo take a common example, the hexadecimal number <span class="token immediate">0x12345678</span> is split into its\t\t\t\t\t\trespective bytes:\n\t\t\t\t\t\t<div class="ml-3">\n\t\t\t\t\t\t\t<span class="label-stack">0x12</span>\t\t\t\t\t\t\t<span class="label-text">0x34</span>\t\t\t\t\t\t\t<span class="label-data">0x56</span>\t\t\t\t\t\t\t<span class="token immediate">0x78</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\tIn \'<span class="irisc">big-endian</span>\', these bytes are stored in the order shown; however, in\t\t\t\t\t\t\'<span class="irisc">little-endian</span>\', the order of the bytes is reversed:\t\t\t\t\t\t\n\t\t\t\t\t\t<div class="ml-3">\n\t\t\t\t\t\t\t<span class="token immediate">0x78</span>\t\t\t\t\t\t\t<span class="label-data">0x56</span>\t\t\t\t\t\t\t<span class="label-text">0x34</span>\t\t\t\t\t\t\t<span class="label-stack">0x12</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\tThis reversed order is what is actually contained within the memory. I have provided a way to switch the endianness\t\t\t\t\t\tof each word so that they make a bit more sense when read as a whole.\n\t\t\t\t\t'}},controlTooltip:void 0,ascii:Oe.ascii,dataTypeMap:ut,dataTypeByteSizeMap:dt,shown:!1}},computed:{byteView:qe.byteView,wordView:qe.wordView,memSize:function(){return qe.memory().size},memIsInitialised:function(){return void 0!==qe.memory().buffer},textHeight:function(){return qe.memory().textHeight},dataHeight:function(){return qe.memory().dataHeight},heapHeight:function(){return qe.memory().heapHeight},stackHeight:function(){return qe.memory().stackHeight},textWordHeight:function(){return this.textHeight/4},dataWordHeight:function(){return this.dataHeight/4},heapWordHeight:function(){return this.heapHeight/4},stackWordHeight:function(){return this.stackHeight/4},uninitWordHeight:function(){return Math.max(this.memSize/4-this.textWordHeight-this.dataWordHeight-this.heapWordHeight-this.stackWordHeight,0)},textOffset:function(){return 0},dataOffset:function(){return this.textOffset+this.textWordHeight},heapOffset:function(){return this.dataOffset+this.dataWordHeight},uninitOffset:function(){return this.heapOffset+this.heapWordHeight},stackOffset:function(){return this.uninitOffset+this.uninitWordHeight},dataMap:function(){return qe.memory().dataMap},dataDeclarations:function(){return Array.from(this.dataMap).sort((function(t,e){var n=Object(Yt["a"])(t,2),i=n[0],r=(n[1],Object(Yt["a"])(e,2)),s=r[0];r[1];return i-s})).map((function(t){return t[1]}))},heapMap:function(){return qe.memory().heapMap},heapBlocks:function(){return Array.from(this.heapMap).sort((function(t,e){var n=Object(Yt["a"])(t,2),i=n[0],r=(n[1],Object(Yt["a"])(e,2)),s=r[0];r[1];return i-s})).map((function(t){return t[1]}))},heapContiguousBlocks:function(){return this.heapBlocks.reduce((function(t,e,n,i){var r=i[n-1];return(null===r||void 0===r?void 0:r.allocated)!==e.allocated?t.push(Se()(e)):t[t.length-1].size+=e.size,t}),[])},instructions:function(){return qe.memory().text},instruction:function(){if(void 0!==this.instructionIndex)return this.instructions[this.instructionIndex]}},methods:{show:function(t){this.shown=!1,this.$refs.modal.show();var e=this;setTimeout((function(){e.shown=!0}),350)},byteValue:function(t,e){var n=4*t+this.endianify(e);return this.byteView[n]},wordValue:function(t){return this.wordView[t]},endianify:function(t){return"big"===this.endianness?[3,2,1,0][t]:t},printByte:function(t){return"dec"===this.datatype?t.toString(10):"bin"===this.datatype?this.binstr(t):"ascii"===this.datatype?this.ascii[t][3]:this.hexstr(t)},printWord:function(t){return"dec"===this.datatype?t.toString(10):"bin"===this.datatype?this.binstr(t,32):this.hexstr(t,8)},hexstr:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return"".concat(null===t||void 0===t?void 0:t.toString(16).padStart(e,"0"))},binstr:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:8;return"".concat(null===t||void 0===t?void 0:t.toString(2).padStart(e,"0"))},dataHover:function(t,e){var n=4*t+e,i=this.dataDeclarations.find((function(t){return t.offset<=n&&n<=t.offset+t.size}));i&&(this.highlitData=Array.from(Array(i.offset+i.size).keys()).slice(i.offset),this.hoveredDeclaration=i)},highlight:function(t){return Object(Mt["highlight"])(t.text,Mt["languages"].armv7,"ARMv7")},tip:function(t){this.tooltip=this.tips[t]},untip:function(){this.tooltip=this.tips["default"]}},created:function(){this.untip()},watch:{size:{handler:function(t){"word"===t&&"ascii"===this.datatype&&(this.datatype="hex")}}}}),Ri=Ci,Si=(n("9cfe"),Object(qn["a"])(Ri,Oi,_i,!1,null,"1535a00a",null)),ji=Si.exports,Ii=s["default"].extend({name:"memory",components:{explorer:ji},data:function(){return{tooltip:void 0,tips:{text:{name:"text",tip:"The text section contains the instructions defined in the .text section of the program.",color:"#0077aa"},data:{name:"data",tip:"The data section contains all the static data defined in the .data section of the program.",color:"#ff5555"},uninitialised:{name:"uninitialised memory",tip:"This section contains uninitialised memory waiting to be used by your program.",color:"#dcdcdc"},stack:{name:"stack",tip:"The stack contains data temporarily saved from CPU registers to prevent overwriting.",color:"#5d9455"},stackPointer:{name:"stack pointer",tip:"The stack pointer is a reference to the memory location which represents the current top of the stack.",color:"white"}}}},computed:{memory:qe.memory,registers:qe.registers,textWidth:function(){return this.memory.textHeight/this.memory.size*100},dataWidth:function(){return this.memory.dataHeight/this.memory.size*100},heapWidth:function(){return this.memory.heapHeight/this.memory.size*100},uninitWidth:function(){return Math.max(100-this.textWidth-this.dataWidth-this.heapWidth-this.stackWidth,0)},stackWidth:function(){return this.memory.stackHeight/this.memory.size*100},hoveredSection:function(){var t;return null===(t=this.tooltip)||void 0===t?void 0:t.name},stackPointer:function(){var t=this.memory.size-this.registers[k.SP];return t/this.memory.size*100},used:function(){return this.memory.textHeight+this.memory.dataHeight+this.memory.heapHeight+this.memory.stackHeight}},methods:{tip:function(t){this.tooltip=this.tips[t]},untip:function(){this.tooltip=void 0},explore:function(t){this.$refs.explorer.show(t)}}}),Ei=Ii,Ai=(n("deb3"),Object(qn["a"])(Ei,xi,Ti,!1,null,"03ad7fec",null)),Li=Ai.exports,Ni=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"d-flex flex-column container text-left py-3"},[t._l(t.registers,(function(e,i){return n("div",{key:i,staticClass:"register text-truncate",attrs:{"tour-item":t.regName[i]},on:{mouseover:function(e){return t.registerTip(i)},mouseleave:t.untip}},[n("span",{staticClass:"register-name"},[t._v(t._s(t.regName[i]))]),n("span",{staticClass:"ml-1 px-1",class:{changed:t.changeSet.has(i)}},[t._v(t._s(t.regstr(e)))])])})),n("div",{staticClass:"d-flex my-3 pr-0"},[n("div",{staticClass:"flex-grow-1 cpsr",on:{mouseover:function(e){return t.tip(t.cpsrTitle,t.cpsrExplain)},mouseleave:t.untip}},[t._v(" cpsr ")]),t._l(t.cpsr,(function(e,i){return n("div",{key:i,staticClass:"flag",on:{mouseover:function(e){return t.tip(t.flagTitle[i],t.flagExplain[i])},mouseleave:t.untip}},[n("span",{staticClass:"flag-name"},[t._v(t._s(t.flagName[i]))]),n("span",{class:{changed:t.flagChangeSet.has(i)}},[t._v(t._s(t.flagstr(t.cpsr[i])))])])}))],2),n("div",{staticClass:"dashed flex-grow-1"},[n("div",[t._v(" "+t._s(t.computedTitle)+" ")]),n("div",{staticClass:"description"},[t._v(" "+t._s(t.computedDescription)+" ")])])],2)},Di=[],Mi=(n("a4d3"),n("e01a"),n("6062"),s["default"].extend({name:"registers",props:{msg:String},data:function(){return{regName:S,regTitle:I,regExplain:A,flagName:Z,flagTitle:X,flagExplain:J,cpsrTitle:"CPSR Flags",cpsrExplain:"Four bits in the Current Program Status Register which are used to decide whether a conditional instruction should execute.",title:null,description:null,changeSet:new Set,flagChangeSet:new Set}},computed:{registers:qe.registers,cpsr:qe.cpsr,computedTitle:function(){var t;return null!==(t=this.title)&&void 0!==t?t:"Registers"},computedDescription:function(){var t;return null!==(t=this.description)&&void 0!==t?t:"A simplified view of the data currently stored in the CPU. Hover over the different sections to learn more."}},methods:{regstr:function(t){return"0x".concat(t.toString(16).padStart(8,"0")," (").concat(t,")")},hexstr:function(t){return"0x".concat(t.toString(16))},signedstr:function(t){return t>>>31===1?"-".concat(1+~t):"".concat(t)},flagstr:function(t){return t?"1":"0"},registerTip:function(t){var e=this.registers[t],n=this.hexstr(e),i=this.signedstr(e);this.tip(this.regTitle[t],"          ".concat(this.regExplain[t],"\n          \n          Hex: ").concat(n,"\n          Dec:\n          - Unsigned: ").concat(e,"\n          - Signed:   ").concat(i,"        "))},tip:function(t,e){this.title=t,this.description=e},untip:function(){this.title=null,this.description=null}},watch:{registers:function(t,e){var n=new Set;d(t,e).forEach((function(t,e){var i=Object(Yt["a"])(t,2),r=i[0],s=i[1];r!==s&&n.add(e)})),this.changeSet=n},cpsr:function(t,e){var n=new Set;d(t,e).forEach((function(t,e){var i=Object(Yt["a"])(t,2),r=i[0],s=i[1];r!==s&&n.add(e)})),this.$set(this,"flagChangeSet",n)}}})),Pi=Mi,Bi=(n("f274"),Object(qn["a"])(Pi,Ni,Di,!1,null,"6b0493ca",null)),Fi=Bi.exports,Hi=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"terminal-container pl-1 py-1",class:{crt:t.settings.crtEffect}},[n("div",{ref:"container",staticClass:"prism-container px-2",attrs:{"tour-item":"terminal"},on:{"!keydown":function(e){return(e.type.indexOf("key")||67===e.keyCode)&&e.ctrlKey?void(t.running&&t.stop()):null},click:function(e){return e.target!==e.currentTarget?null:t.focus(e)}}},[n("pre",{staticClass:"repl output",domProps:{innerHTML:t._s(t.output)}}),n("pre",{ref:"input",staticClass:"repl input",attrs:{contenteditable:!t.running||t.interrupted},on:{keydown:[function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:(e.stopPropagation(),t.enter(e))},function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"])?null:(e.stopPropagation(),e.preventDefault(),t.upHistory(e))},function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"])?null:(e.stopPropagation(),e.preventDefault(),t.downHistory(e))}],input:t.onInput}}),n("pre",{staticClass:"repl input-highlight",domProps:{innerHTML:t._s(t.highlitInput)},on:{click:t.focus}})]),n("div",{staticClass:"controls"},[n("div",{staticClass:"clickable",attrs:{"tour-item":"editor-switch"},on:{click:function(e){return e.stopPropagation(),t.$emit("switch")},mouseenter:function(e){t.controlTooltip="editor"},mouseleave:function(e){t.controlTooltip=void 0}}},[n("i",{staticClass:"button code fas fa-code"})]),n("div",{directives:[{name:"show",rawName:"v-show",value:t.controlTooltip,expression:"controlTooltip"}],staticClass:"control-tooltip"},[t._v(t._s(t.controlTooltip))])]),n("div",{staticClass:"popup-output"},[n("div",{staticClass:"p-1",staticStyle:{"border-radius":"0.3rem","background-color":"#191d21"}},[""!==t.computedTooltip.title?n("div",[n("div",{style:"color: "+t.computedTooltip.color},[t._v(t._s(t.computedTooltip.title))]),n("div",[t._v(t._s(t.computedTooltip.message))])]):t._e(),t.errors.length>0?n("div",{staticClass:"clickable hoverable rounded px-1",on:{click:t.run}},[t._v(" "+t._s(t.errors.length)+" errors ")]):t._e()])])])},Ui=[],zi=(n("8a79"),n("38cf"),"irisc:~$ "),Vi=s["default"].extend({name:"terminal",data:function(){return{leadingLine:zi,input:"",output:Tt,history:[],historyIndex:-1,tooltip:{title:"",message:""},restoreDelay:!1,savedDelay:0,outputLength:0,controlTooltip:void 0,isActive:!1}},computed:{settings:Lt.settings,errors:qe.errors,currentInstruction:qe.currentInstruction,running:qe.running,simulatorOutput:qe.output,interrupted:qe.interrupted,exitStatus:qe.exitStatus,breakpoints:qe.breakpoints,paused:qe.paused,highlitInput:function(){var t=this.input.replace(/(\r\n|\n|\r)/gm,"");return this.interrupted||this.running?t:Object(Mt["highlight"])(t,Mt["languages"].armv7,"ARMv7")},computedTooltip:function(){return this.interrupted?{title:"Interrupted",color:"#7dad7d",message:"Input required."}:this.paused&&this.breakpoints.includes(this.currentInstruction)?{title:"Breakpoint hit",color:"#bf5c5f",message:"Switch to editor to continue."}:{}},currentFile:ai.currentFile,currentDirectory:ai.currentDirectory},methods:{stop:qe.stop,run:qe.start,focus:function(){if(this.$refs.input.focus(),this.isActive){var t=window.getSelection();null===t||void 0===t||t.selectAllChildren(this.$refs.input),null===t||void 0===t||t.collapseToEnd()}},onInput:function(t){var e=t.target,n=e.innerText.substring(this.leadingLine.length),i=Bt(e)-this.leadingLine.length;i<0&&(i=0,t.data&&(n=t.data+n.substring(1),i=1)),this.input="".concat(this.leadingLine).concat(n),e.innerText="".concat(" ".repeat(this.leadingLine.length)).concat(n),Ft(e,this.leadingLine.length+i)},enter:function(t){var e=this;t.preventDefault();var n=this.input.substring(this.leadingLine.length).trim().replace(/(\r\n|\n|\r)/gm,"");this.interrupted?this.stdin(n):(this.addHistory(n),this.historyIndex=-1,this.$nextTick((function(){e.output+="\n".concat(e.highlitInput),n.length>0&&e.execute(n),e.setLeadingLine(zi),t.target.innerText=" ".repeat(e.leadingLine.length),e.focus(),e.$nextTick((function(){var t=e.$refs.container;t.scrollTop=t.scrollHeight}))})))},stdin:function(t){var e=this;this.$nextTick((function(){e.setLeadingLine(""),e.$nextTick((function(){var t=e.$refs.container;t.scrollTop=t.scrollHeight})),qe.setStdin(t+"\n")}))},addHistory:function(t){this.history[0]!==t&&""!==t&&this.history.unshift(t)},upHistory:function(t){if(this.historyIndex=Math.min(this.historyIndex+1,this.history.length-1),!(this.historyIndex<0)){var e=this.history[this.historyIndex];this.insertInput(t.target,e)}},downHistory:function(t){this.historyIndex=Math.max(this.historyIndex-1,-1);var e="";this.historyIndex>-1&&(e=this.history[this.historyIndex]),this.insertInput(t.target,e)},insertInput:function(t,e){var n=this;t.innerText="".concat(" ".repeat(this.leadingLine.length)).concat(e),this.input="".concat(this.leadingLine).concat(e),this.$nextTick((function(){n.focus()}))},setLeadingLine:function(t){this.input=t,this.leadingLine=t,this.$refs.input.innerText=" ".repeat(this.leadingLine.length)},execute:function(t){try{if(this.specialInput(t))return;var e=i.parse(t)[0],n=i.compileOne(e,0);if(!(n instanceof he))throw new ce("This operation is not supported on the command-line.",[],-1,-1);if(n instanceof _e)throw new ce("Branch instructions cannot be executed on the command-line.",[],-1,-1);r.execute(n,!1)}catch(s){if(!(s instanceof ne))throw s;this.printError(s)}},specialInput:function(t){if([":reset",":r"].includes(t))return qe.reset(),!0;if([":clear",":c"].includes(t))return this.output=Tt,!0;if([":help",":h"].includes(t))return this.output+=Ot,!0;var e=/^(vi|vim|nvim|nano|ne|emacs -nw|micro|tilde)($|\s)/g,n=t.replace(e,"");if(n!==t){if(Nt["a"].activeTour)throw new ce("Can't switch to the editor yet. Do the tour! You'll get there.",[],-1,-1);return""!==n&&ai.textEdit(n),this.$emit("switch"),!0}if(t.startsWith("echo "))return this.output+='\n<span style="white-space: normal">'.concat(t.slice(5),"</span>"),!0;if("pwd"===t)return this.output+="\n".concat(ai.pwd()),!0;if("ls"===t){var i=this.currentDirectory.directories.map((function(t){return'<span class="col-3 directory">'.concat(t.name,"</span>")})),r=this.currentDirectory.files.map((function(t){return'<span class="col-3 file">'.concat(t.name,"</span>")})),s=['<span class="col-3 directory">.</span>'].concat([this.currentDirectory.parent&&'<span class="col-3 directory">..</span>'],Object(Ct["a"])(i.sort()),Object(Ct["a"])(r.sort()));return this.output+='\n<div class="row">'.concat(s.join("\t"),"</div>"),!0}if(t.startsWith("cd")){var a=t.substring(3).trim();return ai.cd(a),!0}if("./src"===t){if(Nt["a"].activeTour)throw new ce("Not allowed right now. Continue with the tour!",[],-1,-1);if(qe.memory().text.length<1)throw new ce("Editor contains no runnable code.",[],-1,-1);return this.restoreDelay=!0,this.savedDelay=qe.delay(),qe.setDelay(2),qe.start(),!0}return!1},printError:function(t){this.output+='\n        <span class="error-type">'.concat(t.type,"</span>: ").concat(t.message,"      ")},loadHistory:function(){var t;this.history=JSON.parse(null!==(t=localStorage.getItem("history"))&&void 0!==t?t:"[]")}},created:function(){this.loadHistory()},mounted:function(){this.setLeadingLine(zi)},activated:function(){this.isActive=!0,this.focus()},deactivated:function(){this.isActive=!1},watch:{history:function(t){localStorage.setItem("history",JSON.stringify(t))},running:function(t){var e=this;if(t){if(!this.output.endsWith('<span class="token op-label">src</span>')){var n=Object(Mt["highlight"])(zi,Mt["languages"].armv7,"ARMv7");this.output+="\n".concat(n,'./<span class="token op-label">src</span>'),this.restoreDelay=!1}this.outputLength=this.output.length,this.setLeadingLine("")}else this.restoreDelay&&qe.setDelay(this.savedDelay),this.exitStatus instanceof oe?(this.output+="\n",this.printError(this.exitStatus),this.setLeadingLine(zi)):this.setLeadingLine("".concat(this.leadingLine).concat(zi)),this.$nextTick((function(){e.focus()}))},interrupted:function(t){var e=this;t&&this.$nextTick((function(){e.focus()}))},simulatorOutput:function(t){var e=this;if(this.running){var n,i=t.slice(),r=null!==(n=i.pop())&&void 0!==n?n:"";i.length>0&&(this.output=this.output.slice(0,this.outputLength)+"\n"+i.join("\n")),this.setLeadingLine(r),this.$nextTick((function(){var t=e.$refs.container;t.scrollTop=t.scrollHeight}))}}}}),Wi=Vi,$i=(n("aa75"),Object(qn["a"])(Wi,Hi,Ui,!1,null,"6c1b718f",null)),Gi=$i.exports,qi=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("b-modal",{ref:"modal",attrs:{centered:"","hide-header":"","hide-footer":"","body-class":"irisc-modal p-1"}},[n("div",{staticClass:"px-5 py-1"},[n("h4",[t._v("configuration")]),n("div",{staticClass:"mt-3"},[n("div",[t._v(" cpu tickrate "),n("span",{staticClass:"float-right"},[t._v(t._s((1e3/t.settings.delay).toFixed(2))+" tps")])]),n("b-form-input",{attrs:{value:1e3/t.settings.delay,type:"range",min:"0.5",max:"50",step:"0.1"},on:{change:function(e){return t.simulatorState.setDelay(1e3/e)}}}),n("div",[t._v(" ram size "),n("span",{staticClass:"float-right"},[t._v(t._s(t.settings.memSize)+" bytes")])]),n("b-form-input",{attrs:{value:t.memSizes.findIndex((function(e){return e===t.settings.memSize})),type:"range",min:"0",max:t.memSizes.length-1},on:{change:function(e){return t.simulatorState.init(t.memSizes[+e])}}}),n("div",[t._v(" crt effect (epilepsy warning) ")]),n("b-form-checkbox",{attrs:{checked:t.settings.crtEffect,name:"crt-effect",switch:""},on:{change:function(e){return t.settingsState.setCrtEffect(e)}}},[t._v(" "+t._s(t.settings.crtEffect?"on":"off")+" ")])],1)])])},Yi=[],Zi=s["default"].extend({data:function(){return{simulatorState:qe,settingsState:Lt}},computed:{settings:Lt.settings,memSizes:function(){return qe.memory().sizes}},methods:{show:function(){this.$refs.modal.show()}},watch:{settings:{handler:function(){Lt.updateStorage()},deep:!0}}}),Xi=Zi,Ji=Object(qn["a"])(Xi,qi,Yi,!1,null,"64605f75",null),Qi=Ji.exports,Ki=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{ref:"container",staticClass:"container p-2 text-left",attrs:{"tour-item":"tutorial"}},[n("div",[n("div",{staticClass:"title px-1"},[t._v(t._s(t.pageData.title))]),n("div",{staticClass:"content mt-2 mb-5 p-1",domProps:{innerHTML:t._s(t.pageData.content)}})]),n("div",{staticClass:"controls"},[n("div",{staticClass:"p-1",staticStyle:{"border-radius":"0.3rem","background-color":"#191d21"}},[n("i",{staticClass:"fas fa-chevron-left fa-sm p-1 clickable hoverable rounded-sm",on:{click:t.prevPage}}),n("span",{staticClass:"mx-1 user-select-none"},[t._v(t._s(t.page)+"/"+t._s(t.pages.length-1))]),n("i",{staticClass:"fas fa-chevron-right fa-sm p-1 clickable hoverable rounded-sm",on:{click:t.nextPage}})])]),n("div",{staticClass:"contents"},[n("div",{directives:[{name:"click-outside",rawName:"v-click-outside",value:function(){return t.showContents=!1},expression:"() => showContents = false"}],staticClass:"p-1",staticStyle:{"border-radius":"0.3rem","background-color":"#191d21"}},[t.showContents?[t._l(t.contentsSlice,(function(e){return n("div",{key:e.index},[n("a",{staticClass:"link text-white clickable",class:e.index===t.page?"current-page":"",on:{click:function(n){return t.navigateTo(e)}}},[t._v(" "+t._s(e.title)+" ")])])})),n("div",{staticClass:"mt-1 text-right"},[n("span",{},[n("i",{staticClass:"fas fa-chevron-left fa-sm p-1 clickable hoverable rounded-sm",on:{click:function(e){t.contentsPage>0&&t.contentsPage--}}}),n("span",{staticClass:"mx-1 user-select-none"},[t._v(t._s(t.contentsPage)+"/"+t._s(t.nContentsPages-1))]),n("i",{staticClass:"fas fa-chevron-right fa-sm p-1 clickable hoverable rounded-sm",on:{click:function(e){t.contentsPage<t.nContentsPages-1&&t.contentsPage++}}})])])]:n("a",{staticClass:"link clickable",staticStyle:{color:"#f9e1b3"},on:{click:t.openContents}},[t._v("contents")])],2)])])},tr=[],er=(n("a1f0"),{title:"Introduction 0: Welcome",content:'    Welcome to <span class="irisc">iRISC</span>.\n\n    <span class="irisc">iRISC</span> stands for <i>interactive reduced instruction-set computer</i>.    This web app is an interactive introduction to RISC computer architecture and assembly language.    Specifically, <span class="irisc">ARMv7</span> assembly language. \n\n    I have tried to write a simple tutorial which goes through some of the basics, not only of    writing assembly, but also some aspects of computer architecture. I aimed to keep the required    knowledge to a minimum; however, I do assume some understanding of basic programming concepts:     number representations, signed and unsigned integers, etc.\n\n    Either way, I hope you find this to be a fun/useful tool!\n\n    <div class="hmm">      <div class="token label mb-1">Note</div>      If you already know your assembly pretty well and are just here for fun, use the <u>files</u>      link in the bottom right of the editor screen to explore the demos.\n\n      You can switch to the editor screen using the <i class="fas fa-code fa-sm irisc"></i> button.\n    </div>    \n  '}),nr={title:"Introduction 1: The Terminal",content:'    In the center region of the page there is a simple <i>read-evaluate-print-loop</i> (REPL) terminal.    This terminal supports simple syntax highlighting and error checking for a subset of the    <span class="irisc">ARMv7</span> instruction-set.\n\n    <span class="token operation">Operations</span> are highlighted in red.\n    <span class="token register">Registers</span> are highlighted in blue.\n    <span class="token immediate">Immediates</span> are highlighted in grey.\n    Errors printed as command output.\n    \n    Type the string \'error\' into the terminal and press enter to produce an error.\n\n    <div class="hmm">      <div class="token label mb-1">Hint</div>      You can use \':clear\' (or \':c\' shorthand) to clear the terminal and \':reset\' (\':r\') to reset      the simulator.    </div>\n  '},ir={title:"Introduction 2: The Editor",content:'    Click the <i class="fas fa-code fa-sm irisc"></i> button in the top right of the terminal to access the    code editor. \n    \n    This editor supports simple syntax highlighting and error checking for a larger subset    of the <span class="irisc">ARMv7</span> instruction-set.\n\n    <span class="token operation">Operations</span> are highlighted in red.\n    <span class="token register">Registers</span> are highlighted in blue.\n    <span class="token immediate">Immediates</span> are highlighted in grey.\n    <span class="token label">Labels</span> are highlighted in yellow.\n    <span class="token error">Errors</span> are shown with a wavy underline.\n    \n    Type the string \'error\' into the text editor to produce an error. Hover over the underlined token    to show more detailed information about the error in the bottom left corner of the editor.\n\n    You can use the <i class="fas fa-terminal fa-sm irisc"></i> button to return to the terminal at any time.\n  '},rr={title:"Introduction 3: The Registers 0",content:'    The CPU registers are the most accessible form of storage in the modern computer. The trade-off is that    read/write speed comes at the cost of capacity. The CPU simulated here has 16 registers, each 32-bits    wide, totalling just 1/16 of a kB.\n\n    The first fifteen registers (<span class="token register">r0</span> >> <span class="token register">lr</span>)    are considered to be <i>general-purpose</i>, meaning that they are freely accessible to be edited by the executing program.\n\n    The final three registers      (<span class="token register">sp</span>,       <span class="token register">lr</span>,       <span class="token register">pc</span>)     have semantic roles which, in general, a defensive programmer should aim to respect.\n\n    The registers can be found in the far left fenced section of the application. The current value is displayed as    an <span class="irisc">unsigned integer</span> in both hexadecimal and decimal representations. \n    \n    Beneath the registers are the cpsr flags - more on these later.\n  '},sr={title:"Introduction 4: The Registers 1",content:'    On the previous page, I mentioned the semantic roles of the final three registers.\n\n    The <span class="token register">sp</span> is the <span class="token register">stack pointer</span>. This register    is a memory address (or <span class="irisc">pointer</span>) to the top of the stack; temporary local storage in RAM.\n\n    The <span class="token register">lr</span> is the <span class="token register">link register</span>. This register    stores a <span class="irisc">pointer</span> to the next instruction following a function call so that the program    knows where to return to after the function completes.\n\n    The <span class="token register">pc</span> is the <span class="token register">program counter</span>. This register    is a <span class="irisc">pointer</span> to the next instruction to be executed in the program; also stored in RAM.\n    \n    The <span class="token register">program counter</span> is not considered <i>general-purpose</i> because editing the    contents of the <span class="token register">pc</span> during execution has side-effects. Actually, just one very    important side-effect in that it alters which instruction is executed next. You may edit the    <span class="token register">pc</span> during execution, but only with the express intent of controlling the flow    of the program.\n  '},ar={title:"Introduction 5: The Memory",content:'    The simulation RAM is displayed in the lower right fenced section of the application window.    The <span class="token register">text</span> (instructions) and <span class="token operation">data</span>    sections grow from the left, and the <span class="token line-comment">stack</span> grows from the right - mirroring    how memory is structured in a typical computer.\n\n    By default, <span class="irisc">iRISC</span> simulates a system with an unrealisticaly limited amount of RAM.    This is by design. Principally, <span class="irisc">iRISC</span> is a teaching aid - not a web-based ARM emulator.    Limiting the memory in this way enables it to demonstrate some slightly unclear aspects of how the software and    hardware interact under the hood. \n    \n    If you wish to increase the amount of RAM available, you can do so using the    <i class="fas fa-sliders-h fa-sm"></i> button in the bottom right corner.\n  '},or={title:"Introduction 6: The Assembler 0",content:'    The <span class="irisc">assembler</span> is located in the lower central fenced section of the application window.    The most recently interpreted instruction is assembled into machine code and displayed in the upper fenced section    of the assembler component. Extra information about the instruction is displayed in the fenced section below it.\n\n    In modern programming, code that you write is compiled into assembly language and then further assembled into machine    code. This machine code is then decoded and processed by the CPU where it is used to decide which action needs to be    taken. In the case of the ARMv7 family of processors, all assembled instructions fit into 32 bits of space.\n    \n    Machine code is the lowest level programming language. The language spoken by actual hardware. You will most certainly    never have to write it, but it can be beneficial (and interesting!) to understand how it works.\n  '},cr={title:"Introduction 7: The Assembler 1",content:'    Switch back to the terminal view using the <i class="fas fa-terminal fa-sm irisc"></i> button and enter the following    command.\n    <div class="ml-5">\n      <span class="token operation">mov</span>      <span class="token register">r0</span>,       <span class="token immediate">#1</span>\n    </div>\n    Press enter and you should see that the <span class="irisc">assembler</span> section has been populated! Both the bitcode    and text versions of the instruction are displayed, along with the execution status. \n    \n    You will notice that the machine code for the instruction has been divided into many different sections. Each of these    sections has a particular meaning which the the CPU uses to understand which action it needs to take. \n    \n    <div class="hmm">      <div class="token label mb-1">Hint</div>      You can hover over any one of these areas to learn more about how the computer is able to decode your instruction.\n    </div>\n    <div class="hmm">      <div class="token label mb-1">New!</div>      You can use the <i class="fas fa-history fa-sm text-white"></i> button to view the history of executed instructions      and summaries of how they affected the state of the simulated CPU and memory.\n    </div>\n  '},lr={title:"Introduction 8: Outro",content:"    Now that we've gone through the app interface and some computer architecture basics, it's time to get into writing    some actual assembly language and seeing what affect it has on the simulator.\n\n    Continue to the next page to start learning some <span class=\"irisc\">ASM</span> basics!\n  "},ur=[er,nr,ir,rr,sr,ar,or,cr,lr],dr={title:"Basics 0: mov",content:'    The <span class="token operation">mov</span> instruction is the most basic instruction in the ARM instruction-set.    It simply inserts a single, source value into a destination register. The source value is what is known as a    <span class="irisc">flexible operand</span> which means it can either be an <span class="token immediate">immediate</span>    (a numeric literal), or the contents of a <span class="token register">register</span>.\n\n    For most instructions in ARM assembly, source values move from right to left into the destination register. For example:\n    <div class="ml-5">\n      <span class="token operation">mov</span>      <span class="token register">r0</span>,       <span class="token immediate">#1</span>\n    </div>\n    Takes the source value <span class="token immediate">#1</span> (the number 1) and <span class="token operation">mov</span>-es    it into the destination register <span class="token register">r0</span>.\n\n    Click the <i class="fas fa-terminal fa-sm irisc"></i> button to switch back to the terminal environment and experiment with the    <span class="token operation">mov</span> instruction!\n\n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      Try using a <span class="token register">register</span> as a source value. How does this change the assembled machine code?    </div>\n  '},hr={title:"Subroutine 0-0: The Flex Operand",content:'    On the previous page, I mentioned a concept called the <span class="irisc">flexible operand</span>. The flexible operand is just    that, <span class="irisc">flexible</span>. It can be a <span class="token register">register</span>; a    <span class="token register">register</span> with an additional, optional shift; or an <span class="token immediate">immediate</span>    value. \n    \n    After assembling the rest of the required information for the <span class="token operation">mov</span> instruction into machine code,    we have just 12 bits left over.\n\n    In the case of a <span class="token register">register</span>, the final 12 bits of the instruction are arranged [8, 4]. The first eight    are used to describe the shift and the final four identify the <span class="token register">register</span>.\n\n    In the case of an <span class="token immediate">immediate</span> value, the 12 bits are arranged [4, 8]. The last eight bits describe    an 8-bit number (0 - 255). The first four are where things get clever. These four bits are the <span class="irisc">barrel shifter</span>.\n  '},pr={title:"Subroutine 0-1: The Barrel Shifter",content:'    In computer hardware, a <span class="irisc">barrel shifter</span> is a circuit which can shift data by a specified number of bits.    In an ARMv7 processor the barrel shift is employed in a clever way to maximise the number of useful immediates that can be represented    in 12 bits without the need for extra instructions.\n\n    The first four bits of the 12 bits of space specify the number of bits by which the remaining 8-bit number should be rotated right.    Because the maximum number that can be represented in 4 bits is 15, this value is first multiplied by two before applying the rotation,    allowing for a full range of even rotations [0, 2, ..., 28, 30].\n\n    In this way, ARM enables many of the more useful constants to be represented rather than just any number with a maximum bit-width of 12    (up to 4095). For instance, all powers of 2 up to a full word width (32 bits). \n\n    <div class="hmm">      <div class="token label mb-1">Hint</div>      You can experiment with this concept by using the binary (<span class="token immediate">#0b...</span>), octal      (<span class="token immediate">#0...</span>), and hexadecimal (<span class="token immediate">#0x...</span>) immediate representations      in your instructions.\n      <div class="ml-5">\n        <span class="token operation">mov</span>        <span class="token register">r0</span>,         <span class="token immediate">#0xff00</span>\n      </div>    </div>    \n  '},fr={title:"Basics 1: mvn",content:'    <span class="token operation">mvn</span> is the negative counterpart of the <span class="token operation">mov</span>    instruction. It has the same syntax and effect, except that the negated value of the source register is places into    the destination register.\n\n    Try an <span class="token operation">mvn</span> instruction now!\n\n    \n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      You may notice that the result is a very large, positive number. This isn\'t a mistake... But why?    </div>\n  '},mr={title:"Basics 2: add",content:'    The <span class="token operation">add</span> instruction performs integer addition.    Like the <span class="token operation">mov</span> instruction, the operation is evaluated from right to left.    For example:\n    <div class="ml-5">\n      <span class="token operation">add</span>      <span class="token register">r0</span>,       <span class="token register">r1</span>,       <span class="token immediate">#1</span>\n    </div>\n    Takes the second source value <span class="token immediate">#1</span> (the number 1), adds it to the first source value    <span class="token register">r1</span>, and places the result into the destination register <span class="token register">r0</span>.\n\n    Try out some <span class="token operation">add</span> operations now!\n\n\n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      What happens when the result of an addition is too large to store in a single register?    </div>\n  '},gr={title:"Basics 3: sub",content:'    The <span class="token operation">sub</span> instruction performs integer subtraction.    Like the <span class="token operation">mov</span> and <span class="token operation">add</span> instructions, the    operation is evaluated from right to left. For example:\n    <div class="ml-5">\n      <span class="token operation">sub</span>      <span class="token register">r0</span>,       <span class="token register">r1</span>,       <span class="token immediate">#1</span>\n    </div>\n    Takes the second source value <span class="token immediate">#1</span> (the number 1), subtracts it from the first source value    <span class="token register">r1</span>, and places the result into the destination register <span class="token register">r0</span>.\n\n    Experiment with <span class="token operation">sub</span>tracting now.\n\n\n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      What happens if you subtract a larger number from a smaller number?\n    </div>\n  '},br={title:"Basics 4: rsb",content:'    The <span class="token operation">rsb</span> instruction works similarly to the regular <span class="token operation">sub</span>    instruction, except the first source register is subtracted from the second source register and then the result is placed in the    destination register. For example:\n    <div class="ml-5">\n      <span class="token operation">rsb</span>      <span class="token register">r0</span>,       <span class="token register">r1</span>,       <span class="token immediate">#1</span>\n    </div>\n    Takes the first source value <span class="token register">r1</span>, subtracts it from the second source value    <span class="token immediate">#1</span> (the number 1), and places the result into the destination register    <span class="token register">r0</span>.\n\n    Try out the <span class="token operation">rsb</span> instruction now.\n\n\n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      Why have both the <span class="token operation">rsb</span> and <span class="token operation">sub</span> instructions? Maybe      it\'ll become clear later...\n    </div>\n  '},vr={title:"Basics 5: Bitwise Operations",content:'    The <span class="token operation">and</span>, <span class="token operation">orr</span>, <span class="token operation">eor</span>,    and <span class="token operation">bic</span> instructions are all what are called bitwise operations. Much like the    <span class="token operation">add</span> and <span class="token operation">sub</span> instructions, they are evaluated from right    to left.\n\n    <span class="token operation">and</span> performs a bitwise <i>and</i> operation.    <div class="ml-5 mt-1">      <span class="token register">1</span>01<span class="token register">1</span>1 \n      <span class="token register">1</span>10<span class="token register">1</span>0 >>> <span class="token register">10010</span>\n    </div>\n    <span class="token operation">orr</span> performs a bitwise <i>or</i> operation.    <div class="ml-5 mt-1">      10<span class="token register">1</span>1<span class="token register">1</span>\n      <span class="token register">1</span><span class="token register">1</span>0<span class="token register">1</span>0 >>> <span class="token register">11111</span>\n    </div>\n    <span class="token operation">eor</span> performs an <i>exclusive or</i> operation.    <div class="ml-5 mt-1">      10<span class="token register">1</span>1<span class="token register">1</span> \n      1<span class="token register">1</span>010 >>> <span class="token register">01101</span>\n    </div>\n    <span class="token operation">bic</span> performs a <i>bit clear</i> operation, which is an <span class="token operation">and</span>    operation between the first operand and the complement of the second.    <div class="ml-5 mt-1">      10<span class="token register">1</span>1<span class="token register">1</span> \n      11<span class="token register">0</span>1<span class="token register">0</span> >>> <span class="token register">00101</span>\n    </div>\n    Play around with the bitwise operations now to see their effects.\n  '},yr=[dr,hr,pr,fr,mr,gr,br,vr],kr={title:"Intermediate 0: The Editor (Revisited)",content:'    Now that we\'ve gone through the basics of writing individual instructions in the terminal. It\'s    time to switch to the editor and write some multi-line programs. Click the    <i class="fas fa-code fa-sm irisc"></i> button to switch to the editor.\n\n    The editor allows you to write both scripts and complete programs in ARMv7 assembly language.    A script does not require an entry point and will run from top to bottom. A complete program    uses the <span class="token label">main:</span> label as its entry point.\n\n    Both types of program will run until either a final <span class="token operation">bx</span>    <span class="token register">lr</span> instruction (more on this later) or until the program    counter runs off the end of the program.\n  '},wr={title:"Intermediate 1: Labels",content:'    <span class="token label">Labels</span> allow you, the programmer, to map names to locations    in the program which can then be <span class="token operation">branch</span>ed to in order to    control the flow of the program. Labels are a vital aspect of writing assembly, necessary to    implement loops, functions and even conditions in some cases.\n\n    You can <span class="token label">label</span> any instruction in the text section of the program.    In actual ARM, you can put a label and an instruction on the same line. To keep parsing simple,    this is not supported by <span class="irisc">iRISC</span>, a label must be on its own line.\n\n    Let\'s start with the entry point. Add the <span class="token label">main:</span> label and add    some of the instructions you learnt in the previous chapter to execute in order. Leave off the    <span class="token operation">bx</span> <span class="token register">lr</span> for now.\n    <div class="ml-5">\n      <span class="token label">main:</span>      \n      <div class="ml-5">        <span class="token operation">mov</span>        <span class="token register">r0</span>,         <span class="token immediate">#1</span>\n        <span class="token operation">mov</span>        <span class="token register">r1</span>,         <span class="token immediate">#2</span>\n        ...\n      </div>    </div>\n    Execute the program using the <span class="green fas fa-play"></span> button in the top right    of the editor. You can control the tickrate of the program using the range slider, or step    through each instruction manually using the <span class="amber fas fa-step-forward"></span>    button.\n\n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      What happened when the program reached the end of your instructions? Add a final      <span class="token operation">bx</span> <span class="token register">lr</span> instruction      and try again. What\'s different?\n    </div>\n  '},xr={title:"Intermediate 2: Branches (b)",content:'    Now that we\'ve added <span class="token label">labels</span> to our assembly language arsenal,    we can begin to control the flow of our program. We do this using    <span class="token operation">branches</span>. There are a few different kinds of branches    available for different purposes. In this step we will be using the    <span class="token operation">b</span> instruction.\n\n    The <span class="token operation">b</span> instruction is as simple as branches get. You provide    a single operand, the label that you would like to branch to, and the assembler handles the rest.\n\n    Under the hood, during the assembly process, the text label is translated into an    <span class="irisc">offset</span> from the branch instruction to the provided label.    If the label is three instructions before the branch, then the offset would be -3.\n\n    Add a <span class="token label">label:</span> to the end of your program and some more instructions    of your choice afterward. Finally, add a <span class="token operation">b</span>    <span class="token label">label</span> instruction. You can name the <span class="token label">label</span>    whatever you want.\n\n    <div class="hmm">      <div class="token label mb-1">Remember</div>      At this stage, the <span class="token operation">bx</span> <span class="token register">lr</span>      instruction will end the program, so this should be the last instruction executed by the simulator.\n    </div>\n    Your program should now look something like this:\n\n    <div class="ml-5">      <span class="token label">main:</span>\n        <div class="ml-5">...</div>\n      <span class="token label">label:</span>\n        <div class="ml-5">          ...\n          <span class="token operation">b</span> <span class="token label">label</span>\n\n          <span class="token operation">bx</span> <span class="token register">lr</span>\n        </div>    </div>    \n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      What have we created? How would you write this same construct in a higher level language?\n    </div>\n  '},Tr={title:"Intermediate 3: Comparisons (cmp)",content:'    If you answered <span class="irisc">an infinite loop</span> to the question at the end of the last    step then you\'d be absolutely right.\n    \n    Infinite loops are cool, but, on their own, not particularly useful in the context of a full program.    At the very least we need some way of breaking out of this loop if some condition is met so that our    program can end. Enter the <span class="token operation">cmp</span> instruction. \n    \n    You\'d better strap in if this is new to you because there\'s gonna be a lot of new concepts introduced    in the next few steps.\n\n    The <span class="token operation">cmp</span> instruction performs an arithmetic subtraction and uses    the result to set the <span class="irisc">cpsr</span> flags. Crucially, the    <span class="token operation">cmp</span> instruction does not alter the contents of any register during    this process, the result of the operation is discarded after the flags are set.\n\n    Continue to the next page to learn more about the <span class="irisc">cpsr</span> and its flags.\n\n    <div class="hmm">      <div class="token label mb-1">Remember</div>      Stop the infinite loop with the <i class="red fas fa-stop"></i> button.\n    </div>  '},Or={title:"Subroutine 1-0: The CPSR",content:'    The <span class="irisc">cpsr</span> stands for the \'current program status register\' and is one of the    <i>non</i> general-purpose registers in the ARMv7 CPU. Four bits of this register are dedicated to the    condition code flags: boolean values most often used to evaluate the result of comparisons in the context    of <span class="irisc">conditional operations</span>. \n    \n    The four flags are as follows:\n\n    <div class="ml-5">      <span class="irisc">N</span> - result is negative\n      <span class="irisc">Z</span> - result is equal to zero\n      <span class="irisc">C</span> - result did carry\n      <span class="irisc">V</span> - result did overflow\n    </div>\n    The first two should be fairly self explanatory, but <span class="irisc">C</span> and    <span class="irisc">V</span> are a little more nebulous. Let\'s revisit them in more detail.\n  '},_r={title:"Subroutine 1-1: Signed Overflow",content:'    <span class="irisc">V</span>, the overflow condition, triggers when an operation results a sign change in    an unexpected way. For example, if an addition of two positive <span class="irisc">addends</span> results    in a sign change from positive to negative.\n\n    The <span class="irisc">sign</span> of an integer is stored using a truly beautiful concept called    <span class="irisc">two\'s complement</span>. The important thing to know about two\'s complement number    representation is that if the most significant bit (msb) is set, then the number is    <span class="irisc">negative</span>, and the absolute value of a negative number is read by inverting the    bits and adding 1.\n\n    Imagine a computer with only four bits of space (called a <span class="irisc">nibble</span>, by the way)    in each of its registers. Consider this binary add for both signed and unsigned representations.\n\n    <div class="ml-5">      b | <span class="token register">0111</span> + <span class="token register">0001</span> = <span class="token register">1000</span>\n      u | &nbsp;&nbsp;&nbsp;7 + &nbsp;&nbsp;&nbsp;1 = &nbsp;&nbsp;&nbsp;8 &nbsp;<span class="irisc">&#10003;</span>\n      s | &nbsp;&nbsp;&nbsp;7 + &nbsp;&nbsp;&nbsp;1 = &nbsp;&nbsp;-8 &nbsp;<span class="irisc">??</span>\n    </div>\n    <div class="hmm">      <div class="token label mb-1">Remember</div>      You need to invert the bits and add one to get the absolute signed value from the binary.\n    </div>\n    It\'s important to note that the computer doesn\'t care whether you as the programmer are treating this data    as signed or unsigned, it just applies the rules of binary maths. The overflow flag will be set to indicate    that a signed overflow has occurred, but it\'s up to you to decide whether or not that matters. \n  '},Cr={title:"Subroutine 1-2: Unsigned Carry",content:'    <span class="irisc">C</span>, the carry condition, triggers when an operation results in a carry out or borrow    into the most significant bit. This is a little difficult to explain, but effectively what this flag tells you    is that the result would have been different if the computer had an extra bit of space to store the result.\n\n    Imagine again a computer that has only a nibble of space in its registers, and a phantom 5th bit which doesn\'t    physically exist, but we know it\'s there.\n\n    <div class="ml-5">      <span class="token immediate">0</span><span class="token register">1111</span> +      <span class="token immediate">0</span><span class="token register">0001</span> =      <span class="token immediate">1</span><span class="token register">0000</span>\n    </div>\n    The 5th set-bit cannot be represented in the <span class="irisc">nibble</span> so, in unsigned arithmetic, the    largest number we can represent has wrapped round to the smallest, setting the flag in the process. This is the    <span class="irisc">carry</span> condition.\n    \n    Similarly, the flag can also be set by a subtraction causing a wrap in the opposite direction, resulting in a    <span class="irisc">borrow</span> condition.\n\n    <div class="ml-5">      <span class="token immediate">1</span><span class="token register">0000</span> -      <span class="token immediate">0</span><span class="token register">0001</span> =      <span class="token immediate">0</span><span class="token register">1111</span>\n    </div>\n    To confuse matters just a little more though (just in case you were starting to get it), ARM uses an    <span class="irisc">inverted</span> carry flag for the <i>borrow</i> condition, but not for the <i>carry</i>. This means that,    when subtracting, the carry flag will be <u>unset</u> if the borrow condition is met, and set if not.\n  '},Rr={title:"Intermediate 4: Conditions 0",content:'    Now that we\'ve gone over the flags and how to set them, we can start to work in constructs that read those flags    and decide whether or not to execute the associated instruction. These are called <span class="irisc">conditions</span>.\n\n    We have a 15 different condition suffixes available to us in ARM assembly, each of which inspect the value of one    or more of the cpsr flags to evaluate some scenario, some of which may be familiar to you.\n\n    <div class="ml-5">      <div><span class="irisc">al</span> : always</div>      <div><span class="irisc">eq</span> : equal</div>      <div><span class="irisc">ne</span> : not equal</div>      <div><span class="irisc">mi</span> : negative</div>      <div><span class="irisc">pl</span> : positive or zero</div>      <div><span class="irisc">vs</span> : overflow</div>      <div><span class="irisc">vc</span> : no overflow</div>\n      <div>signed</div>      <div><span class="irisc">gt</span> : greater than</div>      <div><span class="irisc">ge</span> : greater than or equal</div>      <div><span class="irisc">lt</span> : less than</div>      <div><span class="irisc">le</span> : less than or equal</div>\n      <div>unsigned</div>      <div><span class="irisc">hi</span> : greater than</div>      <div><span class="irisc">cs</span> : greater than or equal</div>      <div><span class="irisc">cc</span> : less than</div>      <div><span class="irisc">ls</span> : less than or equal</div>    </div>\n    Continue to the next step to learn how to use these condition suffixes.\n  '},Sr={title:"Intermediate 5: Conditions 1",content:'    You can place any of the condition suffixes mentioned on the previous page after nearly any instruction in    ARMv7 assembly in order to conditionally execute it. Click the <i class="fas fa-terminal fa-sm irisc"></i>    button to switch back to the terminal and we\'ll try some out.\n\n    First let\'s reset the simulator. Enter \':r\' into the terminal.\n\n    Now use the <span class="token operation">cmp</span> instruction to compare the value in    <span class="token register">r0</span> to the immediate value <span class="token immediate">#1</span>.    Remember, only the flexible operand can contain an immediate value. Check the reported flag values underneath    the registers marked <span class="irisc">cpsr</span>.\n\n    <div class="hmm">      <div class="token label mb-1">Hint</div>      You should see that only the <span class="irisc">negative</span> (N) condition flag has been set. If you\'re      seeing something different, check that you have reset the terminal with \':r\' and that your      <span class="token operation">cmp</span> instruction is correct.\n    </div>\n    Now try using the <span class="token operation">eq</span> condition suffix on an instruction of your choosing.    Your instuction should take the following form:\n\n    <div class="ml-5">      <span class="token operation">mov<u>eq</u></span> ...    </div>\n    In the <span class="irisc">assembler</span> window, you should see that the instruction has been marked as    <span class="not-executed">Not Executed</span>. The CPU has skipped this instruction because the    <span class="token operation">eq</span> condition was not met.\n\n    <div class="hmm">      <div class="token label mb-1">Remember</div>      You can hover the different sections of the instruction to learn more.\n    </div>  '},jr={title:"Intermediate 7: Breaking the Loop",content:'    Switch back to the editor where we left the loop earlier. \n    \n    Remove your code from between the <span class="token label">main:</span> and    <span class="token label">label:</span> labels and add a single instruction which sets the value of    <span class="token register">r0</span> to <span class="token immediate">#0</span>.\n\n    Next, replace the code within your loop with:\n\n    <div class="ml-5">      <ol>        <li>          an instruction which increments the value of <span class="token register">r0</span>\n        </li>        <li>          a comparison which compares the value of <span class="token register">r0</span> to          <span class="token immediate">#6</span>\n        </li>        <li>          add a <span class="token operation">ne</span> (not equal) condition suffix to the          <span class="token operation">b</span> <span class="token label">label</span> instruction\n        </li>      </ol>    </div>\n    Run the program again. \n    \n    <div class="hmm">      <div class="token label mb-1">Hmm...</div>      What happens now?\n    </div>    \n  '},Ir=[kr,wr,xr,Tr,Or,_r,Cr,Rr,Sr,jr],Er=[ur,yr,Ir],Ar=Er.reduce((function(t,e){return[].concat(Object(Ct["a"])(t),Object(Ct["a"])(e))}),[]),Lr=Ar.map((function(t,e){var n=Object(Ct["a"])(t.title.matchAll(/([\d-]+)(?::\s)(.*)/g))[0],i=Er.findIndex((function(e){return e.includes(t)})),r={title:"".concat(i,"-").concat(n[1]," ").concat(n[2]),index:e};return r})),Nr=s["default"].extend({name:"tutorial",data:function(){return{pages:Ar,page:0,contents:Lr,contentsPerPage:10,contentsPage:0,showContents:!1}},computed:{pageData:function(){return this.pages[this.page]},nContentsPages:function(){return Math.ceil(this.contents.length/this.contentsPerPage)},contentsSlice:function(){return this.contents.slice(this.contentsPage*this.contentsPerPage,(this.contentsPage+1)*this.contentsPerPage)}},methods:{nextPage:function(){this.pages.length>this.page+1&&this.page++},prevPage:function(){this.page>0&&this.page--},openContents:function(){this.contentsPage=Math.floor(this.page/10),this.showContents=!0},navigateTo:function(t){this.page=t.index}},created:function(){var t;this.page=JSON.parse(null!==(t=localStorage.getItem("tutorial"))&&void 0!==t?t:"0")},watch:{page:function(){var t=this;this.showContents=!1,localStorage.setItem("tutorial",JSON.stringify(this.page)),this.$nextTick((function(){t.$refs.container.scrollTo({top:0,behavior:"auto"})}))}}}),Dr=Nr,Mr=(n("b4f7"),Object(qn["a"])(Dr,Ki,tr,!1,null,"a80cebae",null)),Pr=Mr.exports,Br=(n("680b"),n("9ae0"),n("6b4d"),s["default"].extend({name:"emulator",components:{editor:fi,terminal:Gi,registers:Fi,memory:Li,instruction:wi,tutorial:Pr,settings:Qi},data:function(){return{env:bt.TERMINAL,dismissTooSmall:!1,windowSize:0}},computed:{currentTick:qe.currentTick,errors:qe.errors,errorSummary:function(){return this.errors.map((function(t){return"".concat(t.constructHelperHTML())}))},running:qe.running,paused:qe.paused,isTooSmall:function(){return!this.dismissTooSmall&&this.windowSize<1250},EnvironmentType:function(){return bt}},methods:{switchEnvironment:function(){this.env===bt.TERMINAL?this.env=bt.EDITOR:this.env=bt.TERMINAL,localStorage.setItem("environment",this.env)},startTour:function(){var t;this.env=bt.TERMINAL,Pt().start(),null===(t=Nt["a"].activeTour)||void 0===t||t.once("complete",(function(){localStorage.setItem("doneTour","true"),qe.reset()}))},windowSizeListener:function(){this.windowSize=window.innerWidth},keyListener:function(t){this.env===bt.EDITOR&&("ArrowDown"===t.code&&(t.ctrlKey||t.metaKey)?(t.preventDefault(),this.running?this.paused?qe.resume():qe.pause():qe.start()):"ArrowUp"===t.code&&(t.ctrlKey||t.metaKey)?(t.preventDefault(),qe.stop()):"ArrowRight"===t.code&&(t.ctrlKey||t.metaKey)?(t.preventDefault(),qe.stepForward()):"ArrowLeft"===t.code&&(t.ctrlKey||t.metaKey)&&(t.preventDefault(),qe.stepBack()))}},created:function(){Lt.init(),qe.init(),ai.init(),qe.setVueInstance(this),window.addEventListener("resize",this.windowSizeListener),this.windowSizeListener()},mounted:function(){var t,e=this;document.addEventListener("keydown",this.keyListener.bind(this));var n,i=null!==(t=localStorage.getItem("doneTour"))&&void 0!==t&&t;i?(this.env=null!==(n=localStorage.getItem("environment"))&&void 0!==n?n:bt.TERMINAL,this.switchEnvironment(),this.$nextTick((function(){return e.switchEnvironment()}))):this.startTour()},beforeDestroy:function(){window.removeEventListener("resize",this.windowSizeListener),document.removeEventListener("keydown",this.keyListener)},watch:{crtEffect:function(t){var e=document.getElementsByTagName("html")[0];t?e.classList.add("crt"):e.classList.remove("crt")}}})),Fr=Br,Hr=(n("fffb"),Object(qn["a"])(Fr,a,o,!1,null,null,null)),Ur=Hr.exports,zr=n("5f5b"),Vr=n("b1e0"),Wr=n("c28b"),$r=n.n(Wr);n("616d"),n("f9e3"),n("2dd8"),n("15f5");s["default"].use(zr["a"]),s["default"].use(Vr["a"]),s["default"].use($r.a),s["default"].config.productionTip=!1,new s["default"]({render:function(t){return t(Ur)}}).$mount("#app")},de2b:function(t,e,n){},deb3:function(t,e,n){"use strict";n("de2b")},f274:function(t,e,n){"use strict";n("3809")},fffb:function(t,e,n){"use strict";n("a210")}});
//# sourceMappingURL=app.d00c4dd8.js.map