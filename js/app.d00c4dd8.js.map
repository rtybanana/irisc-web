{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vue/debug.vue?09db","webpack:///./src/vue/instruction.vue?d792","webpack:///./src/vue/debug.vue?d4f8","webpack:///./src/vue/files.vue?3473","webpack:///./src/assets/scanf/scanf.js","webpack:///./src/vue/instruction.vue?6eca","webpack:///./src/assets/scanf/gets.js","webpack:///./src/vue/editor.vue?3a9a","webpack:///./src/vue/explorer.vue?d31b","webpack:///./src/vue/terminal.vue?f1a2","webpack:///./src/vue/tutorial.vue?3c8f","webpack:///./src/assets/scanf/utils.js","webpack:///./src/app.vue?de97","webpack:///./src/vue/editor.vue?73dd","webpack:///./src/assets/functions.ts","webpack:///./src/constants/operations.ts","webpack:///./src/constants/registers.ts","webpack:///./src/constants/conditions.ts","webpack:///./src/constants/shifts.ts","webpack:///./src/constants/flags.ts","webpack:///./src/constants/transfer.ts","webpack:///./src/constants/allocation.ts","webpack:///./src/constants/directives.ts","webpack:///./src/constants/index.ts","webpack:///./src/constants/terminal.ts","webpack:///./src/utilities/queue.ts","webpack:///./src/utilities/settings/state.ts","webpack:///./src/utilities/settings/index.ts","webpack:///./src/utilities/tour.ts","webpack:///./src/utilities/dom.ts","webpack:///./src/simulator/state.ts","webpack:///./src/assets/bitset.ts","webpack:///./src/simulator/actions/cpu.ts","webpack:///./src/interpreter/error.ts","webpack:///./src/constants/tokens.ts","webpack:///./src/syntax/SyntaxNode.ts","webpack:///./src/syntax/InstructionNode.ts","webpack:///./src/syntax/DirectiveNode.ts","webpack:///./src/syntax/AllocationNode.ts","webpack:///./src/syntax/FlexOperand.ts","webpack:///./src/syntax/transfer/TransferNode.ts","webpack:///./src/syntax/transfer/SingleTransferNode.ts","webpack:///./src/syntax/transfer/BlockTransferNode.ts","webpack:///./src/syntax/arithmetic/BiOperandNode.ts","webpack:///./src/syntax/arithmetic/TriOperandNode.ts","webpack:///./src/syntax/arithmetic/ShiftNode.ts","webpack:///./src/syntax/flow/LabelNode.ts","webpack:///./src/assets/prism-armv7.ts","webpack:///./src/assets/ascii.ts","webpack:///./src/syntax/flow/BranchNode.ts","webpack:///./src/simulator/actions/memory/common.ts","webpack:///./src/simulator/actions/interaction.ts","webpack:///./src/simulator/actions/runner.ts","webpack:///./src/simulator/actions/snapshots.ts","webpack:///./src/simulator/actions/memory/text.ts","webpack:///./src/simulator/actions/memory/data.ts","webpack:///./src/simulator/getters.ts","webpack:///./src/simulator/actions/memory/heap.ts","webpack:///./src/simulator/actions/memory/stack.ts","webpack:///./src/simulator/actions/memory/index.ts","webpack:///./src/simulator/actions/init.ts","webpack:///./src/simulator/actions/io.ts","webpack:///./src/simulator/actions/index.ts","webpack:///./src/simulator/index.ts","webpack:///./src/interpreter/assembler.ts","webpack:///./src/assets/printf/printf.js","webpack:///./src/interpreter/extern/printf.ts","webpack:///./src/interpreter/extern/putchar.ts","webpack:///./src/interpreter/extern/puts.ts","webpack:///./src/interpreter/extern/gets.ts","webpack:///./src/assets/scanf/index.ts","webpack:///./src/interpreter/extern/scanf.ts","webpack:///./src/interpreter/extern/allocation.ts","webpack:///./src/interpreter/extern/index.ts","webpack:///./src/interpreter/interpreter.ts","webpack:///./src/vue/debug.vue?adc8","webpack:///./src/vue/debug.vue","webpack:///./src/vue/debug.vue?98f2","webpack:///./src/vue/debug.vue?5971","webpack:///./src/vue/files.vue?7a58","webpack:///./src/files/constants.ts","webpack:///./src/files/state.ts","webpack:///./src/vue/instruction.vue","webpack:///./src/files/index.ts","webpack:///./src/vue/files.vue","webpack:///./src/vue/files.vue?4bd0","webpack:///./src/vue/files.vue?8748","webpack:///./src/vue/editor.vue","webpack:///./src/vue/editor.vue?dd4d","webpack:///./src/vue/editor.vue?e9d4","webpack:///./src/vue/instruction.vue?a602","webpack:///./src/explainer/explainer.ts","webpack:///./src/vue/instruction.vue?e3f6","webpack:///./src/vue/instruction.vue?556d","webpack:///./src/vue/memory.vue?d61d","webpack:///./src/vue/explorer.vue?cac6","webpack:///./src/vue/explorer.vue","webpack:///./src/vue/explorer.vue?4851","webpack:///./src/vue/explorer.vue?beb0","webpack:///./src/vue/memory.vue","webpack:///./src/vue/memory.vue?1fb3","webpack:///./src/vue/memory.vue?bc2a","webpack:///./src/vue/registers.vue?dbb8","webpack:///./src/vue/registers.vue","webpack:///./src/vue/registers.vue?7f0a","webpack:///./src/vue/registers.vue?1115","webpack:///./src/vue/terminal.vue?ce67","webpack:///./src/vue/terminal.vue","webpack:///./src/vue/terminal.vue?f16b","webpack:///./src/vue/terminal.vue?1e9e","webpack:///./src/vue/settings.vue?a859","webpack:///./src/vue/settings.vue","webpack:///./src/vue/settings.vue?3143","webpack:///./src/vue/settings.vue?a914","webpack:///./src/vue/tutorial.vue?63cb","webpack:///./src/tutorial/intro.ts","webpack:///./src/tutorial/basics.ts","webpack:///./src/tutorial/intermediate.ts","webpack:///./src/tutorial/index.ts","webpack:///./src/vue/tutorial.vue","webpack:///./src/vue/tutorial.vue?9ff9","webpack:///./src/vue/tutorial.vue?ebc8","webpack:///./src/app.vue","webpack:///./src/app.vue?20d9","webpack:///./src/app.vue?1fa3","webpack:///./src/main.ts","webpack:///./src/vue/memory.vue?0d6e","webpack:///./src/vue/registers.vue?15e9","webpack:///./src/app.vue?45ff"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","utils","require","gets","input","stdin_flag","throw","scanf","format","re","RegExp","selector","match","Error","len","json_flag","count","keys","Array","arguments","this","sscanf","dealType","forEach","val","str","getInput","pre","next","type","replace","tmp","trim","before_macth","regslashes","after_match","substr","indexOf","getInteger","text","toLowerCase","hex2int","e","NaN","octal2int","parseInt","getChar","char","getFloat","parseFloat","getHexFloat","hfParams","sign","sint","spoint","sexp","integer","undefined","exponent","Math","pow","getHex","getOctal","getString","test","stripslashes","getLine","ret","res","res2","console","warn","bytesRead","fs","BUFSIZE","buf","Buffer","alloc","fd","process","platform","stdin","openSync","readSync","code","error","exit","content","toString","ASCII","a","charCodeAt","f","A","F","0","7","9","digit","intAtHex","ascii","intAtOctal","num","getSpecialChar","getASCIIChar","String","fromCharCode","letter","_vm","_h","$createElement","_c","_self","attrs","staticClass","staticStyle","_m","_v","_s","env","on","startTour","tag","switchEnvironment","$event","$refs","settings","show","ref","isTooSmall","dismissTooSmall","scopedSlots","_u","fn","hide","_l","summary","index","domProps","staticRenderFns","class","crt","crtEffect","hover","click","dblclick","keyCode","ctrlKey","preventDefault","stopPropagation","lineComment","save","_k","tourActive","$emit","highlighter","autoSave","model","callback","$$v","program","expression","controlTooltip","directives","rawName","line","_e","computedTooltip","title","hasOutput","style","message","errors","run","selectedFile","filename","currentDirectory","writeable","saveAllowChar","saveAs","debounce","timeoutId","ms","args","clearTimeout","setTimeout","zip","b","map","k","Operation","Register","opMap","AND","EOR","SUB","RSB","ADD","ADC","SBC","RSC","TST","TEQ","CMP","CMN","ORR","MOV","BIC","MVN","BX","BL","B","opTitle","opExplain","Condition","regName","regMap","R0","R1","R2","R3","R4","R5","R6","R7","R8","R9","R10","R11","R12","SP","LR","PC","regTitle","regShortTitle","regExplain","Shift","condMap","EQ","NE","CS","CC","MI","PL","VS","VC","HI","LS","GE","LT","GT","LE","AL","condTitle","condExplain","Flag","shiftMap","LSL","LSR","ASR","ROR","shiftTitle","SingleTransfer","BlockTransfer","StackTransfer","flagName","N","Z","C","V","flagTitle","flagExplain","setFlagsExplain","BlockAddressMode","transferMap","LDR","STR","LDM","STM","PUSH","POP","blockTransferOperations","DataType","blockAddressModeMap","IA","DA","IB","DB","addressModeGroup","readWriteGroup","Directive","dataTypeMap","BYTE","HWORD","WORD","dataTypeByteSizeMap","dataTypeBufferConstructorMap","Uint8Array","Uint16Array","Uint32Array","Call","directiveMap","TEXT","DATA","EXTERN","BALIGN","OperandType","callMap","PUTCHAR","PUTS","PRINTF","GETS","SCANF","MALLOC","CALLOC","FREE","callAddress","art3","raw","replWelcome","terminalHelpString","operations","EnvironmentType","capacity","Infinity","autoRoll","item","replacementPredicate","storage","size","dequeue","observable","getters","memSize","SimulatorState","memory","delay","actions","init","localSettings","localStorage","getItem","state","JSON","parse","setDelay","setCrtEffect","updateStorage","toStore","setItem","stringify","SettingsState","createTour","tour","Tour","useModalOverlay","addStep","buttons","action","complete","reset","id","attachTo","element","floatingUIOptions","middleware","when","currentStep","activeTour","getCurrentStep","currentStepElement","getElement","querySelector","button","textEl","document","createElement","className","tourVm","currentInstruction","innerHTML","highlitInstruction","armv7","r1","registers","innerText","insertBefore","advanceOn","event","arrow","canClickTarget","classes","highlightClass","vueApp","$root","computed","currentTick","breakpoints","vue","methods","isStep","stepId","watch","instruction","find","lineNumber","removeBreakpoints","toggleBreakpoint","getCaretPosition","position","isSupported","getSelection","selection","rangeCount","range","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","setCaretPosition","selectedText","selectedRange","createRange","setStart","childNodes","collapse","removeAllRanges","addRange","focus","running","paused","step","cpu","ArrayBuffer","observableRegisters","fill","cpsr","tick","sizes","buffer","wordView","byteView","observableWordView","observableByteView","textHeight","textMap","dataHeight","dataTable","dataMap","Map","heapHeight","heapMap","stackHeight","previousPC","wasExecuted","interrupted","output","hoveredError","exitStatus","snapshots","ffs","log2","fls","floor","rotr","bitset","binary","get64binary","substring","split","reverse","int","padStart","setRegister","register","set","observeRegisters","checkFlags","cond","bits","setFlags","op1","op2","operator","sign1","sign2","signr","result_ext","red","blue","amber","statement","tokenIndex","lineContent","token","alias","color","join","expected","received","SyntaxError","toUpperCase","bi_operand","tri_operand","branch","transfer","single","block","stack","string","immediate","number","indexer","reg_list","comma","data_label","updating","label","op_label","directive","line_comment","end","whitespace","unknown","currentToken","_statement","_lineNumber","_currentToken","badToken","parseNum","start","base","reveresedToken","findIndex","includes","imm","parseImm","bottombit","topbit","validRolledCorner","isValidRolledCorner","bottomBits","correctiveRotation","ceil","testImm","_op","_cond","_setFlags","replaceAll","operation","modifier","condition","forceFlags","suffix","bitcode","explanation","subtitle","detail","peekToken","_directive","nextToken","parseExtern","parseBalign","hasToken","_identifier","_call","_value","_type","_specificType","_data","parseData","parseString","parseIntArray","parseSkip","withEscapes","ints","parseSignedInt","parseComma","isNegative","parseRegOrImm","_Rm","isReg","parseShift","REGISTER","IMMEDIATE","_Rs","_shiftType","_shift","_immShift","flex","immBits","parseReg","parseShiftedImm","unpack","Rm","Rs","immShift","isImm","shifted","shiftedByReg","shiftedByImm","_updating","read","splitOpCode","_transferSize","_Rd","parseAddressOrLabel","_Rn","isLiteral","parseAddressExpr","parseIndexer","_addressMode","_sign","endIndexerIndex","findEndIndexer","_flex","getToken","labelOffset","generateLabelOffset","literal","immBit","addressBit","isUp","upDownBit","sizeBit","writeBackBit","loadStoreBit","assemble","flexInstruction","flexExplanation","abs","splitBlockOpCode","addressMode","pushPop","parsePushPop","parseBaseReg","parseRegList","op","parseBrace","subStatement","_Rlist","sort","before","increment","sBit","values","filter","v","isNaN","Number","reg","include","setFlagsBit","branchRegex","pattern","greedy","matches","_regex","exec","assembleBX","linkBit","common","align","store","address","word","bytes","observeMemory","storeBytes","ptr","from","getMemoryAccessRange","snapshot","reglist","isIncrement","nRegisters","limit","addr","interaction","resume","reinstateSnapshot","runner","stepForward","setStep","pause","stepBack","stop","addError","hoverError","unhoverError","breakpoint","addOutput","lastLine","existingLine","setExitStatus","status","skipToSleep","setEntryPoint","setStackHeight","setHeapHeight","node","last","execute","sleep","nextInstruction","sleptfor","Promise","takeSnapshot","Date","now","enqueue","existingSnapshot","wasRunning","setTextHeight","height","setInstructions","instructions","validate","deccode","offset","addLabel","hasLabel","setCurrentInstruction","setExecuted","executed","ins","identifier","Rd","allocateData","declarations","table","dataLabel","exitPoint","heapBase","heap","malloc","findFirstSpace","splitBlock","allocate","calloc","nmemb","clear","realloc","free","has","allocated","top","allocation","firstPtr","leftoverSize","initMemory","setVueInstance","uninitialisedMemory","random","byte","io","interrupt","waitForIO","setStdin","reduce","compile","lines","compileOne","load","nodes","Mode","declarationTable","Text","Data","dataLabelExists","some","nop","tokens","nopnode","build","util","tokenize","parseDelim","instance","lastIndex","parsed","concat","specifier","Formatter","_mapped","_format","_tokens","_re","_parseDelim","mapping","intmapping","flags","minWidth","period","precision","_minWidth","_precision","_specifiers","isInt","x","X","extend","toUpper","u","isUnsigned","setArg","arg","setMaxWidth","maxWidth","isDouble","doubleNotation","E","g","G","O","isObject","filler","compiled","zeroPad","rightJustify","alternative","fi","flag","charAt","mixins","formatInt","formatDouble","formatObject","fitField","_zeros10","_spaces10","isFinite","toExponential","toFixed","toPrecision","inspect","showHidden","depth","colors","compact","negative","tenless","pad","spacePad","printf","stream","Stream","formatter","write","getTokens","stringArr","formatStr","useStack","currentRegister","currentStackOffset","getDecimal","randomiseScratch","framePointer","signed","putchar","charCode","puts","_","every","isInteger","randomRange","executeCall","executeBranch","executeBiOperand","executeTriOperand","executeShift","executeSingleTransfer","executeBlockTransfer","deflex","shiftBy","applyFlexShift","amount","dest","src","src1","src2","callExecuted","postAddress","wb","checkAlignment","checkStore","hidePlayback","tip","props","tooltip","Boolean","component","showFiles","forceShow","directory","openDirectory","hideFiles","file","open","currentFile","selected","openFile","parent","helloWorldSample","static","sampleDirectories","directories","files","parentDirectory","filesystem","pwd","path","loadLocal","reopen","startsWith","currentDir","isDir","nextDir","openPath","target","resolvePath","isDirectory","trace","fetch","then","fullPath","cd","param","textEdit","current","addDirectory","newFile","addFile","pathArr","unshift","FileSystemState","preventDefaultFile","preventDefaultDirectory","isRoot","close","components","PrismEditor","debug","fileNames","parentNode","dataset","errorIndex","prismEditor","prism","newTarget","textarea","dispatchEvent","CustomEvent","coords","layerX","y","layerY","selectionStart","selectionEnd","lineIdxs","getSelectedLineIndexes","commentCount","lineIdx","addComment","$nextTick","setSelectionRange","highlit","highlightTokenErrors","highlightLineErrors","highlightBreakpoints","highlightExecuting","elements","filteredIndex","tokenString","executing","scrollMode","inline","moveCaretToCursor","mouseCoords","caretPosition","getCaretPositionAtCursor","highlightWordAtCursor","wordStart","wordEnd","startIndex","endIndex","smallestDistance","MAX_VALUE","textPos","charCoords","left","distance","getRoughDistance","p1","p2","created","mounted","addEventListener","updated","once","activated","beforeDestroy","removeEventListener","old","section","untip","bit","showHistory","TipType","INSTRUCTION","refInFor","reinstate","oldValue","memWrite","memRead","debuggerTooltip","explain","prevSnapshot","registersHit","flagsHit","hitSet","newReg","oldReg","newFlag","oldFlag","isRead","prevMem","mem","newByte","oldByte","default","historyShown","sections","assembled","startIdx","DEFAULT","SECTION","history","scrollToTick","behavior","scrollIntoView","handler","scrollBehaviour","textWidth","explore","dataWidth","heapWidth","uninitWidth","stackWidth","stackPointer","used","wordIndex","byteIndex","printByte","byteValue","printWord","textOffset","instructionIndex","dataWordHeight","dataOffset","w","wIndex","bIndex","highlitData","dataHover","hoveredDeclaration","heapWordHeight","heapOffset","uninitOffset","ariaDescribedby","dsize","datatype","dtype","endianness","endian","highlight","hexstr","binstr","datatypes","endiannesses","tips","uninitialised","shown","memIsInitialised","textWordHeight","stackWordHeight","uninitWordHeight","max","stackOffset","dataDeclarations","aPtr","bPtr","heapBlocks","heapContiguousBlocks","contig","allocations","lastAllocation","modal","endianify","wordValue","declaration","explorer","hoveredSection","reversePtr","registerTip","changeSet","regstr","cpsrTitle","cpsrExplain","flagChangeSet","flagstr","computedTitle","computedDescription","msg","description","Set","signedstr","hexValue","signedValue","newVal","oldVal","add","$set","currentTarget","enter","upHistory","downHistory","onInput","highlitInput","leadingLine","historyIndex","restoreDelay","savedDelay","outputLength","isActive","simulatorOutput","sel","selectAllChildren","collapseToEnd","el","actualInput","caretOffset","repeat","addHistory","setLeadingLine","container","scrollTop","scrollHeight","min","insertInput","specialInput","printError","textEditRegex","textEditParam","ls","loadHistory","deactivated","started","endsWith","highlitPrompt","isInterrupted","localValue","pop","simulatorState","memSizes","settingsState","deep","pageData","prevPage","page","pages","nextPage","showContents","contentsLink","navigateTo","contentsPage","nContentsPages","openContents","intro1","intro2","intro3","intro4","intro5","intro6","intro7","intro8","intro99","basics1","subroutine1","subroutine2","basics2","basics3","basics4","basics5","basics6","intermediate1","intermediate2","intermediate3","intermediate4","subroutine3","intermediate5","intermediate6","intermediate7","chapters","intro","basics","intermediate","tutorialPages","chapter","matchAll","contents","contentsPerPage","contentsSlice","scrollTo","editor","terminal","tutorial","TERMINAL","windowSize","errorSummary","constructHelperHTML","EDITOR","windowSizeListener","innerWidth","keyListener","metaKey","doneTour","getElementsByTagName","classList","remove","use","config","productionTip","render","h","app","$mount"],"mappings":"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","file":"js/app.d00c4dd8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debug.vue?vue&type=style&index=0&id=15cce2df&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./instruction.vue?vue&type=style&index=1&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debug.vue?vue&type=style&index=1&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./files.vue?vue&type=style&index=0&id=279caa7a&scoped=true&lang=css&\"","var utils = require('./utils');\r\nvar gets = require('./gets');\r\n\r\nvar input = '';\r\nvar stdin_flag = true;\r\n\r\nexports.throw = true;\r\n\r\nvar scanf = (module.exports = function(format) {\r\n  var re = new RegExp('[^%]*%[0-9]*[A-Za-z][^%]*', 'g');\r\n  var selector = format.match(re);\r\n\r\n  if (selector === null) {\r\n    throw new Error('Unable to parse scanf selector.');\r\n  }\r\n\r\n  var result,\r\n    len = selector.length;\r\n  var json_flag = false,\r\n    count = 0,\r\n    keys = Array.prototype.slice.call(arguments, 1);\r\n\r\n  if (!this.sscanf) {\r\n    // clear sscanf cache\r\n    if (!stdin_flag) input = '';\r\n    stdin_flag = true;\r\n  }\r\n\r\n  if (keys.length > 0) {\r\n    result = {};\r\n    json_flag = true;\r\n  } else if (len > 1) {\r\n    result = [];\r\n  } else {\r\n    return dealType(selector[0]);\r\n  }\r\n\r\n  selector.forEach(function(val) {\r\n    if (json_flag) {\r\n      result[keys.shift() || count++] = dealType(val);\r\n    } else {\r\n      result.push(dealType(val));\r\n    }\r\n  });\r\n\r\n  return result;\r\n});\r\n\r\nmodule.exports.sscanf = function(str, format) {\r\n  if (typeof str !== 'string' || !str.length) {\r\n    return null;\r\n  }\r\n\r\n  // clear scanf cache\r\n  if (stdin_flag) input = '';\r\n\r\n  input = str;\r\n  stdin_flag = false;\r\n\r\n  return scanf.apply(\r\n    { sscanf: true },\r\n    Array.prototype.slice.call(arguments, 1)\r\n  );\r\n};\r\n\r\nvar getInput = function(pre, next, match, type) {\r\n  var result;\r\n  if (!input.length || input === '\\r') {\r\n    if (stdin_flag) {\r\n      input = gets();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // match format\r\n  var replace = '(' + match + ')';\r\n  var tmp = input;\r\n\r\n  // while scan string, replace before and after\r\n  if (type === 'STR' && next.trim().length > 0) {\r\n    var before_macth = utils.regslashes(pre);\r\n    var after_match = utils.regslashes(next) + '[\\\\w\\\\W]*';\r\n    if (before_macth.length) {\r\n      tmp = tmp.replace(new RegExp(before_macth), '');\r\n    }\r\n    tmp = tmp.replace(new RegExp(after_match), '');\r\n  } else {\r\n    replace = utils.regslashes(pre) + replace;\r\n  }\r\n\r\n  var m = tmp.match(new RegExp(replace));\r\n\r\n  if (!m) {\r\n    // todo strip match\r\n    return null;\r\n  }\r\n  result = m[1];\r\n\r\n  // strip match content\r\n  input = input\r\n    .substr(input.indexOf(result))\r\n    .replace(result, '')\r\n    .replace(next, '');\r\n\r\n  if (type === 'HEXFLOAT') {\r\n    return m;\r\n  }\r\n  return result;\r\n};\r\n\r\nvar getInteger = function(pre, next) {\r\n  var text = getInput(pre, next, '[-]?[A-Za-z0-9]+');\r\n  if (!text) {\r\n    return null;\r\n  }\r\n  if (text.length > 2) {\r\n    if (text[0] === '0') {\r\n      if (text[1].toLowerCase() === 'x') {\r\n        try {\r\n          return utils.hex2int(text);\r\n        }\r\n        catch(e) {\r\n          if(exports.throw) return NaN\r\n\r\n          return null\r\n        }\r\n      }\r\n      // parse Integer (%d %ld %u %lu %llu) should be precise for octal\r\n      if (text[1].toLowerCase() === 'o') {\r\n        try {\r\n          return utils.octal2int(text);\r\n        }\r\n        catch(e) {\r\n          if(exports.throw) return NaN\r\n\r\n          return null\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return parseInt(text);\r\n};\r\n\r\nvar getChar = function(pre, next) {\r\n  var char = getInput(pre, next, '.');\r\n  return char;\r\n}\r\n\r\nvar getFloat = function(pre, next) {\r\n  var text = getInput(pre, next, '[-]?[0-9]+[.]?[0-9]*');\r\n  return parseFloat(text);\r\n};\r\n\r\nvar getHexFloat = function(pre, next) {\r\n  var hfParams = getInput(\r\n    pre,\r\n    next,\r\n    '^([+-]?)0x([0-9a-f]*)(.[0-9a-f]*)?(p[+-]?[0-9a-f]+)?',\r\n    'HEXFLOAT'\r\n  );\r\n  var sign = hfParams[2];\r\n  var sint = hfParams[3];\r\n  var spoint = hfParams[4];\r\n  var sexp = hfParams[5] || 'p0';\r\n  // We glue the integer and point parts together when parsing\r\n  var integer = parseInt(\r\n    sign + sint + (spoint !== undefined ? spoint.slice(1) : ''),\r\n    16\r\n  );\r\n  // The actual exponent is the specified exponent minus the de..heximal points we shifted away\r\n  var exponent =\r\n    parseInt(sexp.slice(1), 16) -\r\n    4 * (spoint !== undefined ? spoint.length - 1 : 0);\r\n  return integer * Math.pow(2, exponent);\r\n};\r\n\r\nvar getHex = function(pre, next) {\r\n  var text = getInput(pre, next, '[A-Za-z0-9]+');\r\n  try {\r\n    return utils.hex2int(text);\r\n  }\r\n  catch(e) {\r\n    if(exports.throw) return NaN\r\n\r\n    return null\r\n  }\r\n};\r\n\r\nvar getOctal = function(pre, next) {\r\n  var text = getInput(pre, next, '[A-Za-z0-9]+');\r\n  try {\r\n    return utils.octal2int(text);\r\n  }\r\n  catch(e) {\r\n    if(exports.throw) return NaN\r\n\r\n    return null\r\n  }\r\n};\r\n\r\nvar getString = function(pre, next) {\r\n  var text = getInput(\r\n    pre,\r\n    next,\r\n    // Match repeat string\r\n    '(' +\r\n    '[\\\\w\\\\]=-]' +\r\n    '|' +\r\n    '\\\\S+[^\\\\ ]' + // Match string witch \\SPC like 'Alan\\ Bob'\r\n      ')' +\r\n      // Match after\r\n      '+(\\\\\\\\[\\\\w\\\\ ][\\\\w\\\\:]*)*',\r\n    'STR'\r\n  );\r\n  if (/\\\\/.test(text)) text = utils.stripslashes(text);\r\n  return text;\r\n};\r\n\r\nvar getLine = function(pre, next) {\r\n  var text = getInput(pre, next, '[^\\n\\r]*');\r\n  if (/\\\\/.test(text)) text = utils.stripslashes(text);\r\n  return text;\r\n};\r\n\r\nvar dealType = function(format) {\r\n  var ret;\r\n  var res = format.match(/%(0[1-9]+)?[A-Za-z]+/);\r\n  var res2 = format.match(/[^%]*/);\r\n  if (!res) {\r\n    // DID NOT throw error here to stay compatible with old version\r\n    console.warn('Invalid scanf selector: [%s]', format);\r\n    return null;\r\n  }\r\n\r\n  var type = res[0].replace(res[1], '');\r\n  var pre = res2 ? res2[0] : null;\r\n  var next = format.substr(format.indexOf(type) + type.length);\r\n\r\n  switch (type) {\r\n    case '%d':\r\n    case '%ld':\r\n    case '%llu':\r\n    case '%lu':\r\n    case '%u':\r\n      ret = getInteger(pre, next);\r\n      break;\r\n    case '%c':\r\n      ret = getChar(pre, next);\r\n      break;\r\n    case '%s':\r\n      ret = getString(pre, next);\r\n      break;\r\n    case '%S':\r\n      ret = getLine(pre, next);\r\n      break;\r\n    case '%X':\r\n    case '%x':\r\n      ret = getHex(pre, next);\r\n      break;\r\n    case '%O':\r\n    case '%o':\r\n      ret = getOctal(pre, next);\r\n      break;\r\n    case '%a':\r\n      ret = getHexFloat(pre, next);\r\n      break;\r\n    case '%f':\r\n      ret = getFloat(pre, next);\r\n      break;\r\n\r\n    default:\r\n      throw new Error('Unknown type \"' + type + '\"');\r\n  }\r\n  return ret;\r\n};\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./instruction.vue?vue&type=style&index=0&id=9526e860&scoped=true&lang=css&\"","/*\r\n * http://stackoverflow.com/questions/3430939/node-js-readsync-from-stdin\r\n * @mklement0\r\n */\r\nvar fs = require('fs');\r\n\r\nvar BUFSIZE = 256;\r\nvar buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\r\nvar bytesRead;\r\n\r\nmodule.exports = function() {\r\n  var fd =\r\n    'win32' === process.platform\r\n      ? process.stdin.fd\r\n      : fs.openSync('/dev/stdin', 'rs');\r\n  bytesRead = 0;\r\n\r\n  try {\r\n    bytesRead = fs.readSync(fd, buf, 0, BUFSIZE);\r\n  } catch (e) {\r\n    if (e.code === 'EAGAIN') {\r\n      // 'resource temporarily unavailable'\r\n      // Happens on OS X 10.8.3 (not Windows 7!), if there's no\r\n      // stdin input - typically when invoking a script without any\r\n      // input (for interactive stdin input).\r\n      // If you were to just continue, you'd create a tight loop.\r\n      console.error('ERROR: interactive stdin input not supported.');\r\n      process.exit(1);\r\n    } else if (e.code === 'EOF') {\r\n      // Happens on Windows 7, but not OS X 10.8.3:\r\n      // simply signals the end of *piped* stdin input.\r\n      return '';\r\n    }\r\n    throw e; // unexpected exception\r\n  }\r\n\r\n  if (bytesRead === 0) {\r\n    // No more stdin input available.\r\n    // OS X 10.8.3: regardless of input method, this is how the end\r\n    //   of input is signaled.\r\n    // Windows 7: this is how the end of input is signaled for\r\n    //   *interactive* stdin input.\r\n    return '';\r\n  }\r\n  // Process the chunk read.\r\n\r\n  var content = buf.toString(undefined, 0, bytesRead - 1);\r\n\r\n  return content;\r\n};\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=style&index=0&id=025b9e4e&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./explorer.vue?vue&type=style&index=0&id=1535a00a&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./terminal.vue?vue&type=style&index=0&id=6c1b718f&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tutorial.vue?vue&type=style&index=0&id=a80cebae&scoped=true&lang=css&\"","var ASCII = {\r\n  a: 'a'.charCodeAt(),\r\n  f: 'f'.charCodeAt(),\r\n  A: 'A'.charCodeAt(),\r\n  F: 'F'.charCodeAt(),\r\n  0: '0'.charCodeAt(),\r\n  7: '7'.charCodeAt(),\r\n  9: '9'.charCodeAt()\r\n};\r\n\r\nexports.hex2int = function(str) {\r\n  str = str.replace(/^[0Oo][Xx]/, '');\r\n  var ret = 0,\r\n    digit = 0;\r\n\r\n  for (var i = str.length - 1; i >= 0; i--) {\r\n    ret += intAtHex(str[i], digit++);\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\nvar intAtHex = function(c, digit) {\r\n  var ret = null;\r\n  var ascii = c.charCodeAt();\r\n\r\n  if (ASCII.a <= ascii && ascii <= ASCII.f) {\r\n    ret = ascii - ASCII.a + 10;\r\n  } else if (ASCII.A <= ascii && ascii <= ASCII.F) {\r\n    ret = ascii - ASCII.A + 10;\r\n  } else if (ASCII[0] <= ascii && ascii <= ASCII[9]) {\r\n    ret = ascii - ASCII[0];\r\n  } else {\r\n    throw new Error('Invalid ascii [' + c + ']');\r\n  }\r\n\r\n  while (digit--) {\r\n    ret *= 16;\r\n  }\r\n  return ret;\r\n};\r\n\r\nexports.octal2int = function(str) {\r\n  str = str.replace(/^0[Oo]?/, '');\r\n  var ret = 0,\r\n    digit = 0;\r\n\r\n  for (var i = str.length - 1; i >= 0; i--) {\r\n    ret += intAtOctal(str[i], digit++);\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\nvar intAtOctal = function(c, digit) {\r\n  var num = null;\r\n  var ascii = c.charCodeAt();\r\n\r\n  if (ascii >= ASCII[0] && ascii <= ASCII[7]) {\r\n    num = ascii - ASCII[0];\r\n  } else {\r\n    throw new Error('Invalid char to Octal [' + c + ']');\r\n  }\r\n\r\n  while (digit--) {\r\n    num *= 8;\r\n  }\r\n  return num;\r\n};\r\n\r\nexports.regslashes = function(pre) {\r\n  return pre\r\n    .replace(/\\[/g, '\\\\[')\r\n    .replace(/\\]/g, '\\\\]')\r\n    .replace(/\\(/g, '\\\\(')\r\n    .replace(/\\)/g, '\\\\)')\r\n    .replace(/\\|/g, '\\\\|');\r\n};\r\n\r\nexports.stripslashes = function(str) {\r\n  return str.replace(/\\\\([\\sA-Za-z\\\\]|[0-7]{1,3})/g, function(str, c) {\r\n    switch (c) {\r\n      case '\\\\':\r\n        return '\\\\';\r\n      case '0':\r\n        return '\\u0000';\r\n      default:\r\n        if (/^\\w$/.test(c)) {\r\n          return getSpecialChar(c);\r\n        } else if (/^\\s$/.test(c)) {\r\n          return c;\r\n        } else if (/([0-7]{1,3})/.test(c)) {\r\n          return getASCIIChar(c);\r\n        }\r\n        return str;\r\n    }\r\n  });\r\n};\r\n\r\nvar getASCIIChar = function(str) {\r\n  var num = exports.octal2int(str);\r\n  return String.fromCharCode(num);\r\n};\r\n\r\nvar getSpecialChar = function(letter) {\r\n  switch (letter.toLowerCase()) {\r\n    case 'b':\r\n      return '\\b';\r\n    case 'f':\r\n      return '\\f';\r\n    case 'n':\r\n      return '\\n';\r\n    case 'r':\r\n      return '\\r';\r\n    case 't':\r\n      return '\\t';\r\n    case 'v':\r\n      return '\\v';\r\n    default:\r\n      return letter;\r\n  }\r\n};\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container-fluid h-100\"},[_c('div',{staticClass:\"row h-100\"},[_c('div',{staticClass:\"col-12 h-100\",attrs:{\"id\":\"emulator\"}},[_c('div',{staticClass:\"row px-0\",staticStyle:{\"height\":\"24px\"}},[_vm._m(0),_c('div',{staticClass:\"col-7 col-md-8 col-lg-9 pl-1 text-left\"},[_c('div',{staticClass:\"row px-0\"},[_c('div',{staticClass:\"col-8 pr-1\"},[_c('h5',{staticClass:\"mb-0\"},[_vm._v(_vm._s(_vm.env))])]),_vm._m(1)])])]),_c('div',{staticClass:\"row px-0\",staticStyle:{\"height\":\"calc(100% - 36px)\"}},[_c('div',{staticClass:\"col-5 col-md-4 col-lg-3 pr-1\"},[_c('registers',{staticStyle:{\"height\":\"calc(100% - 22px)\"}}),_c('div',{staticClass:\"d-inline-block float-left mt-1\"},[_vm._v(\" New here? \"),_c('a',{staticClass:\"link text-white clickable\",on:{\"click\":_vm.startTour}},[_vm._v(\"Take the tour!\")])])],1),_c('div',{staticClass:\"col-7 col-md-8 col-lg-9 pl-1\",staticStyle:{\"height\":\"calc(100% - 232px)\"}},[_c('div',{staticClass:\"row px-0 h-100\"},[_c('div',{staticClass:\"col-8 pr-1 h-100\"},[_c('keep-alive',[_c(_vm.env,{tag:\"component\",on:{\"switch\":_vm.switchEnvironment}})],1)],1),_c('div',{staticClass:\"col-4 pl-1 h-100\"},[_c('tutorial')],1)]),_c('div',{staticClass:\"row px-0 pt-2\",staticStyle:{\"height\":\"210px\"}},[_c('div',{staticClass:\"col-6 pr-1\",staticStyle:{\"max-height\":\"100%\"}},[_c('instruction')],1),_c('div',{staticClass:\"col-6 pl-1\",staticStyle:{\"max-height\":\"100%\"}},[_c('memory'),_c('div',{staticClass:\"settings clickable\",on:{\"click\":function($event){return _vm.$refs.settings.show()}}},[_c('i',{staticClass:\"button fas fa-sliders-h\"})])],1)]),_vm._m(2)])])])])]),_c('settings',{ref:\"settings\"}),_c('b-modal',{ref:\"about\",attrs:{\"centered\":\"\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"}},[_c('div',{staticClass:\"px-5 py-1\"},[_c('div',{staticClass:\"mt-4\"},[_vm._v(\" created by polysoft it \")])])]),_c('b-modal',{attrs:{\"visible\":_vm.isTooSmall,\"centered\":\"\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"}},[_c('h4',[_vm._v(\"oh no!\")]),_c('div',{staticClass:\"mt-3\"},[_vm._v(\" It looks like the device you're using is too small to properly interact with iRISC. \"),_c('br'),_c('br'),_vm._v(\" I recommend retrying on a larger, desktop or laptop device for the best experience (at least 1280x720). \")]),_c('div',{staticClass:\"text-center mt-3 mb-2\"},[_c('b-button',{on:{\"click\":function($event){_vm.dismissTooSmall = true;}}},[_vm._v(\" try anyway \")])],1)]),_c('b-modal',{ref:\"errors\",attrs:{\"id\":\"errors-modal\",\"size\":\"600\",\"hide-header\":\"\",\"hide-footer\":\"\",\"centered\":\"\",\"body-class\":\"irisc-modal p-1\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar hide = ref.hide;\nreturn [_c('div',{staticClass:\"mx-2 my-1\"},[_vm._v(\" Assembly failed due to following error(s). \"),_c('div',{staticClass:\"mt-3 ml-3\"},_vm._l((_vm.errorSummary),function(summary,index){return _c('div',{key:index,staticClass:\"mb-3\",domProps:{\"innerHTML\":_vm._s(summary)}})}),0),_c('div',{staticClass:\"text-center mt-4 mb-2\"},[_c('b-button',{on:{\"click\":hide}},[_vm._v(\" fix \")])],1)])]}}])})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-5 col-md-4 col-lg-3 pr-1 text-left\"},[_c('h5',{staticClass:\"mb-0\"},[_vm._v(\"registers\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-4 pl-1\"},[_c('h5',{staticClass:\"mb-0\"},[_vm._v(\"tutorial\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row px-0\",staticStyle:{\"height\":\"24px\"}},[_c('div',{staticClass:\"col-6 pr-1 text-left\"},[_c('h5',{staticClass:\"mb-0\"},[_vm._v(\"assembler\")])]),_c('div',{staticClass:\"col-6 pl-1 text-left\"},[_c('h5',{staticClass:\"mb-0 d-inline-block\"},[_vm._v(\"memory\")]),_c('div',{staticClass:\"d-inline-block float-right mt-1\"},[_vm._v(\" created by \"),_c('a',{staticClass:\"text-white\",attrs:{\"href\":\"https://polysoftit.co.uk/\"}},[_vm._v(\"polysoft it\")]),_vm._v(\" // \"),_c('a',{staticClass:\"text-white\",attrs:{\"href\":\"https://github.com/rtybanana/irisc-web\"}},[_vm._v(\"src\")])])])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"prism-container pl-1 pr-0 py-1 position-relative\",class:{ crt: _vm.settings.crtEffect },attrs:{\"tour-item\":\"editor\"},on:{\"mouseover\":_vm.hover,\"click\":_vm.click,\"dblclick\":_vm.dblclick,\"!keydown\":[function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==191){ return null; }if(!$event.ctrlKey){ return null; }$event.preventDefault();$event.stopPropagation();return _vm.lineComment($event)},function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==83){ return null; }if(!$event.ctrlKey){ return null; }$event.preventDefault();$event.stopPropagation();return _vm.save($event)}],\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"])){ return null; }!_vm.tourActive && _vm.$emit('switch')}}},[_c('prism-editor',{ref:\"prism\",attrs:{\"id\":\"editor\",\"highlight\":_vm.highlighter,\"tab-size\":1,\"insert-spaces\":false,\"readonly\":_vm.tourActive,\"line-numbers\":\"\"},on:{\"input\":_vm.autoSave},model:{value:(_vm.program),callback:function ($$v) {_vm.program=$$v},expression:\"program\"}}),_c('div',{staticClass:\"controls\"},[_c('debug',{attrs:{\"tooltip\":_vm.controlTooltip},on:{\"update:tooltip\":function($event){_vm.controlTooltip=$event}}}),_c('i',{staticClass:\"button terminal fas fa-terminal ml-1 clickable\",on:{\"click\":function($event){!_vm.tourActive && _vm.$emit('switch')},\"mouseenter\":function($event){_vm.controlTooltip = 'terminal'},\"mouseleave\":function($event){_vm.controlTooltip = undefined}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.controlTooltip),expression:\"controlTooltip\"}],staticClass:\"control-tooltip\"},[_vm._v(_vm._s(_vm.controlTooltip))])],1),_c('div',{staticClass:\"popup-output\"},[_c('div',{staticClass:\"p-1\",staticStyle:{\"border-radius\":\"0.3rem\",\"background-color\":\"#191d21\"}},[(_vm.hasOutput)?_c('div',_vm._l((_vm.output),function(line,index){return _c('div',{key:index,staticStyle:{\"overflow-wrap\":\"break-word\"}},[_vm._v(\" \"+_vm._s(line)+\" \")])}),0):_vm._e(),(_vm.computedTooltip.title !== '')?_c('div',{class:_vm.hasOutput ? 'mt-2' : ''},[_c('div',{style:((\"color: \" + (_vm.computedTooltip.color)))},[_vm._v(_vm._s(_vm.computedTooltip.title))]),_c('div',[_vm._v(_vm._s(_vm.computedTooltip.message))])]):(_vm.errors.length > 0)?_c('div',{staticClass:\"clickable hoverable rounded px-1\",on:{\"click\":_vm.run}},[_vm._v(\" \"+_vm._s(_vm.errors.length)+\" errors \")]):_vm._e()])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.tourActive),expression:\"!tourActive\"}],staticClass:\"files\"},[_c('files')],1),_c('b-modal',{ref:\"save\",attrs:{\"centered\":\"\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar hide = ref.hide;\nreturn [_c('div',{staticClass:\"mx-2 my-1\"},[_c('h4',[_vm._v(\"save as\")]),_c('files',{staticClass:\"file-explorer mt-3\",attrs:{\"force-show\":\"\",\"prevent-default-file\":\"\",\"selected-file\":_vm.selectedFile},on:{\"open:file\":function($event){_vm.filename = $event.name}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.currentDirectory.writeable),expression:\"!currentDirectory.writeable\"}]},[_c('small',{staticClass:\"token operation\"},[_vm._v(\"folder is write protected.\")])]),_c('div',{staticClass:\"mt-3\"},[_vm._v(\"filename\")]),_c('b-form-input',{on:{\"keydown\":_vm.saveAllowChar},model:{value:(_vm.filename),callback:function ($$v) {_vm.filename=$$v},expression:\"filename\"}}),(_vm.selectedFile)?[(!_vm.selectedFile.writeable)?_c('div',[_c('small',{staticClass:\"token operation\"},[_vm._v(\"file is write protected.\")])]):_c('div',[_c('small',{staticClass:\"token label\"},[_vm._v(\"overwriting an existing file.\")])])]:_c('div',[_c('small',{staticClass:\"token line-comment\"},[_vm._v(\"creating a new file.\")])]),_c('div',{staticClass:\"text-center mt-4 mb-2\"},[_c('b-button',{staticClass:\"mr-2\",on:{\"click\":hide}},[_vm._v(\" cancel \")]),_c('b-button',{on:{\"click\":_vm.saveAs}},[_vm._v(\" save \")])],1)],2)]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\r\n/**\r\n * \r\n * @param fn \r\n * @param ms \r\n * @returns \r\n */\r\nexport function debounce(fn: Function, ms = 300) {\r\n  let timeoutId: ReturnType<typeof setTimeout>;\r\n  return function (this: any, ...args: any[]) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\r\n  };\r\n}\r\n\r\n/**\r\n * \r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport function zip(a: any[], b: any[]) { \r\n  return a.map((k, i) => [k, b[i]]);\r\n}","export enum Operation {\r\n  // arithmetic operations\r\n  AND = 0,  EOR, SUB, RSB, ADD, ADC, SBC, RSC, TST, TEQ, CMP, CMN, ORR, MOV, BIC, MVN,\r\n\r\n  // // load/store instructions\r\n  // LDR = 16,  STR, \r\n\r\n  // branch instructions\r\n  B = 32,  BL, BX\r\n}\r\n\r\n/**\r\n * Mapping strings to Operations\r\n */\r\nexport const opMap: Record<string, Operation> = {\r\n  // arithmetic instructions\r\n  \"and\": Operation.AND,\r\n  \"eor\": Operation.EOR, \r\n  \"sub\": Operation.SUB,\r\n  \"rsb\": Operation.RSB,\r\n\r\n  \"add\": Operation.ADD,\r\n  \"adc\": Operation.ADC,\r\n  \"sbc\": Operation.SBC,\r\n  \"rsc\": Operation.RSC,\r\n\r\n  \"tst\": Operation.TST,\r\n  \"teq\": Operation.TEQ,\r\n  \"cmp\": Operation.CMP,\r\n  \"cmn\": Operation.CMN,\r\n\r\n  \"orr\": Operation.ORR,\r\n  \"mov\": Operation.MOV,\r\n  \"bic\": Operation.BIC,\r\n  \"mvn\": Operation.MVN,\r\n\r\n  // //load/store instructions\r\n  // \"ldr\": Operation.LDR,\r\n  // \"str\": Operation.STR,\r\n\r\n  // branch instructions\r\n  \"bx\": Operation.BX,\r\n  \"bl\": Operation.BL, \r\n   \"b\": Operation.B \r\n};\r\n\r\nexport const opTitle: Record<Operation, string> = {\r\n  [Operation.AND]: \"Bitwise AND\",\r\n  [Operation.EOR]: \"Bitwise XOR\",\r\n  [Operation.SUB]: \"Subtraction\",\r\n  [Operation.RSB]: \"Reverse Subtraction\",\r\n  [Operation.ADD]: \"Addition\",\r\n  [Operation.ADC]: \"Add with Carry\",\r\n  [Operation.SBC]: \"Subtract with Carry\",\r\n  [Operation.RSC]: \"Reverse Subtraction with Carry\",\r\n  [Operation.TST]: \"Test\",\r\n  [Operation.TEQ]: \"Test Equivalence\",\r\n  [Operation.CMP]: \"Compare\",\r\n  [Operation.CMN]: \"Compare Negative\",\r\n  [Operation.ORR]: \"Bitwise OR\",\r\n  [Operation.MOV]: \"Move\",\r\n  [Operation.BIC]: \"Bit Clear\",\r\n  [Operation.MVN]: \"Move Negative\",\r\n  // [Operation.LDR]: \"Load\",\r\n  // [Operation.STR]: \"Store\",\r\n  [Operation.B]:   \"Branch\",\r\n  [Operation.BL]:  \"Branch and Link\",\r\n  [Operation.BX]:  \"Branch and Exchange\"\r\n};\r\n\r\nexport const opExplain: Record<Operation, string> = {\r\n  [Operation.AND]: \"Performs a bitwise AND operation and stores the result.\", \r\n  [Operation.EOR]: \"Performs a bitwise exclusive OR operation and stores the result.\", \r\n  [Operation.SUB]: \"Performs an arithmetic subtraction from left to right and stores the result.\", \r\n  [Operation.RSB]: \"Performs an arithmetic subtraction from right to left and stores the result.\",\r\n  [Operation.ADD]: \"Performs an arithmetic addition and stores the result.\", \r\n  [Operation.ADC]: \"???\",\r\n  [Operation.SBC]: \"???\", \r\n  [Operation.RSC]: \"???\",\r\n  [Operation.TST]: \"Performs a bitwise AND operation, sets the CPSR flags and discards the result.\",\r\n  [Operation.TEQ]: \"Performs a bitwise XOR operation, sets the CPSR flags and discards the result.\",\r\n  [Operation.CMP]: \"Performs an arithmetic subtraction, sets the CPSR flags and discards the result.\",\r\n  [Operation.CMN]: \"Performs an arithmetic addition, sets the CPSR flags and discards the result.\",\r\n  [Operation.ORR]: \"Performs a bitwise OR operation and stores the result.\",\r\n  [Operation.MOV]: \"Stores the second operand value in the destination register.\",\r\n  [Operation.BIC]: \"Performs a bitwise AND operation with the complement of the second operand.\",\r\n  [Operation.MVN]: \"Stores the additive inverse of the second operand value in the destination register.\",\r\n  // [Operation.LDR]: \"Loads the data at the memory address in the source register into the destination register.\",\r\n  // [Operation.STR]: \"Stores the data in the destination register into the memory address of the source register.\",\r\n  [Operation.B]:   \"Branches to the provided instruction address or label.\",\r\n  [Operation.BL]:  \"Branches to the provided instruction address or label and stores the return address.\",\r\n  [Operation.BX]:  \"Branches to the provided instruction address or label and optionally changes instruction type.\"\r\n};","export enum Register {\r\n  R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, SP, LR, PC\r\n}\r\n\r\nexport const regName: string[] = [\r\n  \"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"r6\", \"r7\", \"r8\", \"r9\", \"r10\", \"r11\", \"r12\", \"sp\", \"lr\", \"pc\"\r\n]\r\n\r\nexport const regMap: Record<string, Register> = {\r\n  \"r0\":  Register.R0, \r\n  \"r1\":  Register.R1,   \r\n  \"r2\":  Register.R2,   \r\n  \"r3\":  Register.R3,\r\n  \"r4\":  Register.R4,   \r\n  \"r5\":  Register.R5,   \r\n  \"r6\":  Register.R6,   \r\n  \"r7\":  Register.R7,\r\n  \"r8\":  Register.R8,   \r\n  \"r9\":  Register.R9,  \r\n  \"r10\": Register.R10,  \r\n  \"r11\": Register.R11, \r\n  \"r12\": Register.R12,   \r\n  \"sp\":  Register.SP,   \r\n  \"lr\":  Register.LR,   \r\n  \"pc\":  Register.PC  \r\n};\r\n\r\nexport const regTitle: Record<Register, string> = {\r\n  [Register.R0]: \"Register 0\", \r\n  [Register.R1]: \"Register 1\",   \r\n  [Register.R2]: \"Register 2\",   \r\n  [Register.R3]: \"Register 3\",\r\n  [Register.R4]: \"Register 4\",   \r\n  [Register.R5]: \"Register 5\",   \r\n  [Register.R6]: \"Register 6\",   \r\n  [Register.R7]: \"Register 7\",\r\n  [Register.R8]: \"Register 8\",   \r\n  [Register.R9]: \"Register 9\",  \r\n  [Register.R10]: \"Register 10\",  \r\n  [Register.R11]: \"Register 11\", \r\n  [Register.R12]: \"Register 12\",   \r\n  [Register.SP]: \"Stack Pointer\",   \r\n  [Register.LR]: \"Link Register\",   \r\n  [Register.PC]: \"Program\"  \r\n};\r\n\r\nexport const regShortTitle: Record<Register, string> = {\r\n  [Register.R0]: \"r0\", \r\n  [Register.R1]: \"r1\",   \r\n  [Register.R2]: \"r2\",   \r\n  [Register.R3]: \"r3\",\r\n  [Register.R4]: \"r4\",   \r\n  [Register.R5]: \"r5\",   \r\n  [Register.R6]: \"r6\",   \r\n  [Register.R7]: \"r7\",\r\n  [Register.R8]: \"r8\",   \r\n  [Register.R9]: \"r9\",  \r\n  [Register.R10]: \"r10\",  \r\n  [Register.R11]: \"r11\", \r\n  [Register.R12]: \"r12\",   \r\n  [Register.SP]: \"sp\",   \r\n  [Register.LR]: \"lr\",   \r\n  [Register.PC]: \"pc\"  \r\n};\r\n\r\nexport const regExplain: Record<Register, string> = {\r\n  [Register.R0]: \"General Purpose Register.\", \r\n  [Register.R1]: \"General Purpose Register.\", \r\n  [Register.R2]: \"General Purpose Register.\", \r\n  [Register.R3]: \"General Purpose Register.\", \r\n  [Register.R4]: \"General Purpose Register.\", \r\n  [Register.R5]: \"General Purpose Register.\", \r\n  [Register.R6]: \"General Purpose Register.\", \r\n  [Register.R7]: \"General Purpose Register.\", \r\n  [Register.R8]: \"General Purpose Register.\", \r\n  [Register.R9]: \"General Purpose Register.\", \r\n  [Register.R10]: \"General Purpose Register.\", \r\n  [Register.R11]: \"General Purpose Register.\",  \r\n  [Register.R12]: \"General Purpose Register.\", \r\n  [Register.SP]: \"The memory address for the top of the stack.\", \r\n  [Register.LR]: \"The return address of the current function.\", \r\n  [Register.PC]: \"The memory address of the next instruction.\", \r\n};","export enum Condition {\r\n  EQ, NE, CS, CC, MI, PL, VS, VC, HI, LS, GE, LT, GT, LE, AL\r\n}\r\n\r\nexport const condMap: Record<string, Condition> = {\r\n  \"eq\": Condition.EQ, \r\n  \"ne\": Condition.NE, \r\n  \"cs\": Condition.CS, \r\n  \"cc\": Condition.CC,\r\n  \"mi\": Condition.MI, \r\n  \"pl\": Condition.PL, \r\n  \"vs\": Condition.VS, \r\n  \"vc\": Condition.VC,\r\n  \"hi\": Condition.HI, \r\n  \"ls\": Condition.LS, \r\n  \"ge\": Condition.GE, \r\n  \"lt\": Condition.LT, \r\n  \"gt\": Condition.GT, \r\n  \"le\": Condition.LE, \r\n  \"al\": Condition.AL,   \r\n  \"\":   Condition.AL\r\n}\r\n\r\nexport const condTitle: Record<Condition, string> = {\r\n  [Condition.EQ]: \"Equal\", \r\n  [Condition.NE]: \"Not Equal\", \r\n  [Condition.CS]: \"Unsigned More Than or Equal to\", \r\n  [Condition.CC]: \"Unsigned Less Than\",\r\n  [Condition.MI]: \"Negative\", \r\n  [Condition.PL]: \"Positive or Zero\",\r\n  [Condition.VS]: \"Overflow\", \r\n  [Condition.VC]: \"No Overflow\",\r\n  [Condition.HI]: \"Unsigned More Than\", \r\n  [Condition.LS]: \"Unsigned Less Than or Equal to\",\r\n  [Condition.GE]: \"Signed More Than or Equal to\", \r\n  [Condition.LT]: \"Signed Less Than\",\r\n  [Condition.GT]: \"Signed More Than\", \r\n  [Condition.LE]: \"Signed Less Than or Equal to\",\r\n  [Condition.AL]: \"Always\"\r\n};\r\n\r\nexport const condExplain: Record<Condition, string> = {\r\n  [Condition.EQ]: \"The instruction is only executed if the zero flag (Z) is set.\", \r\n  [Condition.NE]: \"The instruction is only executed if the zero flag (Z) is clear.\", \r\n  [Condition.CS]: \"The instruction is only executed if the carry flag (C) is set.\", \r\n  [Condition.CC]: \"The instruction is only executed if the carry flag (C) is clear.\",\r\n  [Condition.MI]: \"The instruction is only executed if the negative flag (N) is set.\", \r\n  [Condition.PL]: \"The instruction is only executed if the negative flag (N) is clear.\",\r\n  [Condition.VS]: \"The instruction is only executed if the overflow flag (V) is set.\", \r\n  [Condition.VC]: \"The instruction is only executed if the overflow flag (V) is clear.\",\r\n  [Condition.HI]: \"The instruction is only executed if the carry flag (C) is set AND the zero flag (Z) is clear.\",\r\n  [Condition.LS]: \"The instruction is only executed if the carry flag (C) is clear OR the zero flag (Z) is set.\",\r\n  [Condition.GE]: \"The instruction is only executed if the negative flag (N) and the overflow flag (V) are the same.\",\r\n  [Condition.LT]: \"The instruction is only executed if the negative flag (N) and the overflow flag (V) are different.\",\r\n  [Condition.GT]: \"The instruction is only executed if the zero flag (Z) is clear and the negative (N) and overflow (V) flags are the same.\",\r\n  [Condition.LE]: \"The instruction is only executed if the zero flag (Z) is set and the negative (N) and overflow (V) flags are different.\",\r\n  [Condition.AL]: \"The instruction is executed unconditionally. This is the default condition.\"\r\n};\r\n\r\nexport const condShortExplain: Record<Condition, string> = {\r\n  [Condition.EQ]: \"If the zero flag (Z) is set.\", \r\n  [Condition.NE]: \"If the zero flag (Z) is clear.\", \r\n  [Condition.CS]: \"If the carry flag (C) is set.\", \r\n  [Condition.CC]: \"If the carry flag (C) is clear.\",\r\n  [Condition.MI]: \"If the negative flag (N) is set.\", \r\n  [Condition.PL]: \"If the negative flag (N) is clear.\",\r\n  [Condition.VS]: \"If the overflow flag (V) is set.\", \r\n  [Condition.VC]: \"If the overflow flag (V) is clear.\",\r\n  [Condition.HI]: \"If the carry flag (C) is set AND the zero flag (Z) is clear.\",\r\n  [Condition.LS]: \"If the carry flag (C) is clear OR the zero flag (Z) is set.\",\r\n  [Condition.GE]: \"If the negative flag (N) and the overflow flag (V) are the same.\",\r\n  [Condition.LT]: \"If the negative flag (N) and the overflow flag (V) are different.\",\r\n  [Condition.GT]: \"If the zero flag (Z) is clear and the negative (N) and overflow (V) flags are the same.\",\r\n  [Condition.LE]: \"If the zero flag (Z) is set and the negative (N) and overflow (V) flags are different.\",\r\n  [Condition.AL]: \"Unconditionally. This is the default condition.\"\r\n};","export enum Shift {\r\n  LSL, LSR, ASR, ROR\r\n}\r\n\r\nexport const shiftMap: Record<string, Shift> = {\r\n  \"lsl\":  Shift.LSL, \r\n  \"lsr\":  Shift.LSR,   \r\n  \"asr\":  Shift.ASR,   \r\n  \"ror\":  Shift.ROR\r\n};\r\n\r\nexport const shiftTitle: Record<Shift, string> = {\r\n  [Shift.LSL]: \"Logical Shift Left\", \r\n  [Shift.LSR]: \"Logical Shift Right\", \r\n  [Shift.ASR]: \"Arithmetic Shift Right\", \r\n  [Shift.ROR]: \"Rotate Right\"\r\n};","export enum Flag {\r\n  N,  // negative\r\n  Z,  // zero\r\n  C,  // carry\r\n  V   // overflow\r\n}\r\n\r\nexport const flagName: Record<Flag, string> = {\r\n  [Flag.N]: \"N\", \r\n  [Flag.Z]: \"Z\", \r\n  [Flag.C]: \"C\", \r\n  [Flag.V]: \"V\"\r\n}\r\n\r\nexport const flagTitle: Record<Flag, string> = {\r\n  [Flag.N]: \"Negative Flag (N)\", \r\n  [Flag.Z]: \"Zero Flag (Z)\", \r\n  [Flag.C]: \"Carry Flag (C)\", \r\n  [Flag.V]: \"Overflow Flag (V)\"\r\n}\r\n\r\nexport const flagExplain: Record<Flag, string> = {\r\n  [Flag.N]: \"This bit is set when the signed result of the operation is negative.\", \r\n  [Flag.Z]: \"This bit is set when the result of the operation is equal to zero.\", \r\n  [Flag.C]: \"This bit is set when the operation results in an unsigned overflow.\", \r\n  [Flag.V]: \"This bit is set when the operation results in a signed overflow.\"\r\n}\r\n\r\nexport const setFlagsExplain: string[] = [\r\n  \"Do not set the CPSR flags based on the result of this instruction.\",\r\n  \"Set the CPSR flags based on the result of this instruction.\"\r\n];","export enum SingleTransfer  { LDR = 0, STR = 1 }\r\nexport enum BlockTransfer   { LDM = 2, STM = 3 }\r\nexport enum StackTransfer   { POP = 4, PUSH = 5 }\r\nexport type TTransfer = SingleTransfer | BlockTransfer | StackTransfer;\r\n\r\nexport const transferMap: Record<string, TTransfer> = {\r\n  \"ldr\":  SingleTransfer.LDR,\r\n  \"str\":  SingleTransfer.STR,\r\n  \"ldm\":  BlockTransfer.LDM,\r\n  \"stm\":  BlockTransfer.STM,\r\n  \"push\": StackTransfer.PUSH,\r\n  \"pop\":  StackTransfer.POP\r\n}\r\n\r\nexport const transferTitle: Record<TTransfer, string> = {\r\n  [SingleTransfer.LDR]:   \"Load Single\",\r\n  [SingleTransfer.STR]:   \"Store Single\",\r\n  [BlockTransfer.LDM]:    \"Load Multiple\",\r\n  [BlockTransfer.STM]:    \"Store Multiple\",\r\n  [StackTransfer.PUSH]:   \"Stack Push\",\r\n  [StackTransfer.POP]:    \"Stack Pop\"\r\n}\r\n\r\nexport const transferExplain: Record<TTransfer, string> = {\r\n  [SingleTransfer.LDR]:   \"Loads a single byte or word of data from memory.\",\r\n  [SingleTransfer.STR]:   \"Stores a single byte or work of data into memory.\",\r\n  [BlockTransfer.LDM]:    \"Loads multiple bytes or words of data from memory.\",\r\n  [BlockTransfer.STM]:    \"Stores multiple bytes or words of data into memory.\",\r\n  [StackTransfer.PUSH]:   \"Shorthand for storing multiple words to the stack.\",\r\n  [StackTransfer.POP]:    \"Shorthand for loading multiple words from the stack.\",\r\n}\r\n\r\nexport const blockTransferOperations = [\r\n  \"ldm\", \"stm\", \"push\", \"pop\"\r\n]\r\n\r\nexport enum BlockAddressMode {\r\n  IA, DA, IB, DB\r\n} \r\n\r\nexport const blockAddressModeMap: Record<string, BlockAddressMode> = {\r\n  \"ia\": BlockAddressMode.IA,\r\n  \"da\": BlockAddressMode.DA,\r\n  \"ib\": BlockAddressMode.IB,\r\n  \"db\": BlockAddressMode.DB,\r\n}\r\n\r\nexport const addressModeGroup = {\r\n  \"increment\": [BlockAddressMode.IB, BlockAddressMode.IA],\r\n  \"decrement\": [BlockAddressMode.DB, BlockAddressMode.DA],\r\n  \"before\": [BlockAddressMode.IB, BlockAddressMode.DB],\r\n  \"after\": [BlockAddressMode.IA, BlockAddressMode.DA]\r\n}\r\n\r\nexport const readWriteGroup = {\r\n  \"read\": [SingleTransfer.LDR, BlockTransfer.LDM, StackTransfer.POP],\r\n  \"write\": [SingleTransfer.STR, BlockTransfer.STM, StackTransfer.PUSH]\r\n}\r\n\r\nconst plus = \"+\";\r\nconst minus = \"-\";\r\nexport type TSign = typeof plus | typeof minus;\r\n\r\nconst pre = \"pre\";\r\nconst post = \"post\";\r\nexport type TAddressMode = typeof pre | typeof post; \r\n\r\nconst word = \"word\";\r\nconst byte = \"byte\";\r\nexport type TTransferSize = typeof word | typeof byte;","export enum DataType {\r\n  BYTE, HWORD, WORD\r\n}\r\n\r\nexport const dataTypeMap: Record<string, DataType> = {\r\n  '.byte': DataType.BYTE,\r\n  '.hword': DataType.HWORD,\r\n  '.word': DataType.WORD,\r\n  '.asciz': DataType.BYTE,\r\n  '.skip': DataType.BYTE\r\n}\r\n\r\nexport const dataTypeByteSizeMap = {\r\n  [DataType.BYTE]: 1,\r\n  [DataType.HWORD]: 2,\r\n  [DataType.WORD]: 4\r\n}\r\n\r\nexport const dataTypeBitSizeMap = {\r\n  [DataType.BYTE]: 8,\r\n  [DataType.HWORD]: 16,\r\n  [DataType.WORD]: 32\r\n} as const;\r\n\r\nexport const dataTypeBufferConstructorMap = {\r\n  [DataType.BYTE]: Uint8Array,\r\n  [DataType.HWORD]: Uint16Array,\r\n  [DataType.WORD]: Uint32Array\r\n} as const;","export enum Directive {\r\n  // memory subsections\r\n  TEXT, DATA, \r\n\r\n  // linkage\r\n  EXTERN,\r\n\r\n  // alignment\r\n  BALIGN\r\n}\r\n\r\nexport const directiveMap: Record<string, Directive> = {\r\n  // \".global\": Directive.GLOBAL,\r\n\r\n  // memory subsections\r\n  \".text\": Directive.TEXT,\r\n  \".data\": Directive.DATA,\r\n  \r\n  // linkage\r\n  \".extern\": Directive.EXTERN,\r\n\r\n  // alignment\r\n  \".balign\": Directive.BALIGN\r\n}\r\n\r\nexport enum Call {\r\n  // stdout\r\n  PUTCHAR, PUTS, PRINTF, \r\n\r\n  // stdin\r\n  GETS, SCANF,\r\n  \r\n  // allocation\r\n  MALLOC, CALLOC, FREE\r\n}\r\n\r\nexport const callMap: Record<string, Call> = {\r\n  // stdout\r\n  \"putchar\": Call.PUTCHAR,\r\n  \"puts\": Call.PUTS,\r\n  \"printf\": Call.PRINTF,\r\n\r\n  // stdin\r\n  \"gets\": Call.GETS,\r\n  \"scanf\": Call.SCANF,\r\n\r\n  // allocation\r\n  \"malloc\": Call.MALLOC,\r\n  \"calloc\": Call.CALLOC,\r\n  \"free\": Call.FREE\r\n}\r\n\r\nexport const callAddress = -4;","export * from \"./operations\";\r\nexport * from \"./registers\";\r\nexport * from \"./conditions\";\r\nexport * from \"./shifts\";\r\nexport * from \"./flags\";\r\nexport * from \"./transfer\";\r\nexport * from \"./allocation\";\r\nexport * from \"./directives\";\r\nexport * from \"./terminal\";\r\n// export { pages as tutorialPages, TTutorialPage } from \"../tutorial/tutorial\";\r\n\r\n\r\nexport const operations = [\r\n  // bi-operand instructions\r\n  \"mov\", \"mvn\", \"tst\", \"teq\", \"cmp\", \"cmn\",\r\n\r\n  // tri-operand instructions\r\n  \"and\", \"eor\", \"sub\", \"rsb\", \"add\",\r\n  \"adc\", \"sbc\", \"rsc\", \"orr\", \"bic\",\r\n\r\n  // shift instructions\r\n  \"lsl\", \"lsr\", \"asr\", \"ror\",\r\n  \r\n  // load/store \r\n  \"ldr\", \"str\", \"ldm\", \"stm\", \"push\", \"pop\",\r\n\r\n  // branch instructions\r\n  \"bx\", \"bl\", \"b\",  \r\n]\r\n\r\nexport enum OperandType { REGISTER, IMMEDIATE }\r\n\r\nexport enum EnvironmentType {\r\n  TERMINAL = \"terminal\",\r\n  EDITOR = \"editor\"\r\n}\r\n\r\n","import { version } from '../../package.json';\r\n\r\nconst art3 = ((s: any) => s.raw)`\r\n      ██╗  ██████╗   ██╗  ███████╗   ██████╗\r\n      ╚═╝  ██╔══██╗  ██║  ██╔════╝  ██╔════╝\r\n      ██║  ██████╔╝  ██║  ███████╗  ██║     \r\n      ██║  ██╔══██╗  ██║  ╚════██║  ██║     \r\n      ██║  ██║  ██║  ██║  ███████║  ╚██████╗\r\n      ╚═╝  ╚═╝  ╚═╝  ╚═╝  ╚══════╝   ╚═════╝\r\n      repl interface\r\n`[0];\r\n\r\nexport const replWelcome = // html\r\n`\\\r\n  <span class=\"internal\">\\\r\n    <span class=\"d-inline-block\" style=\"white-space: pre;\">${art3}</span>\r\n\r\n    Welcome to the iRISC ${version} repl interface.\r\n\r\n    Here you are able to execute single ARMv7 commands and immediately see the effect using a command-line interface.\\\r\n    Simply type a valid ARM instruction on the prompt below to begin.\r\n\r\n    Enter ':help' to see some other cool things you can do.\\\r\n  </span>\r\n  &nbsp;\\\r\n`\r\n\r\nexport const terminalHelpString = `\r\n<span class=\"internal\" style=\"white-space: pre;\">\\\r\n\r\n<u>terminal help:</u>\r\n\r\n<div class=\"border-left\">\\\r\n  :reset (:r) \\t reset the simulator\r\n  :clear (:c) \\t clear terminal output\r\n  :help  (:h) \\t display help text\r\n</div>\\\r\n\r\n<div class=\"border-left\">\\\r\n  ./src       \\t run the program currently loaded in the editor\r\n              \\t     'ctrl + c' to force exit a running program\r\n</div>\\\r\n\r\n<div class=\"border-left\">\\\r\n  vi          \\t switch to the editor using your favourite text editor\r\n  vim         \\t     press 'esc' to return to terminal from editor\r\n  nano        \\t     provide a path as a parameter to open a specific file\r\n  nvim\r\n  emacs -nw\r\n  ne\r\n  micro\r\n  tilde\\\r\n</div>\\\r\n\r\n</span>\\\r\n`;","import { TSimulatorSnapshot } from \"@/simulator\";\r\n\r\ninterface IQueue<T> {\r\n\tenqueue(item: T): void;\r\n\tdequeue(): T | undefined;\r\n\tsize(): number;\r\n}\r\n\r\nexport class Queue<T> implements IQueue<T> {\r\n\tprivate storage: T[] = [];\r\n\r\n\tconstructor(\r\n\t\tprivate capacity: number = Infinity,\r\n\t\tprivate autoRoll: boolean = true\r\n\t) { }\r\n\r\n\tenqueue(item: T, replacementPredicate?: (value: T) => boolean): void {\r\n\t\tif (typeof replacementPredicate === \"function\") {\r\n\t\t\tfor (let i = 0; i < this.storage.length; i++) {\r\n\t\t\t\tif (replacementPredicate(this.storage[i])) {\r\n\t\t\t\t\tthis.storage[i] = item;\r\n\t\t\t\t\tthis.storage = [...this.storage];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.size() === this.capacity) {\r\n\t\t\tif (this.autoRoll) this.dequeue();\r\n\t\t\telse throw Error(\"Queue has reached max capacity, you cannot add more items\");\r\n\t\t}\r\n\r\n\t\tthis.storage.push(item);\r\n\t}\r\n\r\n\tdequeue(): T | undefined {\r\n\t\treturn this.storage.shift();\r\n\t}\r\n\r\n\tsize(): number {\r\n\t\treturn this.storage.length;\r\n\t}\r\n\r\n\tdata(): T[] {\r\n\t\treturn this.storage;\r\n\t}\r\n}","import { SimulatorState } from '@/simulator';\r\nimport { TSettings } from './types';\r\nimport Vue from 'vue';\r\n\r\nconst settings = Vue.observable<TSettings>({\r\n  crtEffect: false\r\n});\r\n\r\nexport const getters = {\r\n  settings: () => ({\r\n    ...settings,\r\n    memSize: SimulatorState.memory().size,\r\n    delay: SimulatorState.delay()\r\n  })\r\n};\r\n\r\nexport const actions = {\r\n  init: function () {\r\n    const localSettings = localStorage.getItem('settings');\r\n    if (localSettings) {\r\n      const state = JSON.parse(localSettings);\r\n\r\n      SimulatorState.setDelay(state.delay ?? 500);\r\n      SimulatorState.init(state.memSize ?? 256);\r\n\r\n      settings.crtEffect = state.crtEffect ?? false;\r\n    }\r\n  },\r\n\r\n  setCrtEffect: function (value: boolean) {\r\n    settings.crtEffect = value;\r\n  },\r\n\r\n  updateStorage: function () {\r\n    const toStore = {\r\n      ...settings,\r\n      delay: SimulatorState.delay(),\r\n      memSize: SimulatorState.memory().size\r\n    };\r\n  \r\n    localStorage.setItem('settings', JSON.stringify(toStore));\r\n  }\r\n}\r\n","import { actions, getters } from './state'\r\n\r\nexport const SettingsState = {\r\n  ...actions,\r\n  ...getters\r\n}","import Shepherd from 'shepherd.js';\r\nimport { offset } from '@floating-ui/dom';\r\nimport { SimulatorState } from '@/simulator';\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from '@/syntax/types';\r\nimport { Register } from '@/constants';\r\nimport { highlight, languages } from 'prismjs';\r\n\r\n\r\nexport function createTour() {\r\n\tconst tour = new Shepherd.Tour({\r\n\t\t\tuseModalOverlay: true\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\ttitle: \"Welcome to iRISC\",\r\n\t\ttext: \"Take a quick tour of the application to learn what everything is!\",\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"skip it\",\r\n\t\t\t\taction: function () { this.complete(); } \r\n\t\t\t},\r\n\t\t\t{ \r\n\t\t\t\ttext: \"start tour\",\r\n\t\t\t\taction: function () { \r\n\t\t\t\t\tSimulatorState.reset();\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tid: \"terminal\",\r\n\t\tattachTo: { element: '[tour-item=\"terminal\"]', on: 'bottom' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis is the terminal. Here, you may execute individual instructions and immediately see their effect on the simulator.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tType '<span class=\"token operation\">mov</span> <span class=\"token register\">r1</span>, <span class=\"token immediate\">#1</span>'\r\n\t\t\t\tinto the terminal and use the enter key to continue!\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"r1\"]', on: 'right' },\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"got it\",\r\n\t\t\t\taction: function () { this.next(); } \r\n\t\t\t}\r\n\t\t],\r\n\t\twhen: {\r\n\t\t\tshow: function () {\r\n\t\t\t\tconst currentStep = Shepherd.activeTour?.getCurrentStep();\r\n\t\t\t\tconst currentStepElement = currentStep?.getElement();\r\n\t\t\t\tconst content = currentStepElement?.querySelector('.shepherd-content');\r\n\t\t\t\tconst button = content?.querySelector('.shepherd-button') as HTMLElement;\r\n\r\n\t\t\t\tconst textEl = document.createElement('div');\r\n\t\t\t\ttextEl.className = 'shepherd-text';\r\n\r\n\t\t\t\t\r\n\t\t\t\tif (tourVm.currentInstruction?.text === 'mov r1, #1') {\r\n\t\t\t\t\ttextEl!.innerHTML = // html \r\n\t\t\t\t\t`\r\n\t\t\t\t\t\t<div>Nice!</div> \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"mt-3\">\r\n\t\t\t\t\t\t\tYou <span class=\"token operation\">mov</span>ed the value <span class=\"token immediate\">#1</span> \r\n\t\t\t\t\t\t\tinto register <span class=\"token register\">r1</span>!\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t`;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst highlitInstruction = highlight(tourVm.currentInstruction!.text, languages.armv7, 'ARMv7');\r\n\r\n\t\t\t\t\tconst r1 = SimulatorState.registers()[Register.R1];\r\n\t\t\t\t\tif (r1 === 1) {\r\n\t\t\t\t\t\ttextEl!.innerHTML = // html \r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t\t\t<div>${highlitInstruction}?</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"mt-3\">\r\n\t\t\t\t\t\t\t\tThere's a one in here at least, so that's something.\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbutton!.innerHTML = 'your way was boring';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttextEl!.innerHTML = // html \r\n\t\t\t\t\t\t`\r\n\t\t\t\t\t\t\t<div>...</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"mt-3\">\r\n\t\t\t\t\t\t\t\tGuess we'll just use ${highlitInstruction} as our example instead...\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbutton!.innerText = 'oops';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontent?.insertBefore(textEl, content.querySelector('.shepherd-footer'));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"assembler\"]', on: 'top' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis is the <span class=\"text-irisc\">assembler</span>. It gives detailed information about the last instruction.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tThe binary number at the top is the assembled bitcode for the last instruction. You can hover the different sections to learn\r\n\t\t\t\thow the computer decodes this bitcode for execution.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"okay\",\r\n\t\t\t\taction: function () { this.next(); }\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"editor-switch\"]', on: 'bottom' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\tClick this button to switch to the <span class=\"text-irisc\">code editor</span>.\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tadvanceOn: {\r\n\t\t\tselector: '[tour-item=\"editor-switch\"]',\r\n\t\t\tevent: 'click'\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tid: \"editor\",\r\n\t\tattachTo: { element: '[tour-item=\"editor\"]', on: 'bottom' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis is the <span class=\"text-irisc\">code editor</span>. In here you can write simple scripts of assembly instructions or even full ARMv7 programs.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tYou can add breakpoints by clicking the line number of the instruction you want to break on.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tAdd a breakpoint to line #20 to continue.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\twhen: {\r\n\t\t\thide: function () {\r\n\t\t\t\tSimulatorState.reset();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"debugger\"]', on: 'bottom' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThese are the <span class=\"text-irisc\">debug controls</span>.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tThe standard operations are included: run/pause, stop and step forward; \r\n\t\t\t\tbut also <u>step back</u> (<i class=\"fas fa-step-backward fa-xs token label\"></i>) \r\n\t\t\t\tand a tick rate slider to control the length of time between CPU 'ticks'.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(35) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"righto\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"debug-run\"]', on: 'bottom' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\tClick the <i class=\"fas fa-play fa-xs text-green\"></i> button to run the program.\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tadvanceOn: {\r\n\t\t\tselector: '[tour-item=\"debug-run\"]',\r\n\t\t\tevent: 'click'\r\n\t\t},\r\n\t\twhen: {\r\n\t\t\tshow: function () {\r\n\t\t\t\t// SimulatorState.reset();\r\n\t\t\t\tSimulatorState.setDelay(500);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tid: \"run-program\",\r\n\t\tattachTo: { element: '[tour-item=\"editor\"]' },\r\n\t\tarrow: false,\r\n\t\tcanClickTarget: false,\r\n\t\tclasses: 'd-none'\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"history\"]', on: 'right' },\r\n\t\ttext: // html\r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tClick here to open the <span class=\"text-irisc\">state history</span> modal.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tadvanceOn: {\r\n\t\t\tselector: '[tour-item=\"history\"]',\r\n\t\t\tevent: 'click'\r\n\t\t},\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"state-history\"]', on: 'right' },\r\n\t\ttext: // html\r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis modal contains the complete <span class=\"text-irisc\">state history</span> for the running program or terminal session.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tAfter every instruction execution, a snapshot is taken of the simulator state. This modal allows you to compare the differences\r\n\t\t\t\tand replay states right back to the start of execution.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tcanClickTarget: false,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"cool\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"state-history-debug\"]', on: 'bottom' },\r\n\t\ttext: // html\r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis popout debugger allows you to control the flow of the program without having to exit \r\n\t\t\t\tthe <span class=\"txet-irisc\">state history</span> modal.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\thighlightClass: \"disabled\",\r\n\t\t// canClickTarget: false,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"nifty\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tid: \"state-history-tick\",\r\n\t\tattachTo: { element: '[tour-item=\"state-history-tick-1\"]', on: 'right' },\r\n\t\ttext: // html\r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tClick on any previous state to restore the simulator back to the corresponding tick.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"state-history-tick-1\"]', on: 'right' },\r\n\t\ttext: // html\r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tNice one.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tcanClickTarget: false,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"thanks?\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\ttourVm.vueApp!.$root.$emit('bv::hide::modal', 'state-history');\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"memory\"]', on: 'top' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis area displays the simulator memory. It is arranged like the virtual address space of a program running on your computer.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\t<span class=\"token register\">Text</span>, <span class=\"token operation\">data</span> (instructions and static variables), \r\n\t\t\t\tand the <span class=\"token label\">heap</span> grow upwards from the lower addresses on the left, the <span class=\"token line-comment\">stack</span> \r\n\t\t\t\tgrows down from the higher addresses on the right.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tcanClickTarget: false,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"alrighty\",\r\n\t\t\t\taction: function () { this.next(); } \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"memory-usage\"] .region', on: 'top' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis section indicates the portion of memory used by the <span class=\"token register\">text</span> (instructions) of the program\r\n\t\t\t\tin the <span class=\"text-irisc\">code editor</span>.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tClick on any section of the memory usage visualiser to open the <span class=\"text-irisc\">memory explorer</span>.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tadvanceOn: {\r\n\t\t\tselector: '[tour-item=\"memory-usage\"] .region',\r\n\t\t\tevent: 'click'\r\n\t\t}\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tid: \"memory-data\",\r\n\t\tattachTo: { element: '[tour-item=\"memory-data\"]', on: 'right' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tThis is the <span class=\"text-irisc\">memory explorer</span>. It shows the actual data stored in each byte of the \r\n\t\t\t\tsimulated RAM.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t\tBytes are displayed line-by-line from left to right in ascending order of address.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"okay, enough already\",\r\n\t\t\t\taction: function () { \r\n\t\t\t\t\ttourVm.vueApp!.$root.$emit('bv::hide::modal', 'memory-explorer');\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\tattachTo: { element: '[tour-item=\"tutorial\"]', on: 'left' },\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\tFinally, there's a tutorial over here to help you get started with ARM assembly if you've never written any before.\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tfloatingUIOptions: {\r\n\t\t\tmiddleware: [ offset(15) ]\r\n\t\t},\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"whatever\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\tthis.next(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\ttour.addStep({\r\n\t\ttitle: \"And that's it!\",\r\n\t\ttext:\t// html \r\n\t\t`\r\n\t\t\t<div>\r\n\t\t\t\t<i>Iff</i> you like this app or are interested in how it was made you can check the source code via the\r\n\t\t\t\t<u>src</u> link in the bottom right.\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"mt-3\">\r\n\t\t\t <small>You can even star it if you like!</small>\r\n\t\t\t</div>\r\n\t\t`,\r\n\t\tbuttons: [\r\n\t\t\t{ \r\n\t\t\t\ttext: \"finally!\",\r\n\t\t\t\taction: function () {\r\n\t\t\t\t\tthis.complete(); \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\tconst tourVm = new Vue({\r\n\t\tcomputed: {\r\n\t\t\tcurrentTick: SimulatorState.currentTick,\r\n\t\t\tcurrentInstruction: SimulatorState.currentInstruction,\r\n\t\t\tbreakpoints: SimulatorState.breakpoints,\r\n\t\t\tvueApp: SimulatorState.vue\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tisStep: function (stepId: string) {\r\n\t\t\t\treturn tour.getCurrentStep()?.id === stepId;\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tcurrentInstruction: function (instruction: TInstructionNode) {\r\n\t\t\t\tif (this.isStep(\"terminal\")) {\r\n\t\t\t\t\t// \r\n\t\t\t\t\tif (instruction) {\r\n\t\t\t\t\t\ttour.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tbreakpoints: function (breakpoints: TInstructionNode[]) {\r\n\t\t\t\tif (this.isStep(\"editor\")) {\r\n\t\t\t\t\tif (breakpoints.find(e => e.lineNumber === 19)) {\t\t// zero-indexed line #20\r\n\t\t\t\t\t\t// remove all other breakpoints\r\n\t\t\t\t\t\tSimulatorState.removeBreakpoints();\r\n\t\t\t\t\t\tSimulatorState.toggleBreakpoint(19);\r\n\r\n\t\t\t\t\t\ttour.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tcurrentTick: function (currentTick: number) {\r\n\t\t\t\tif (this.isStep(\"run-program\")) {\r\n\t\t\t\t\tif (currentTick === 3) {\r\n\t\t\t\t\t\tsetTimeout(() => tour.next(), 500);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (this.isStep(\"state-history-tick\")) {\r\n\t\t\t\t\tif (currentTick === 1) {\r\n\t\t\t\t\t\ttour.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn tour;\r\n}","export function getCaretPosition(element: HTMLElement): number {\r\n  let position = 0;\r\n\r\n  const isSupported = typeof window.getSelection !== \"undefined\";\r\n  if (isSupported) {\r\n    const selection = window.getSelection();\r\n\r\n    if (selection?.rangeCount !== 0) {\r\n      const range = window.getSelection()!.getRangeAt(0);\r\n      const preCaretRange = range.cloneRange();\r\n\r\n      preCaretRange.selectNodeContents(element);\r\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\r\n\r\n      position = preCaretRange.toString().length;\r\n    }\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nexport function setCaretPosition(element: HTMLElement, index: number) {\r\n  const selectedText = window.getSelection();\r\n  const selectedRange = document.createRange();\r\n\r\n  selectedRange.setStart(element.childNodes[0], index);\r\n  selectedRange.collapse(true);\r\n  selectedText?.removeAllRanges();\r\n  selectedText?.addRange(selectedRange);\r\n\r\n  element.focus(); \r\n}","import { Queue } from '@/utilities';\r\nimport { TAllocation, TDeclaration, TSimulatorSnapshot, TSimulatorState } from './types';\r\nimport Vue from 'vue';\r\n\r\nexport const state = Vue.observable<TSimulatorState>({\r\n  running: false,\r\n  paused: false,\r\n  step: false,\r\n  delay: 500,\r\n\r\n  cpu: {\r\n    registers: new Uint32Array(new ArrayBuffer(4 * 16)),\r\n    observableRegisters: Array(16).fill(0),\r\n    cpsr: [false, false, false, false],\r\n    tick: 0\r\n  },\r\n\r\n  // memory data\r\n  memory: {\r\n    size: 256,\r\n    sizes: [128, 256, 512, 1024, 2048, 4096],\r\n\r\n    buffer: undefined,\r\n    wordView: new Uint32Array(),\r\n    byteView: new Uint8Array(),\r\n\r\n    observableWordView: [],\r\n    observableByteView: [],\r\n\r\n    text: [],\r\n    textHeight: 0,\r\n    textMap: {},\r\n\r\n    dataHeight: 0,\r\n    dataTable: {},\r\n    dataMap: new Map<number, TDeclaration>(),\r\n    \r\n    heapHeight: 0,\r\n    heapMap: new Map<number, TAllocation>(),\r\n\r\n    stackHeight: 0,\r\n  },\r\n\r\n  previousPC: 0,\r\n  currentInstruction: undefined,\r\n  wasExecuted: false,\r\n\r\n  stdin: undefined,\r\n  interrupted: false,\r\n\r\n  output: [\"\"],\r\n  errors: [],\r\n  breakpoints: [],\r\n\r\n  hoveredError: null,\r\n  exitStatus: undefined,\r\n\r\n  snapshots: new Queue<TSimulatorSnapshot>(500, true),\r\n  vue: undefined\r\n});","// import decimal from \"dec-to-binary\";\r\n\r\n/** Find first set (ffs)\r\n * Returns the zero-indexed position of the least significant, set bit\r\n * \r\n * @param n number to find the first set bit for\r\n * @returns a zero-indexed number representing the position of the first set bit\r\n */\r\nexport function ffs(n: number) : number {\r\n  n = (0xffffffff & n) >>> 0;\r\n  return Math.log2(n & -n);\r\n}\r\n\r\n/** Find last set (fls)\r\n * Returns the zero-indexed position of the most significant, set bit\r\n * \r\n * @param n number to find the last set bit for\r\n * @returns a zero-indexed number representing the position of the last set bit\r\n */\r\nexport function fls(n: number) : number {\r\n  n = (0xffffffff & n) >>> 0;\r\n  return Math.floor(Math.log2(n));\r\n}\r\n\r\n/** Rotate right (rotr)\r\n * Performs the rotate right operation on $n by $d\r\n * \r\n * @param n the number to rotate\r\n * @param d the number to rotate by\r\n * @returns the rotated value\r\n */\r\nexport function rotr(n: number, d: number) : number {\r\n  return (n >>> d)|(n << (32 - d));\r\n}\r\n\r\n/**\r\n * \r\n * @param n \r\n * @returns \r\n */\r\nexport function bitset(size: number, value: number = 0) : number[] {\r\n  const binary = get64binary(value);\r\n  return binary.substring(64 - size).split('').map(e => parseInt(e, 10)).reverse();\r\n}\r\n\r\nfunction get64binary(int: number) {\r\n  if (int>=0) return int.toString(2).padStart(64, \"0\");\r\n  \r\n  return (-int-1)\r\n    .toString(2)\r\n    .replace(/[01]/g, function(d: string) : string { return (+!+d).toString(); }) // hehe: inverts each char\r\n    .padStart(64, \"1\");\r\n}","import { bitset } from \"@/assets/bitset\";\r\nimport { Register, Condition, Flag } from \"@/constants\";\r\nimport Vue from 'vue';\r\nimport { state } from \"../state\";\r\nimport { memory } from \"./memory\";\r\n\r\nexport const cpu = {\r\n\ttick: function () {\r\n    state.cpu.tick++;\r\n  },\r\n\t\r\n  setRegister: function (register: Register, value: number) {\r\n    // if (register === Register.PC) {\r\n    //   state.previousPC = state.cpu.registers[Register.PC];\r\n    //   state.currentInstruction = memory.instruction(state.cpu.registers[Register.PC]);\r\n    // }\r\n    Vue.set(state.cpu.registers, register, value);\r\n\r\n    this.observeRegisters();\r\n  },\r\n\r\n  observeRegisters: function () {\r\n    state.cpu.observableRegisters = [...state.cpu.registers];\r\n  },\r\n\r\n  checkFlags: function (cond: Condition) : boolean {\r\n    const bits = bitset(4, cond);\r\n    const cpsr = state.cpu.cpsr;\r\n\r\n    let result: boolean = false;\r\n    switch(cond) {\r\n      case Condition.EQ: case Condition.NE:                       // equality\r\n        result = cpsr[Flag.Z]; break;\r\n      case Condition.CS: case Condition.CC:\r\n        result = cpsr[Flag.C]; break;\r\n      case Condition.MI: case Condition.PL:\r\n        result = cpsr[Flag.N]; break;\r\n      case Condition.VS: case Condition.VC:\r\n        result = cpsr[Flag.V]; break;\r\n      case Condition.HI: case Condition.LS:\r\n        result = cpsr[Flag.C] && !cpsr[Flag.Z]; break;\r\n      case Condition.GE: case Condition.LT:\r\n        result = cpsr[Flag.N] === cpsr[Flag.V]; break;\r\n      case Condition.GT: case Condition.LE:\r\n        result = (cpsr[Flag.N] === cpsr[Flag.V]) && !cpsr[Flag.Z]; break;\r\n      default:\r\n        return true;                                          // AL flag returns true regardless\r\n    }\r\n\r\n    // check top bit of condition code for logic reversal\r\n    if (bits[0] === 1) result = !result;\r\n    return result;                                   \r\n  },\r\n  \r\n  setFlags: function (op1: number, op2: number, result: number, operator: string = \" \") {\r\n    const sign1: number = bitset(32, op1)[31];             // sign of left hand operand\r\n    const sign2: number = bitset(32, op2)[31];             // sign of right hand operand\r\n    const signr: number = bitset(32, result)[31];          // sign of result\r\n    const result_ext: number[] = bitset(33, result);       // msb = carry bit\r\n    \r\n    let cpsr = [false, false, false, false];\r\n    \r\n    cpsr[Flag.N] = result_ext[31] === 1;                    // msb = 1\r\n    cpsr[Flag.Z] = (result & 0xffffffff) === 0              // first 32 bits are 0 \r\n\r\n    if (operator === '+') {\r\n      cpsr[Flag.C] = result_ext[32] === 1                   // unsigned overflow\r\n      cpsr[Flag.V] = sign1 === sign2 && sign1 !== signr     // two operands of the same sign result in changed sign\r\n    }\r\n    else if (operator === '-') {\r\n      cpsr[Flag.C] = !(result_ext[32] === 1)                // unsigned underflow    \r\n      cpsr[Flag.V] = sign1 !== sign2 && sign2 === signr     // signs different and result sign same as subtrahend \r\n    }\r\n\r\n    Vue.set(state.cpu, 'cpsr', cpsr);\r\n  },\r\n}","import { Token } from 'prismjs';\r\n\r\nconst red = \"#de3759\";\r\nconst blue = \"#6A5ACD\";\r\nconst amber = \"#ffbf00\";\r\ntype TErrorColour = typeof red | typeof blue | typeof amber;\r\n\r\n/**\r\n * Base error class which provides the basis for catching specific syntax errors\r\n */\r\nexport class IriscError extends Error {\r\n  statement: Token[];\r\n  lineNumber: number;\r\n  tokenIndex: number;\r\n  color: TErrorColour = red;\r\n\r\n  get type() : string { return 'IriscError'; }\r\n \r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super();\r\n    this.message = message;\r\n    this.statement = statement;\r\n    this.lineNumber = lineNumber;\r\n    this.tokenIndex = tokenIndex;\r\n  }\r\n\r\n  constructHelper() : string {\r\n    return `${this.lineNumber + 1} : ${this.message}`;\r\n  }\r\n\r\n  constructHelperHTML() : string {\r\n    const lineContent = this.statement\r\n      .map((token, index) => {\r\n        let content = `\r\n          <span \r\n            class=\"token ${token.alias} ${token.type} ${index === this.tokenIndex ? 'error' : ''}\"\r\n            style=\"text-decoration-color: ${this.color}\"\r\n          >\r\n            ${token.content}\r\n          </span>\r\n        `;\r\n\r\n        if (!(index === 0 || token.type === 'comma')) return ` ${content}`\r\n        return content;\r\n      })\r\n      .join(\"\");\r\n\r\n    return ` \r\n      <div style=\"color: ${this.color}\">${this.type}</div>\r\n      <div>${this.message}</div>\r\n      ${\r\n        lineContent \r\n          ? `\r\n            <div class=\"ml-4\">\r\n              ${this.lineNumber + 1} : ${lineContent}\r\n            </div>\r\n          `\r\n          : ''\r\n      }\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * General parser error - unparseable tokens\r\n */\r\nexport class ParserError extends IriscError {\r\n  get type() : string { return 'ParserError'; }\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n} \r\n\r\n\r\n/**\r\n * General syntax error - incorrect token placement\r\n */\r\nexport class SyntaxError extends IriscError {\r\n  get type() : string { return 'SyntaxError'; }\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n\r\n  static badToken(expected: string, received: Token, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    return new SyntaxError(\r\n      `${expected.toUpperCase()} value expected - received ${received.type.toUpperCase()} '${received.content}' instead.`, \r\n      statement, lineNumber, tokenIndex\r\n    );\r\n  }\r\n} \r\n\r\n/**\r\n * Numerical error - too large or impossible as an immediate\r\n */\r\nexport class NumericalError extends IriscError {\r\n  get type() : string { return 'NumericalError'; }\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n}\r\n\r\n/**\r\n * Error during assembly\r\n */\r\nexport class AssemblyError extends IriscError {\r\n  get type() : string { return 'AssemblyError'; }\r\n  color: TErrorColour = amber;\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n}\r\n\r\n/**\r\n * Error while validating that all label references exist\r\n */\r\nexport class ReferenceError extends IriscError {\r\n  get type() : string { return 'ReferenceError'; }\r\n  color: TErrorColour = blue;\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n}\r\n\r\n/**\r\n * Error during runtime\r\n */\r\nexport class RuntimeError extends IriscError {\r\n  get type() : string { return 'RuntimeError'; }\r\n  color: TErrorColour = amber;\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number) {\r\n    super(message, statement, lineNumber, -1);\r\n  }\r\n}\r\n\r\n/**\r\n * Error during REPL interaction\r\n */\r\n export class InteractiveError extends IriscError {\r\n  get type() : string { return 'InteractiveError'; }\r\n\r\n  constructor(message: string, statement: Token[], lineNumber: number, tokenIndex: number) {\r\n    super(message, statement, lineNumber, tokenIndex);\r\n  }\r\n}\r\n\r\n/**\r\n * Error during interaction with localStorage filesystem\r\n */\r\nexport class FileSystemError extends IriscError {\r\n  get type() : string { return 'FileSystemError'; }\r\n\r\n  constructor(message: string) {\r\n    super(message, [], -1, -1);\r\n  }\r\n}\r\n\r\nexport class NotImplementedError extends IriscError {\r\n  get type() : string { return 'NotImplementedError'; }\r\n\r\n  constructor() {\r\n    super(\"Sorry! This hasn't been implemented yet.\", [], -1, -1);\r\n  }\r\n}\r\n\r\n// /**\r\n//  * LexicalError is slightly different from other errors in that its problem refers to a character within a\r\n//  */\r\n// export class LexicalError extends Error {\r\n//   errorType: string = \"Lexical Error\";\r\n//   message: string;\r\n//   statement: string;\r\n//   symbolIndex: number;\r\n\r\n//   constructor(message: string, statement: string, symbolIndex: number) {\r\n//     super();\r\n//     this.message = message;\r\n//     this.statement = statement;\r\n//     this.symbolIndex = symbolIndex;\r\n//   }\r\n// }\r\n","export const tokens = {\r\n  // operations\r\n  bi_operand: \"bi-operand\",\r\n  tri_operand: \"tri-operand\",\r\n  branch: \"branch\",\r\n  shift: \"shift\",\r\n  transfer: {\r\n    single: \"single-transfer\",\r\n    block: \"block-transfer\",\r\n    stack: \"stack-transfer\",\r\n  } as const,\r\n  \r\n  // components\r\n  string: \"string\",\r\n  register: \"register\",\r\n  immediate: \"immediate\",\r\n  number: \"number\",\r\n  indexer: \"indexer\",\r\n  reg_list: \"reg-list\",\r\n  comma: \"comma\",\r\n  data_label: \"data-label\",\r\n  sign: \"sign\",\r\n  updating: \"updating\",\r\n  label: \"label\",\r\n  op_label: \"op-label\",\r\n\r\n  // auxiliary\r\n  directive: \"directive\",\r\n  line_comment: \"line-comment\",\r\n  end: \"end\",\r\n  whitespace: \"whitespace\",\r\n  unknown: \"unknown\"\r\n} as const;","import { bitset, ffs, fls, rotr } from '@/assets/bitset';\r\nimport { Register, regMap } from '@/constants';\r\nimport { Token } from 'prismjs';\r\nimport { NumericalError, SyntaxError } from '../interpreter/error';\r\nimport { tokens } from '@/constants/tokens';\r\n\r\n/** Ancestor class which defines common functions for all child syntax nodes */\r\nexport class SyntaxNode {\r\n  protected _statement: Token[];\r\n  protected _lineNumber: number;\r\n  protected _currentToken: number;\r\n\r\n  // getters\r\n  get statement(): Token[] { return this._statement; }\r\n  get lineNumber(): number { return this._lineNumber; }\r\n  get currentToken() : number { return this._currentToken; }\r\n\r\n  /**\r\n   * \r\n   * @param statement \r\n   * @param lineNumber \r\n   * @param currentToken \r\n   */\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    this._statement = statement;\r\n    this._lineNumber = lineNumber;\r\n    this._currentToken = currentToken;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns \r\n   */\r\n  previousToken() : Token {\r\n    if (this._currentToken > 0)\r\n      return this._statement[this._currentToken - 1];\r\n    else throw new SyntaxError(\"Could not assemble instruction - please contact the developer.\", this.statement, this.lineNumber, -1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns \r\n   */\r\n  nextToken() : Token {\r\n    if (this._currentToken < this._statement.length)\r\n      return this._statement[this._currentToken++];\r\n    else throw new SyntaxError(\"Unexpected instruction end '\" + this._statement[this._statement.length - 1].content + \"'.\", this._statement, this._lineNumber, this._statement.length - 1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns \r\n   */\r\n  peekToken(): Token {\r\n    if (this._currentToken < this._statement.length)\r\n      return this._statement[this._currentToken];\r\n    else throw new SyntaxError(\"Unexpected instruction end '\" + this._statement[this._statement.length - 1].content + \"'.\", this._statement, this._lineNumber, this._statement.length - 1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns \r\n   */\r\n  hasToken() : boolean {\r\n    if (this._currentToken < this._statement.length) return true;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param index \r\n   * @returns \r\n   */\r\n  getToken(index: number) : Token {\r\n    if (index < this._statement.length) {\r\n      return this._statement[index];\r\n    }\r\n\r\n    throw new SyntaxError(\"Unexpected instruction end '\" + this._statement[this._statement.length - 1].content + \"'.\", this._statement, this._lineNumber, this._statement.length - 1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @returns \r\n   */\r\n  parseComma(token: Token) : boolean {\r\n    if (token.type == \"comma\") return true;\r\n    else throw SyntaxError.badToken(tokens.comma, token, this._statement, this._lineNumber, this._currentToken);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @returns \r\n   */\r\n  parseReg(token: Token) : Register {\r\n    if (token.type == \"register\") return regMap[token.content as string];\r\n    else throw SyntaxError.badToken(tokens.register, token, this._statement, this._lineNumber, this._currentToken);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @param bits \r\n   * @returns \r\n   */\r\n  parseImm(token: Token, bits?: number) : number {\r\n    if (token.type != tokens.immediate) {\r\n      throw SyntaxError.badToken(tokens.immediate, token, this._statement, this._lineNumber, this._currentToken);\r\n    }\r\n    \r\n    return this.parseNum(token, bits);\r\n  }\r\n\r\n  parseNum(token: Token, bits?: number) : number {\r\n    let base: number = 0;\r\n    let start: number;\r\n    const reveresedToken = [...(token.content as string)].reverse();\r\n\r\n    if (token.alias == \"bin\") {\r\n      base = 2;\r\n      start = reveresedToken.findIndex(e => !\"01\".includes(e));\r\n    }\r\n    else if (token.alias == \"oct\") {\r\n      base = 8;\r\n      start = reveresedToken.findIndex(e => !\"01234567\".includes(e));\r\n    }\r\n    else if (token.alias == \"dec\") {\r\n      base = 10;\r\n      start = reveresedToken.findIndex(e => !\"0123456789\".includes(e));\r\n    }\r\n    else if (token.alias == \"hex\") {\r\n      base = 16;\r\n      start = reveresedToken.findIndex(e => !\"0123456789abcdef\".includes(e));\r\n    }\r\n    else throw SyntaxError.badToken(tokens.immediate, token, this._statement, this._lineNumber, this._currentToken);\r\n\r\n    // correct start index for tokens which don't have '#' or '0n' identifiers\r\n    start = start === -1 ? reveresedToken.length : start;\r\n    \r\n    start = reveresedToken.length - start;\r\n    const imm: number = parseInt((token.content as string).slice(start), base);\r\n\r\n    if (!bits || imm < Math.pow(2, bits)) return imm;\r\n    else throw new NumericalError(\"IMMEDIATE value '\" + token.content + \"' (decimal \" + imm + \") is greater than the \" + bits + \"-bit maximum.\", this._statement, this._lineNumber, this._currentToken)\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @param bits \r\n   * @returns \r\n   */\r\n  parseShiftedImm(token: Token, bits: number) : [number, number] {\r\n    let imm: number = this.parseImm(token);\r\n    let shift = 0;\r\n\r\n    if (imm == 0) return [imm, shift];    // return [0, 0] if imm == 0 (short circuit)\r\n    if (imm > 0xffffffff) {\r\n      throw new NumericalError(\r\n        `IMMEDIATE value '${token.content}' (decimal ${imm}) cannot be represented in 32 bits.`, \r\n        this._statement, \r\n        this._lineNumber, \r\n        this._currentToken\r\n      );\r\n    }\r\n\r\n    const bottombit: number = ffs(imm);\r\n    const topbit: number = fls(imm);\r\n\r\n    if (topbit > 31) {\r\n      throw new NumericalError(\r\n        `IMMEDIATE value '${token.content}' (decimal ${imm}) cannot be represented in 32 bits.`, \r\n        this._statement, \r\n        this._lineNumber, \r\n        this._currentToken\r\n      );\r\n    }\r\n\r\n    if ((topbit - bottombit) > bits - 1) {\r\n      const validRolledCorner = this.isValidRolledCorner(token, imm, bits);\r\n\r\n      // if (!validRolledCorner) {\r\n        // throw new NumericalError(\r\n        //   `IMMEDIATE value '${token.content}' (decimal ${imm}) cannot be implicitly represented with a maximum set-bit width of ${bits}.`, \r\n        //   this._statement, \r\n        //   this._lineNumber, \r\n        //   this._currentToken\r\n        // );\r\n      // }\r\n\r\n      [imm, shift] = validRolledCorner as [number, number];\r\n    }\r\n    else {\r\n      if (topbit > bits - 1) { \r\n        imm = rotr(imm, Math.floor((topbit - (bits - 2)) / 2) * 2);\r\n        shift = 32 - (Math.floor((topbit - (bits - 2)) / 2) * 2);\r\n      }\r\n    }\r\n\r\n    // if shift amount is odd\r\n    if (shift % 2 !== 0) {\r\n      throw new NumericalError(`The barrel shifter can only rotate an IMMEDIATE value by an even number of bits.`, this._statement, this._lineNumber, this._currentToken);\r\n    }\r\n      \r\n    return [(imm & 0xff) >>> 0, shift];\r\n  }\r\n\r\n  /**\r\n   * This checks a very specific edge case where a rotated immediate value is halfway through rolling round\r\n   * the corner of the word. For example: 0xf000000f, where the valid 8-bit number 0xff has been rotated\r\n   * by the equally valid value 4, but the immediate representation is disallowed because the distance\r\n   * between the maximum set-bit (31) and the minimum set-bit (0) is greater than 8.\r\n   * \r\n   * @param imm \r\n   * @param bits \r\n   */\r\n  isValidRolledCorner(token: Token, imm: number, bits: number): boolean | [number, number] {\r\n    const bottomBits = (imm & 0xff) >>> 0;\r\n    const correctiveRotation = Math.ceil((fls(bottomBits) + 1) / 2) * 2;\r\n\r\n    const testImm = rotr((imm >>> 0), correctiveRotation);\r\n    const bottombit: number = ffs(testImm);\r\n    const topbit: number = fls(testImm);\r\n\r\n    // catches cases where the rolled corner number cannot be represented within the target bit width\r\n    if ((topbit - bottombit) > bits - 1) {\r\n      throw new NumericalError(\r\n        `IMMEDIATE value '${token.content}' (decimal ${imm}) cannot be implicitly represented with a maximum set-bit width of ${bits}.`, \r\n        this._statement, \r\n        this._lineNumber, \r\n        this._currentToken\r\n      );\r\n    }\r\n\r\n    // catches cases where the rolled corner CAN be represented within the target bit width\r\n    // BUT rotating by an even number forces the top bit out of the 8 bit range into the 9th bit\r\n    if (bottombit <= 23) {\r\n      throw new NumericalError(\r\n        `IMMEDIATE value '${token.content} (decimal ${imm}) cannot be implicitly represented within 8 bits with the restriction that it is rotated an even number of times.\\n\\nThis is a complicated edge-case of the barrel shifter, well done for discovering it. If you would like to learn more, I suggest researching the rules of the barrel shifter yourself. The ARMv7-A reference manual should contain everything you need.`, \r\n        this._statement, \r\n        this._lineNumber, \r\n        this._currentToken\r\n      );\r\n    }\r\n\r\n    /**\r\n     * return [imm, shift] where\r\n     *    imm is the corrected immediate expressed as an 8 bit number\r\n     *    shift is the smallest even rotation to move the immediate into the first 8 bits of the word\r\n     */\r\n    return [\r\n      (rotr(testImm, 24) & 0xff) >>> 0, \r\n      8 - correctiveRotation\r\n    ];\r\n  }\r\n\r\n}","import { Condition, operations } from '@/constants';\r\nimport { Token } from 'prismjs';\r\nimport { SyntaxNode } from \"./SyntaxNode\";\r\nimport { TAssembled, TOperation } from './types';\r\n\r\n/** Ancestor class for all instruction-type syntax nodes (Bi/TriOperandNode etc.) */\r\nexport abstract class InstructionNode extends SyntaxNode {\r\n  protected abstract _op: TOperation;\r\n  protected abstract _cond: Condition;\r\n  protected abstract _setFlags: boolean;\r\n\r\n  // getters\r\n  get op(): TOperation { return this._op; }\r\n  get cond(): Condition { return this._cond; }\r\n  get setFlags(): boolean { return this._setFlags; }\r\n  get text(): string { \r\n    return this.statement\r\n      .map(e => e.content)\r\n      .join(\" \")\r\n      .replaceAll(/( (,|!|}|\\]))|(({|\\[|-) )/g, (match) => match.trim()); \r\n    }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @returns \r\n   */\r\n  protected splitOpCode(token: Token): [string, string, string] {\r\n    let operation: string = \"\";\r\n    let modifier: string = \"\";\r\n    let condition: string = \"\";\r\n\r\n    const forceFlags: string[] = [ \"cmp\", \"cmn\", \"tst\", \"teq\" ];\r\n\r\n    operation = operations.find(e => (token.content as string).slice(0, e.length) === e) ?? \"\";\r\n\r\n    let suffix: string = (token.content as string).substring(operation.length);\r\n    if (suffix.length === 1 || suffix.length === 3) {\r\n      modifier = suffix[0];\r\n      suffix = suffix.substring(1);\r\n    }\r\n    condition = suffix;\r\n\r\n    if (forceFlags.includes(operation)) modifier = \"s\";\r\n\r\n    return [operation, modifier, condition];\r\n  }\r\n\r\n  assemble(): TAssembled {\r\n    return {\r\n      bitcode: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n      explanation: [{\r\n        title: \"Unsupported Instruction\",\r\n        subtitle: \"Cannot assemble this instruction\",\r\n        detail: \"The assembler is currently work-in-progress. Support for this instruction type is coming soon.\",\r\n        range: 32\r\n      }]\r\n    }\r\n  }\r\n}","import { Directive, directiveMap, Call, callMap } from \"@/constants\";\r\nimport { Token } from \"prismjs\";\r\nimport { SyntaxError } from \"../interpreter/error\";\r\nimport { SyntaxNode } from \"./SyntaxNode\";\r\n\r\nexport class DirectiveNode extends SyntaxNode {\r\n  private _directive: Directive;\r\n  private _identifier?: string;\r\n  private _call?: Call;\r\n  private _value?: number;\r\n\r\n  get directive() : Directive { return this._directive; }\r\n  get isText() : boolean { return this._directive === Directive.TEXT; }\r\n  get isData() : boolean { return this._directive === Directive.DATA; }\r\n  // get isGlobal() : boolean { return this.directive === Directive.GLOBAL; }\r\n  get isExtern() : boolean { return this._directive === Directive.EXTERN; }\r\n  \r\n\r\n  get identifier() : string { return this._identifier!; }\r\n  get call() : Call { return this._call!; }\r\n  get value() : number { return this._value!; }\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    if (directiveMap[this.peekToken().content as string] === undefined) {\r\n      throw new SyntaxError(`Unrecognised directive '${this.peekToken().content}'.`, statement, lineNumber, currentToken);\r\n    }\r\n\r\n    this._directive = directiveMap[this.nextToken().content as string];\r\n\r\n    // .text and .data directives omitted since they have no additional params\r\n    switch (this._directive) {\r\n      case Directive.EXTERN:\r\n        this.parseExtern();\r\n        break;\r\n      case Directive.BALIGN:\r\n        this.parseBalign();\r\n        break;\r\n    }\r\n\r\n    // if (this._directive === Directive.EXTERN) {\r\n    //   this.parseExtern()\r\n    // }\r\n    \r\n    \r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid section declaration end.`, statement, lineNumber, currentToken + 1);\r\n  }\r\n\r\n  private parseExtern() {\r\n    if (callMap[this.peekToken().content as string] === undefined) {\r\n      throw new SyntaxError(`\r\n        Expected a recognised external C function call identifier - received '${this.peekToken().type}' ${this.peekToken().content}' instead. \r\n        As of now, only [${Object.keys(callMap).join(', ')}] are supported.`, \r\n        this.statement, \r\n        this.lineNumber, \r\n        this.currentToken\r\n      );\r\n    }\r\n\r\n    this._identifier = this.nextToken().content as string;\r\n    this._call = callMap[this._identifier];\r\n  }\r\n\r\n  private parseBalign() {\r\n    const size = this.parseNum(this.nextToken());\r\n    this._value = size;\r\n  }\r\n}","import { bitset } from \"@/assets/bitset\";\r\nimport { DataType, dataTypeBufferConstructorMap, dataTypeMap, dataTypeBitSizeMap, dataTypeByteSizeMap } from '@/constants';\r\nimport { Token } from \"prismjs\";\r\nimport { SyntaxError } from \"../interpreter/error\";\r\nimport { SyntaxNode } from \"./SyntaxNode\";\r\nimport { tokens } from \"@/constants/tokens\";\r\n\r\nexport class AllocationNode extends SyntaxNode {\r\n  protected _identifier: string;\r\n  protected _data: ArrayBuffer;\r\n\r\n  protected _type: DataType;\r\n  private _specificType!: string;\r\n\r\n  get identifier() : string { return this._identifier; }\r\n  get data() : Uint8Array { return new Uint8Array(this._data); }\r\n  get type() : string { return this._specificType; }\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    this._identifier = (this.nextToken().content as string).slice(0, -1);\r\n    this._type = dataTypeMap[this.peekToken().content as string];\r\n    this._specificType = this.nextToken().content as string;\r\n\r\n    this._data = this.parseData();\r\n\r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid data declaration end.`, statement, lineNumber, currentToken);\r\n  }\r\n\r\n  parseData() : ArrayBuffer {\r\n    if (this._specificType === \".asciz\") return this.parseString(this.nextToken());\r\n    if (this._specificType === \".byte\") return this.parseIntArray(DataType.BYTE);\r\n    if (this._specificType === \".hword\") return this.parseIntArray(DataType.HWORD);\r\n    if (this._specificType === \".word\") return this.parseIntArray(DataType.WORD);\r\n    if (this._specificType === \".skip\") return this.parseSkip(this.nextToken());\r\n\r\n    throw new SyntaxError(`Unrecognised data type '${this._specificType}'.`, this.statement, this.lineNumber, this._currentToken - 1)\r\n  }\r\n\r\n  parseString(token: Token) : Uint8Array {\r\n    if (token.type !== \"string\") {\r\n      throw SyntaxError.badToken(tokens.string, token, this._statement, this._lineNumber, this._currentToken);\r\n    }\r\n\r\n    const string = (token.content as string).slice(1, -1);    // slice off quotes\r\n    const withEscapes = JSON.parse(`\"${string}\"`);\r\n    const data = new Uint8Array(new ArrayBuffer(withEscapes.length + 1));\r\n\r\n    for (let i = 0; i < string.length; i++) data[i] = withEscapes.charCodeAt(i);\r\n\r\n    return data;\r\n  }\r\n\r\n  parseIntArray(size: DataType) : ArrayBuffer {\r\n    const ints: number[] = [this.parseSignedInt()];\r\n\r\n    while (this.hasToken()) {\r\n      this.parseComma(this.nextToken());\r\n      ints.push(this.parseSignedInt());\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(ints.length * dataTypeByteSizeMap[size]);\r\n    const data = new dataTypeBufferConstructorMap[size](buffer);\r\n    ints.forEach((e, i) => data[i] = e);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  parseSignedInt() : number {\r\n    let isNegative = false;\r\n\r\n    let next = this.peekToken();\r\n    if (next.type === tokens.sign && next.alias === \"minus\") {\r\n      isNegative = true;\r\n      this.nextToken();\r\n    }\r\n\r\n    let number = this.parseNum(this.nextToken());\r\n    return isNegative ? -number : number;\r\n  }\r\n\r\n  parseSkip(token: Token) : Uint8Array {\r\n    const length = this.parseNum(token);\r\n    \r\n    return new Uint8Array(new ArrayBuffer(length));\r\n  }\r\n}","import { OperandType, Register, regTitle, Shift, shiftMap, shiftTitle } from '@/constants';\r\nimport { Token } from 'prismjs';\r\nimport { AssemblyError, SyntaxError } from '../interpreter/error';\r\nimport { SyntaxNode } from \"./SyntaxNode\";\r\nimport { IExplanation, TRegOrImm } from './types';\r\n\r\nexport class FlexOperand extends SyntaxNode {\r\n  protected _Rm: TRegOrImm;\r\n  protected _Rs: TRegOrImm | undefined;\r\n  protected _shift: Shift | undefined;\r\n  protected _immShift: number = 0;\r\n\r\n  protected _type: OperandType | undefined;\r\n  protected _shiftType: OperandType | undefined;\r\n\r\n  get isReg() { return this._type === OperandType.REGISTER; }\r\n  get isImm() { return this._type === OperandType.IMMEDIATE; }\r\n  get shifted() { return this._Rs !== undefined; }\r\n  get shiftedByReg() { return this._shiftType === OperandType.REGISTER; }\r\n  get shiftedByImm() { return this._shiftType === OperandType.IMMEDIATE; }\r\n  get shift() { return this._shift; }\r\n  get immShift() { return this._immShift; }\r\n\r\n  /**\r\n   * \r\n   * @param statement \r\n   * @param lineNumber \r\n   * @param currentToken \r\n   */\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    // this.parseComma(this.nextToken());\r\n    const [value, type] = this.parseRegOrImm();      // parse immediate with default 8 bits (with extended 4 bit shift)\r\n    this._Rm = value;\r\n    this._type = type;\r\n\r\n    if (this.isReg && this.hasToken()) this.parseShift();\r\n\r\n    // if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken + 1);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param immBits \r\n   * @returns \r\n   */\r\n  parseRegOrImm(immBits: number = 8): [Register | number, OperandType] {\r\n    let flex: Register | number | undefined;\r\n    let type: OperandType | undefined;\r\n\r\n    try { \r\n      flex = this.parseReg(this.peekToken()); \r\n      type = OperandType.REGISTER\r\n    }\r\n    catch (e) { if (!(e instanceof SyntaxError)) throw e }  // rethrow if not syntax error\r\n\r\n    if (flex === undefined) {\r\n      try { \r\n        if (immBits == 8) {\r\n          const [imm, shift] = this.parseShiftedImm(this.peekToken(), immBits);\r\n          flex = imm;\r\n          this._immShift = shift\r\n        }\r\n        else flex = this.parseImm(this.peekToken(), immBits);\r\n\r\n        type = OperandType.IMMEDIATE;\r\n      }\r\n      catch (e) { if (!(e instanceof SyntaxError)) throw e }  // rethrow if not syntax error\r\n    }\r\n\r\n    if (flex === undefined || type === undefined) \r\n      throw new SyntaxError(`Expected either REGISTER or IMMEDIATE value - received ${this.peekToken().type.toUpperCase()} '${this.peekToken().content}' instead.`, this._statement, this._lineNumber, this._currentToken); \r\n\r\n    this.nextToken();   // advance to the next token as parse attempts only peeked\r\n\r\n    return [flex, type];\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  parseShift() {\r\n    this.parseComma(this.nextToken());\r\n    if (this.peekToken().type === \"shift\") {\r\n      this._shift = shiftMap[this.nextToken().content as string]\r\n    }\r\n    else throw new SyntaxError(`The comma after the final operand indicates an optional shift, but no shift was found.`, this._statement, this._lineNumber, this._currentToken);\r\n    \r\n    const [value, type] = this.parseRegOrImm(5);     // parse immediate with a max length of 5 bits\r\n    this._Rs = value;\r\n    this._shiftType = type;\r\n  }\r\n\r\n  unpack(): [TRegOrImm, Shift | undefined, TRegOrImm | undefined, number] {\r\n    return [ \r\n      this._Rm, \r\n      this._shift, \r\n      this._Rs, \r\n      this._immShift \r\n    ];\r\n  }\r\n\r\n  assemble(): [number, IExplanation[]] {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n\r\n    const [Rm, shift, Rs, immShift] = this.unpack();\r\n    if (this.isImm) {                                                                          // operand is immediate\r\n      instruction = (instruction << 4) | (immShift / 2);\r\n      explanation.push({\r\n        title: \"Barrel Shifter\", \r\n        subtitle: (immShift == 0 ? \"Not Shifted\" : `Rotated Right By ${immShift}`), \r\n        detail: \"The amount by which the eight bit immediate value is rotated right, divided by two.\", \r\n        range: 4\r\n      });\r\n      \r\n      instruction = (instruction << 8) | Rm;\r\n      explanation.push({\r\n        title: \"Immediate\", \r\n        subtitle: `Value ${Rm}`, \r\n        detail: \"An eight bit immediate value. This value, along with the barrel shift, forms the second operand.\", \r\n        range: 8\r\n      });\r\n    }\r\n    else if (this.isReg) {                                                                     // operand is register\r\n      if (this.shifted) {                                                                      // operand is  optionally shifted\r\n        if (this.shiftedByReg) {                                                               // shifted by register\r\n          instruction = (instruction << 4) | Rs!;\r\n          explanation.push({\r\n            title: \"Optional Shift Amount\", \r\n            subtitle: regTitle[Rs as Register], \r\n            detail: \"Shift by the value in \" + regTitle[Rs as Register] + \".\", \r\n            range: 4\r\n          });\r\n\r\n          instruction <<= 1;                                             // 3 because extra 0 of unused space for register shifts\r\n          explanation.push({\r\n            title: \"Unused Bit\",\r\n            subtitle: \"\",\r\n            detail: \"This bit is left unset because identifying the optional shift register only requires four bits.\", \r\n            range: 1\r\n          });\r\n\r\n          instruction = (instruction << 2) | shift!;                                             // 3 because extra 0 of unused space for register shifts\r\n          explanation.push({\r\n            title: \"Optional Shift Operation\", \r\n            subtitle: shiftTitle[shift as Shift], \r\n            detail: \"The type of shift to perform on the flexible operand.\", \r\n            range: 2\r\n          });\r\n\r\n          instruction = (instruction << 1) | 1;\r\n          explanation.push({\r\n            title: \"Optional Shift Type\", \r\n            subtitle: \"Register\", \r\n            detail: \"The flexible operand is optionally shifted by a register value.\", \r\n            range: 1\r\n          });\r\n        }\r\n        else if (this.shiftedByImm) {                                                          // shifted by immediate\r\n          instruction = (instruction << 5) | Rs!;\r\n          explanation.push({\r\n            title: \"Optional Shift Amount\", \r\n            subtitle: `Immediate ${Rs}`, \r\n            detail: `Shift by the provided five bit immediate value (${Rs}).`, \r\n            range: 5\r\n          });\r\n\r\n          instruction = ((instruction << 2) | shift!) << 1;\r\n          explanation.push({\r\n            title: \"Optional Shift Operation\", \r\n            subtitle: shiftTitle[shift as Shift], \r\n            detail: \"The type of shift to perform on the flexible operand.\", \r\n            range: 2\r\n          });\r\n\r\n          explanation.push({\r\n            title: \"Optional Shift Type\", \r\n            subtitle: \"Immediate\", \r\n            detail: \"The flexible operand is optionally shifted by an immediate value.\", \r\n            range: 1\r\n          });\r\n        }\r\n        else throw new AssemblyError(\"Optional shift operand Rs is neither a REGISTER nor IMMEDIATE value. Most likely a parser bug.\", this._statement, this._lineNumber, -1);\r\n      }\r\n      else {                                                                                      // operand is not optionally shifted\r\n        instruction <<= 8;\r\n        explanation.push({\r\n          title: \"No Optional Shift\", \r\n          subtitle: \"N/A\", \r\n          detail: \"The flexible operand is not optionally shifted.\", \r\n          range: 8\r\n        });\r\n      }\r\n\r\n      instruction = (instruction << 4) | Rm;\r\n      explanation.push({\r\n        title: \"Flexible Operand\", \r\n        subtitle: regTitle[Rm as Register], \r\n        detail: \"This operand has special properties in ARMv7. It can be either an immediate value or an optionally shifted register.\", \r\n        range: 4\r\n      });\r\n    }\r\n    else throw new AssemblyError(\"Source operand Rm is neither a REGISTER nor IMMEDIATE value. This is most likely a parser bug.\", this._statement, this._lineNumber, -1);\r\n\r\n    return [ instruction, explanation ];\r\n  }\r\n}","import { Condition, TTransfer, readWriteGroup } from '@/constants';\r\nimport { InstructionNode } from '../InstructionNode';\r\nimport { TBranchAddress } from '../types';\r\nimport { TByteRange } from './types';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport abstract class TransferNode extends InstructionNode {\r\n  protected abstract _op: TTransfer;\r\n  protected abstract _cond: Condition;\r\n  protected abstract _Rn: TBranchAddress | undefined;\r\n  // protected abstract _addressMode: TAddressMode | undefined;\r\n\r\n  protected  _setFlags: boolean = false;\r\n  protected _updating: boolean = false;\r\n\r\n  // get transferSize() : TTransferSize { return this._transferSize; }\r\n  get isUpdating() : boolean { return this._updating; }\r\n  get isRead() : boolean { return readWriteGroup.read.includes(this._op); }\r\n}","import { bitset } from '@/assets/bitset';\r\nimport { condExplain, Condition, condMap, condTitle, Register, regTitle, SingleTransfer, TAddressMode, transferMap, TSign, TTransferSize } from '@/constants';\r\nimport { Interpreter } from '@/interpreter';\r\nimport { ReferenceError, SyntaxError } from '@/interpreter/error';\r\nimport { Token } from 'prismjs';\r\nimport { FlexOperand } from '../FlexOperand';\r\nimport { IExplanation, TAssembled, TBranchAddress } from '../types';\r\nimport { TransferNode } from './TransferNode';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport class SingleTransferNode extends TransferNode {\r\n  protected _op: SingleTransfer;\r\n  protected _cond: Condition;\r\n  protected _setFlags: boolean = false;\r\n  protected _transferSize: TTransferSize;\r\n  protected _Rd: Register;\r\n  protected _Rn!: TBranchAddress;\r\n  protected _sign: TSign = \"+\";\r\n  protected _flex!: FlexOperand;\r\n  protected _addressMode: TAddressMode = \"pre\";\r\n  protected _updating: boolean = false;\r\n\r\n  get transferSize() : TTransferSize { return this._transferSize; }\r\n  get isReg() : boolean { return typeof this._Rn === 'number'; }\r\n  get isLiteral() : boolean { return typeof this._Rn === 'string'; }\r\n  get literal() : string { \r\n    if (!this.isLiteral) throw new ReferenceError(\"Tried to access reference where there was none. Contact the developer at contact@polysoftit.co.uk.\", this.statement, this.lineNumber, -1);\r\n    return this._Rn as string;\r\n  }\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, modifier, condition] = this.splitOpCode(this.nextToken());\r\n    this._op = transferMap[operation] as SingleTransfer;\r\n    this._transferSize = modifier.length === 0 ? \"word\" : \"byte\";\r\n    this._cond = condMap[condition];\r\n\r\n    this._Rd = this.parseReg(this.nextToken());\r\n    this.parseComma(this.nextToken());\r\n\r\n    this.parseAddressOrLabel();\r\n\r\n\r\n    // if (this.isLiteral) {\r\n    if (this.hasToken()) {\r\n      throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken + 1);\r\n    }\r\n    // }\r\n    \r\n  }\r\n\r\n  parseAddressOrLabel() {\r\n    if (this.peekToken().type === \"data-label\") {\r\n      this._Rn = (this.nextToken().content as string).slice(1);\r\n    }\r\n    else if (this.peekToken().type === \"indexer\") {\r\n      this.parseAddressExpr();\r\n    }\r\n\r\n    else throw new SyntaxError(`Expected either ADDRESS EXPRESSION or =LABEL value - received '${this.peekToken().type}' ${this.peekToken().content}' instead.`, this._statement, this._lineNumber, this._currentToken);\r\n  }\r\n\r\n  parseAddressExpr() {\r\n    this.parseIndexer(this.nextToken(), \"start\");\r\n    this._Rn = this.parseReg(this.nextToken());\r\n    \r\n    try { \r\n      this.parseIndexer(this.peekToken(), \"end\");\r\n\r\n      this._addressMode = \"post\"; \r\n      this._updating = true;\r\n\r\n      this.nextToken();\r\n    }\r\n    catch (e) { \r\n      if (!(e instanceof SyntaxError)) throw e;   // rethrow if not syntax error\r\n    }  \r\n\r\n    let comma = false;\r\n    try {\r\n      this.parseComma(this.nextToken());\r\n      comma = true;\r\n\r\n      this.peekToken();\r\n      if (this.peekToken().type === \"sign\") {\r\n        const sign = this.nextToken();\r\n        this._sign = sign.content as TSign;\r\n      }\r\n\r\n      if (this._addressMode === \"pre\") {\r\n        const endIndexerIndex = this.findEndIndexer();\r\n        this._flex = new FlexOperand(this.statement.slice(0, endIndexerIndex), this.lineNumber, this._currentToken);      // parsing delegated to FlexOperand constructor\r\n      }\r\n      else {\r\n        this._flex = new FlexOperand(this.statement, this.lineNumber, this._currentToken);      // parsing delegated to FlexOperand constructor\r\n      }\r\n      this._currentToken = this._flex.currentToken;\r\n    }\r\n    catch (e) { \r\n      if (comma) throw e;\r\n      if (!(e instanceof SyntaxError)) throw e;\r\n    }\r\n    \r\n    if (this._addressMode === \"post\") {\r\n      if (this.hasToken()) {\r\n        throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken + 1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.parseIndexer(this.nextToken(), \"end\");\r\n    this._addressMode = \"pre\";\r\n    \r\n    if (this.hasToken()) {\r\n      if (this.peekToken().type === \"updating\") {\r\n        this._updating = true;\r\n      }\r\n      else throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken);\r\n    \r\n      this.nextToken();\r\n    }\r\n  }\r\n\r\n  findEndIndexer(): number {\r\n    let index = this._currentToken + 1;\r\n    let token = this.getToken(index);\r\n    for (;;) {\r\n      try {\r\n        this.parseIndexer(token, \"end\");\r\n        return index;\r\n      }\r\n      catch (e) {\r\n        token = this.getToken(++index);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseIndexer(token: Token, alias: string) {\r\n    if (token.type !== \"indexer\") {\r\n      throw new SyntaxError(`Expected '[' or ']' to bound addressing syntax - received '${token.content}' instead.`, this.statement, this.lineNumber, this._currentToken);\r\n    }\r\n\r\n    if (token.alias !== alias) {\r\n      throw new SyntaxError(`Incorrect square bracket orientation - received '${token.content}'.`, this.statement, this.lineNumber, this._currentToken);\r\n    }\r\n  }\r\n\r\n  unpack() : [SingleTransfer, Condition, TTransferSize, Register, TBranchAddress, TSign | undefined, FlexOperand | undefined, TAddressMode | undefined, boolean] {\r\n    return [\r\n      this._op,\r\n      this._cond,\r\n      this._transferSize,\r\n      this._Rd, \r\n      this._Rn,\r\n      this._sign,\r\n      this._flex,\r\n      this._addressMode,\r\n      this._updating\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * TODO: implement for explanation section\r\n   */\r\n  assemble(): TAssembled {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n    const labelOffset = this.isLiteral ? Interpreter.generateLabelOffset(this.literal, this) : 0;\r\n\r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n\r\n    instruction = (instruction << 2) | 1;     // push 01 onto the machine code\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Single Transfer\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 2\r\n    });\r\n    \r\n    const immBit = +!(this._flex?.isImm ?? this.isLiteral);        // negated unary operator (0 if boolean is true)\r\n    instruction = (instruction << 1) | immBit;\r\n    explanation.push({\r\n      title: \"FlexOperand Type\", \r\n      subtitle: immBit ? \"Register\" : \"Immediate\", \r\n      detail: \"Tells the processor if the flexible operand is an immediate value (0) or a register (1).\", \r\n      range: 1\r\n    });\r\n\r\n    const addressBit = this._addressMode === \"pre\" ? 1 : 0;         \r\n    instruction = (instruction << 1) | addressBit;\r\n    explanation.push({\r\n      title: \"Pre/Post Indexing Bit\", \r\n      subtitle: addressBit ? \"Pre-indexed addressing\" : \"Post-indexed addressing\", \r\n      detail: \"Tells the processor to use pre- (1) or post-index addressing mode for the transfer.\", \r\n      range: 1\r\n    });\r\n\r\n    let isUp = this._sign === \"+\";\r\n    if (this.isLiteral) isUp = labelOffset > 0;\r\n\r\n    const upDownBit = +isUp;         \r\n    instruction = (instruction << 1) | upDownBit;\r\n    explanation.push({\r\n      title: \"Up/Down Bit\", \r\n      subtitle: upDownBit ? \"Up\" : \"Down\", \r\n      detail: \"Tells the processor to add (up, 1) or subtract (down, 0) the offset from the base register.\", \r\n      range: 1\r\n    });\r\n    \r\n    const sizeBit = this._transferSize === \"byte\" ? 1 : 0;         \r\n    instruction = (instruction << 1) | sizeBit;\r\n    explanation.push({\r\n      title: \"Byte/Word Bit\", \r\n      subtitle: sizeBit ? \"Byte\" : \"Word\", \r\n      detail: \"Tells the processor to index memory by bytes (1) or words (0).\", \r\n      range: 1\r\n    });\r\n\r\n    const writeBackBit = +this._updating;         \r\n    instruction = (instruction << 1) | writeBackBit;\r\n    explanation.push({\r\n      title: \"Write-back Bit\", \r\n      subtitle: writeBackBit ? \"Updating\" : \"Not updating\", \r\n      detail: \"Tells the processor whether (1) or not (0) to update the base register after transferring the data.\", \r\n      range: 1\r\n    });\r\n\r\n    const loadStoreBit = this._op === SingleTransfer.LDR ? 1 : 0;         \r\n    instruction = (instruction << 1) | loadStoreBit;\r\n    explanation.push({\r\n      title: \"Load/Store Bit\", \r\n      subtitle: loadStoreBit ? \"Load\" : \"Store\", \r\n      detail: \"Tells the processor whether we are loading (1) or storing (0) data from/to memory.\", \r\n      range: 1\r\n    });\r\n\r\n    if (this.isReg) {\r\n      instruction = (instruction << 4) | this._Rn as Register;\r\n      explanation.push({\r\n        title: \"Second Operand\", \r\n        subtitle: regTitle[this._Rn as Register], \r\n        detail: \"The second operand in a transfer instruction is often referred to as the 'base' register.\", \r\n        range: 4\r\n      });\r\n\r\n      instruction = (instruction << 4) | this._Rd;\r\n      explanation.push({\r\n        title: \"First Operand\", \r\n        subtitle: regTitle[this._Rd], \r\n        detail: \"The first operand is often referred to as the 'destination' register.\", \r\n        range: 4\r\n      });\r\n\r\n      if (this._flex) {\r\n        const [flexInstruction, flexExplanation] = this._flex.assemble();\r\n        instruction = (instruction << 12) | flexInstruction;\r\n        Array.prototype.push.apply(explanation, flexExplanation);\r\n      }\r\n      else  {\r\n        instruction <<= 12;\r\n        explanation.push({\r\n          title: \"Flex Operand\", \r\n          subtitle: \"No offset\", \r\n          detail: \"These bits are left unset because the base address has not been offset in any way.\", \r\n          range: 12\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      instruction = (instruction << 4) | Register.PC;\r\n      explanation.push({\r\n        title: \"Second Operand\", \r\n        subtitle: regTitle[Register.PC], \r\n        detail: \"The second operand is often referred to as a 'source' register.\", \r\n        range: 4\r\n      });\r\n\r\n      instruction = (instruction << 4) | this._Rd;\r\n      explanation.push({\r\n        title: \"First Operand\", \r\n        subtitle: regTitle[this._Rd], \r\n        detail: \"The first operand is often referred to as the 'destination' register.\", \r\n        range: 4\r\n      });\r\n\r\n      // empty barrel shifter - could try to reference more distance addresses \r\n      instruction = (instruction << 4); \r\n      explanation.push({\r\n        title: \"Barrel Shifter\", \r\n        // subtitle: (immShift == 0 ? \"Not Shifted\" : `Rotated Right By ${immShift}`), \r\n        subtitle: \"Not shifted\",\r\n        detail: \"The amount by which the eight bit immediate value is rotated right.\", \r\n        range: 4\r\n      });\r\n      \r\n      instruction = (instruction << 8) | Math.abs(labelOffset);\r\n      explanation.push({\r\n        title: \"Immediate\", \r\n        subtitle: `Value ${labelOffset}`, \r\n        detail: \"An eight bit immediate value. This value, along with the barrel shift, forms the second operand.\", \r\n        range: 8\r\n      });\r\n    }\r\n\r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n}","import { bitset } from '@/assets/bitset';\r\nimport { addressModeGroup, BlockAddressMode, blockAddressModeMap, BlockTransfer, blockTransferOperations, condExplain, Condition, condMap, condTitle, Register, regShortTitle, regTitle, transferMap } from '@/constants';\r\nimport { SyntaxError } from '@/interpreter/error';\r\nimport { Token } from 'prismjs';\r\nimport { IExplanation, TAssembled } from '../types';\r\nimport { TransferNode } from './TransferNode';\r\nimport { TByteRange } from './types';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport class BlockTransferNode extends TransferNode {\r\n  protected _op: BlockTransfer;\r\n  protected _cond: Condition;\r\n  protected _addressMode: BlockAddressMode = BlockAddressMode.IA;\r\n  protected _Rn!: Register;\r\n  protected _Rlist: Register[] = [];\r\n  protected _updating: boolean = false;\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, condition, addressMode, pushPop] = this.splitBlockOpCode(this.nextToken());\r\n    this._op = transferMap[operation] as BlockTransfer;\r\n    this._cond = condMap[condition];\r\n    this._addressMode = blockAddressModeMap[addressMode];\r\n\r\n    if (pushPop) this.parsePushPop();\r\n    else this.parseBaseReg();\r\n\r\n    this.parseRegList();\r\n\r\n    if (this.hasToken()) {\r\n      throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @returns \r\n   */\r\n  splitBlockOpCode(token: Token) : [string, string, string, boolean] {\r\n    let operation: string = \"\";\r\n    let addressMode: string = \"\";\r\n    let condition: string = \"\";\r\n\r\n    const op = blockTransferOperations.find(e => (token.content as string).slice(0, e.length) === e) ?? \"\";\r\n    let suffix: string = (token.content as string).substring(op.length);\r\n\r\n    switch (op) {\r\n      case \"push\":\r\n        return [\"stm\", suffix, \"db\", true];\r\n      case \"pop\":\r\n        return [\"ldm\", suffix, \"ia\", true];\r\n      default:\r\n        operation = op;\r\n    }\r\n    \r\n    if (suffix.length === 4) {\r\n      condition = suffix.substring(0, 2);\r\n      suffix = suffix.substring(2);\r\n    }\r\n    addressMode = suffix;\r\n\r\n    return [operation, condition, addressMode, false];\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  parseBaseReg() : void {\r\n    this._Rn = this.parseReg(this.nextToken());\r\n\r\n    if (this.peekToken().type === \"updating\") {\r\n      this._updating = true;\r\n      this.nextToken();\r\n    }\r\n\r\n    this.parseComma(this.nextToken());\r\n  }\r\n\r\n  parsePushPop() : void {\r\n    this._Rn = Register.SP;\r\n    this._updating = true;\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  parseRegList() : void {\r\n    this.parseBrace(this.nextToken(), 'start');\r\n\r\n    const subStatement = this._statement.slice(this._currentToken);\r\n    let index = 0;\r\n    for (;;) {\r\n      try {\r\n        this._Rlist.push(this.parseReg(subStatement[index++]));\r\n      }\r\n      catch (e) {\r\n        if (e instanceof SyntaxError) {\r\n          // correct token index and rethrow\r\n          e.tokenIndex += index;\r\n          throw e;\r\n        }\r\n      }\r\n\r\n      try {\r\n        this.parseComma(subStatement[index]);\r\n        index++;\r\n      }\r\n      catch (e) {\r\n        if (e instanceof SyntaxError || subStatement[index] === undefined) break;\r\n        throw e;\r\n        \r\n      }\r\n    }\r\n\r\n    // sort register list into ascending order\r\n    this._Rlist.sort((a: number, b: number) => a - b);\r\n    \r\n    this._currentToken += index;\r\n    this.parseBrace(this.nextToken(), 'end');\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param token \r\n   * @param alias \r\n   */\r\n  parseBrace(token: Token, alias: string) {\r\n    if (token.type !== \"reg-list\") {\r\n      throw new SyntaxError(`Expected '{' or '}' to bound register list syntax - received '${token.content}' instead.`, this.statement, this.lineNumber, this._currentToken);\r\n    }\r\n\r\n    if (token.alias !== alias) {\r\n      throw new SyntaxError(`Incorrect brace orientation - received '${token.content}'.`, this.statement, this.lineNumber, this._currentToken);\r\n    }\r\n  }\r\n\r\n  unpack() : [BlockTransfer, Condition, Register, Register[], BlockAddressMode, boolean] {\r\n    return [\r\n      this._op,\r\n      this._cond, \r\n      this._Rn, \r\n      this._Rlist, \r\n      this._addressMode, \r\n      this._updating\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * TODO: implement for explanation section\r\n   */\r\n  assemble(): TAssembled {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n\r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n\r\n    instruction = (instruction << 3) | 4;     // push 01 onto the machine code\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Block Transfer\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 3\r\n    });\r\n\r\n    const addressBit = addressModeGroup.before.includes(this._addressMode) ? 1 : 0;   \r\n    instruction = (instruction << 1) | addressBit;\r\n    explanation.push({\r\n      title: \"Pre/Post Indexing Bit\", \r\n      subtitle: addressBit ? \"Pre-indexed addressing\" : \"Post-indexed addressing\", \r\n      detail: \"Tells the processor to use pre- (1) or post- (0) indexed addressing mode for the transfer.\", \r\n      range: 1\r\n    });\r\n\r\n    const upDownBit = addressModeGroup.increment.includes(this._addressMode) ? 1 : 0;         \r\n    instruction = (instruction << 1) | upDownBit;\r\n    explanation.push({\r\n      title: \"Up/Down Bit\", \r\n      subtitle: upDownBit ? \"Up\" : \"Down\", \r\n      detail: \"Tells the processor to add (up, 1) or subtract (down, 0) the offset from the base register.\", \r\n      range: 1\r\n    });\r\n\r\n    const sBit = 0;\r\n    instruction = (instruction << 1) | sBit;\r\n    explanation.push({\r\n      title: \"PSR & Force User Bit\", \r\n      subtitle: \"Do not load PSR or force user mode\", \r\n      // TODO: add html functionality to description to add link\r\n      detail: \"If you would like to learn more about this bit, go to https://iitd-plos.github.io/col718/ref/arm-instructionset.pdf\", \r\n      range: 1\r\n    });\r\n\r\n    const writeBackBit = +this._updating;         \r\n    instruction = (instruction << 1) | writeBackBit;\r\n    explanation.push({\r\n      title: \"Write-back Bit\", \r\n      subtitle: writeBackBit ? \"Updating\" : \"Not updating\", \r\n      detail: \"Tells the processor whether (1) or not (0) to update the base register after transferring the data.\", \r\n      range: 1\r\n    });\r\n\r\n    const loadStoreBit = this._op === BlockTransfer.LDM ? 1 : 0;         \r\n    instruction = (instruction << 1) | loadStoreBit;\r\n    explanation.push({\r\n      title: \"Load/Store Bit\", \r\n      subtitle: loadStoreBit ? \"Load\" : \"Store\", \r\n      detail: \"Tells the processor whether we are loading (1) or storing (0) data from/to memory.\", \r\n      range: 1\r\n    });\r\n\r\n    instruction = (instruction << 4) | this._Rn as Register;\r\n    explanation.push({\r\n      title: \"First Operand\", \r\n      subtitle: regTitle[this._Rn as Register], \r\n      detail: \"The first operand in a transfer instruction is often referred to as the 'base' register.\", \r\n      range: 4\r\n    });\r\n\r\n    const registers = Object.values(Register).filter((v) => !isNaN(Number(v)));\r\n    registers.forEach(reg => {\r\n      const include = this._Rlist.includes(reg as Register) ? 1 : 0;\r\n      instruction = (instruction << 1) | include;\r\n    });\r\n\r\n    explanation.push({\r\n      title: \"Register List\", \r\n      subtitle: this._Rlist.map(reg => regShortTitle[reg]).join(\", \"), \r\n      detail: `This section is made up of 16 bits, each referring to one of the registers r0 -> pc arranged in order from left to right. A set bit indicates that the register should be included in the transfer.`, \r\n      range: 16\r\n    });\r\n\r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n}","import { bitset } from '@/assets/bitset';\r\nimport { condExplain, Condition, condMap, condTitle, Operation, opExplain, opMap, opTitle, Register, regTitle, setFlagsExplain } from '@/constants';\r\nimport { Token } from 'prismjs';\r\nimport { SyntaxError } from '../../interpreter/error';\r\nimport { FlexOperand } from '../FlexOperand';\r\nimport { InstructionNode } from '../InstructionNode';\r\nimport { IExplanation, TAssembled } from '../types';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport class BiOperandNode extends InstructionNode {\r\n  protected _op: Operation;\r\n  protected _cond: Condition;\r\n  protected _setFlags: boolean;\r\n  protected _Rd: Register;\r\n  protected _flex: FlexOperand;\r\n\r\n  /**\r\n   * Responsible for ensuring that the passed information fits the required format\r\n   * for a bi-operand instruction.\r\n   * @param statement the statement to be parsed\r\n   * @param lineNumber the line number of the statement (for debugging)\r\n   * @param currentToken the index of the token to start parsing from\r\n   */\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, modifier, condition] = this.splitOpCode(this.nextToken());\r\n    this._op = opMap[operation];\r\n    this._setFlags = modifier.length === 0 ? false : true;\r\n    this._cond = condMap[condition];\r\n\r\n    this._Rd = this.parseReg(this.nextToken());\r\n\r\n    this.parseComma(this.nextToken());\r\n\r\n    this.peekToken();                                              // peek next token to see if it exists\r\n    this._flex = new FlexOperand(statement, lineNumber, this._currentToken);          // parsing delegated to FlexOperand constructor\r\n    this._currentToken = this._flex.currentToken;\r\n\r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken + 1);\r\n  }\r\n\r\n  unpack() : [Operation, Condition, boolean, Register, FlexOperand] {\r\n    return [\r\n      this._op,\r\n      this._cond,\r\n      this._setFlags,\r\n      this._Rd,\r\n      this._flex\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * TODO: implement for explanation section\r\n   */\r\n  assemble(): TAssembled {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n  \r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n  \r\n    instruction <<= 2;                // logical shift left 8 for data processing\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Arithmetic Operation\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 2\r\n    });\r\n\r\n    const immBit = +this._flex.isImm;          // unary operator (1 if boolean is true)\r\n    instruction = (instruction << 1) | immBit;\r\n    explanation.push({\r\n      title: \"FlexOperand Type\", \r\n      subtitle: this._flex.isImm ? \"Immediate\" : \"Register\", \r\n      detail: \"Tells the processor if the flexible operand is an immediate value (1) or a register (0).\", \r\n      range: 1\r\n    });\r\n  \r\n    instruction = (instruction << 4) | this._op;\r\n    explanation.push({\r\n      title: \"Operation Code\", \r\n      subtitle: opTitle[this._op], \r\n      detail: opExplain[this._op], \r\n      range: 4\r\n    });\r\n    \r\n    const setFlagsBit = +this._setFlags;    // unary operator to convert to 0 | 1\r\n    instruction = (instruction << 1) | setFlagsBit;  \r\n    explanation.push({\r\n      title: \"CPSR Flags\", \r\n      subtitle: (this._setFlags ? \"Set\" : \"Not Set\"), \r\n      detail: setFlagsExplain[setFlagsBit],\r\n      range: 1\r\n    });\r\n  \r\n    instruction <<= 4;\r\n    explanation.push({\r\n      title: \"Second Operand\", \r\n      subtitle: \"Unused\", \r\n      detail: \"These bits are left unset because the instruction only has two operands. The first, and the flexible operand.\", \r\n      range: 4\r\n    });\r\n  \r\n    instruction = (instruction << 4) | this._Rd;\r\n    explanation.push({\r\n      title: \"First Operand\", \r\n      subtitle: regTitle[this._Rd], \r\n      detail: \"The first operand is often referred to as the 'destination' register.\", \r\n      range: 4\r\n    });\r\n    \r\n    const [flexInstruction, flexExplanation] = this._flex.assemble();\r\n    instruction = (instruction << 12) | flexInstruction;\r\n    Array.prototype.push.apply(explanation, flexExplanation);\r\n  \r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n}","import { bitset } from '@/assets/bitset';\r\nimport { condExplain, Condition, condMap, condTitle, Operation, opExplain, opMap, opTitle, Register, regTitle, setFlagsExplain } from '@/constants';\r\nimport { SyntaxError } from '@/interpreter';\r\nimport { Token } from 'prismjs';\r\nimport { FlexOperand } from '../FlexOperand';\r\nimport { InstructionNode } from '../InstructionNode';\r\nimport { IExplanation, TAssembled } from '../types';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport class TriOperandNode extends InstructionNode {\r\n  protected _op: Operation;\r\n  protected _cond: Condition;\r\n  protected _setFlags: boolean = false;\r\n  protected _Rd: Register;\r\n  protected _Rn: Register;\r\n  protected _flex: FlexOperand;\r\n\r\n  /**\r\n   * Responsible for ensuring that the passed information fits the required format\r\n   * for a tri-operand instruction.\r\n   * @param statement the statement to be parsed\r\n   * @param lineNumber the line number of the statement (for debugging)\r\n   * @param currentToken the index of the token to start parsing from\r\n   */\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, modifier, condition] = this.splitOpCode(this.nextToken());\r\n    this._op = opMap[operation];\r\n    this._setFlags = modifier.length === 0 ? false : true;\r\n    this._cond = condMap[condition];\r\n\r\n    this._Rd = this.parseReg(this.nextToken());\r\n    this.parseComma(this.nextToken());\r\n    this._Rn = this.parseReg(this.nextToken());\r\n\r\n    this.parseComma(this.nextToken());\r\n    \r\n    this.peekToken();                                              // peek next token to see if it exists\r\n    this._flex = new FlexOperand(statement, lineNumber, this._currentToken);          // parsing delegated to FlexOperand constructor\r\n    this._currentToken = this._flex.currentToken;\r\n    \r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, this._statement, this._lineNumber, this._currentToken + 1);\r\n  }\r\n\r\n  unpack() : [Operation, Condition, boolean, Register, Register, FlexOperand] {\r\n    return [\r\n      this._op,\r\n      this._cond, \r\n      this._setFlags,\r\n      this._Rd,\r\n      this._Rn,\r\n      this._flex\r\n    ];\r\n  }\r\n\r\n  assemble(): TAssembled {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n\r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n\r\n    instruction <<= 2;\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Arithmetic Operation\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 2\r\n    });\r\n\r\n    const immBit = +this._flex.isImm;          // unary operator (1 if boolean is true)\r\n    instruction = (instruction << 1) | immBit;\r\n    explanation.push({\r\n      title: \"FlexOperand Type\", \r\n      subtitle: this._flex.isImm ? \"Immediate\" : \"Register\", \r\n      detail: \"Tells the processor if the flexible operand is an immediate value (1) or a register (0).\", \r\n      range: 1\r\n    });\r\n\r\n    instruction = (instruction << 4) | this._op;\r\n    explanation.push({\r\n      title: \"Operation Code\", \r\n      subtitle: opTitle[this._op], \r\n      detail: opExplain[this._op], \r\n      range: 4\r\n    });\r\n    \r\n    const setFlagsBit = +this._setFlags;\r\n    instruction = (instruction << 1) | setFlagsBit;\r\n    explanation.push({\r\n      title: \"CPSR Flags\", \r\n      subtitle: (this._setFlags ? \"Set\" : \"Not Set\"), \r\n      detail: setFlagsExplain[setFlagsBit], \r\n      range: 1\r\n    });\r\n\r\n    instruction = (instruction << 4) | this._Rn;\r\n    explanation.push({\r\n      title: \"Second Operand\", \r\n      subtitle: regTitle[this._Rn], \r\n      detail: \"The second operand is often referred to as a 'source' register.\", \r\n      range: 4\r\n    });\r\n\r\n    instruction = (instruction << 4) | this._Rd;\r\n    explanation.push({\r\n      title: \"First Operand\", \r\n      subtitle: regTitle[this._Rd], \r\n      detail: \"The first operand is often referred to as the 'destination' register.\", \r\n      range: 4\r\n    });\r\n\r\n    const [flexInstruction, flexExplanation] = this._flex.assemble();\r\n    instruction = (instruction << 12) | flexInstruction;\r\n    Array.prototype.push.apply(explanation, flexExplanation);\r\n    \r\n    // const [Rm, shift, Rs, immShift] = this._flex.unpack();\r\n    // if (this._flex.isImm) {                                                                          // operand is immediate\r\n    //   instruction = (instruction << 4) | immShift;\r\n    //   explanation.push({\r\n    //     title: \"Barrel Shifter\", \r\n    //     subtitle: (immShift == 0 ? \"Not Shifted\" : `Rotated Right By ${immShift}`), \r\n    //     detail: \"The amount by which the eight bit immediate value is rotated right.\", \r\n    //     range: 4\r\n    //   });\r\n      \r\n    //   instruction = (instruction << 8) | Rm;\r\n    //   explanation.push({\r\n    //     title: \"Immediate\", \r\n    //     subtitle: `Value ${Rm}`, \r\n    //     detail: \"An eight bit immediate value. This value, along with the barrel shift, forms the second operand.\", \r\n    //     range: 8\r\n    //   });\r\n    // }\r\n    // else if (this._flex.isReg) {                                                                     // operand is register\r\n    //   if (this._flex.shifted) {                                                                      // operand is  optionally shifted\r\n    //     if (this._flex.shiftedByReg) {                                                               // shifted by register\r\n    //       instruction = (instruction << 4) | Rs!;\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Amount\", \r\n    //         subtitle: regTitle[Rs as Register], \r\n    //         detail: \"Shift by the value in \" + regTitle[Rs as Register] + \".\", \r\n    //         range: 4\r\n    //       });\r\n\r\n    //       instruction = (instruction << 3) | shift!;                                             // 3 because extra 0 of unused space for register shifts\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Operation\", \r\n    //         subtitle: shiftTitle[shift as Shift], \r\n    //         detail: \"The type of shift to perform on the flexible operand.\", \r\n    //         range: 3\r\n    //       });\r\n\r\n    //       instruction = (instruction << 1) | 1;\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Type\", \r\n    //         subtitle: \"Register\", \r\n    //         detail: \"The flexible operand is optionally shifted by a register value.\", \r\n    //         range: 1\r\n    //       });\r\n    //     }\r\n    //     else if (this._flex.shiftedByImm) {                                                          // shifted by immediate\r\n    //       instruction = (instruction << 5) | Rs!;\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Amount\", \r\n    //         subtitle: `Immediate ${Rs}`, \r\n    //         detail: `Shift by the provided five bit immediate value (${Rs}).`, \r\n    //         range: 5\r\n    //       });\r\n\r\n    //       instruction = ((instruction << 3) | shift!) << 1;\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Operation\", \r\n    //         subtitle: shiftTitle[shift as Shift], \r\n    //         detail: \"The type of shift to perform on the flexible operand.\", \r\n    //         range: 2\r\n    //       });\r\n\r\n    //       explanation.push({\r\n    //         title: \"Optional Shift Type\", \r\n    //         subtitle: \"Immediate\", \r\n    //         detail: \"The flexible operand is optionally shifted by an immediate value.\", \r\n    //         range: 1\r\n    //       });\r\n    //     }\r\n    //     else throw new AssemblyError(\"Optional shift operand Rs is neither a REGISTER nor IMMEDIATE value. Most likely a parser bug.\", this._statement, this._lineNumber, -1);\r\n    //   }\r\n    //   else {                                                                                      // operand is not optionally shifted\r\n    //     instruction <<= 8;\r\n    //     explanation.push({\r\n    //       title: \"No Optional Shift\", \r\n    //       subtitle: \"N/A\", \r\n    //       detail: \"The flexible operand is not optionally shifted.\", \r\n    //       range: 8\r\n    //     });\r\n    //   }\r\n\r\n    //   instruction = (instruction << 4) | Rm;\r\n    //   explanation.push({\r\n    //     title: \"Flexible Operand\", \r\n    //     subtitle: regTitle[Rm as Register], \r\n    //     detail: \"This operand has special properties in ARMv7. It can be either an immediate value or an optionally shifted register.\", \r\n    //     range: 4\r\n    //   });\r\n    // }\r\n    // else throw new AssemblyError(\"Source operand Rm is neither a REGISTER nor IMMEDIATE value. This is most likely a parser bug.\", this._statement, this._lineNumber, -1);\r\n\r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n}","import { Condition, condMap, OperandType, Register, Shift, shiftMap } from '@/constants';\r\nimport { SyntaxError } from '@/interpreter';\r\nimport { Token } from 'prismjs';\r\nimport { InstructionNode } from '../InstructionNode';\r\nimport { TRegOrImm } from '../types';\r\n\r\n\r\n/** Class which holds all the information required to execute a bi-operand instruction */\r\nexport class ShiftNode extends InstructionNode {\r\n  protected _op: Shift;\r\n  // protected _shiftOp: Shift;\r\n  protected _cond: Condition;\r\n  protected _setFlags: boolean;\r\n  protected _Rd: Register;\r\n  protected _Rn: Register;\r\n  protected _Rs: TRegOrImm;\r\n\r\n  protected _type: OperandType | undefined;\r\n\r\n  get isReg() { return this._type === OperandType.REGISTER; }\r\n  get isImm() { return this._type === OperandType.IMMEDIATE; }\r\n\r\n  /**\r\n   * Responsible for ensuring that the passed information fits the required format\r\n   * for a bi-operand instruction.\r\n   * @param statement the statement to be parsed\r\n   * @param lineNumber the line number of the statement (for debugging)\r\n   * @param currentToken the index of the token to start parsing from\r\n   */\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, modifier, condition] = this.splitOpCode(this.nextToken());\r\n    this._op = shiftMap[operation];\r\n    this._setFlags = modifier.length === 0 ? false : true;\r\n    this._cond = condMap[condition];\r\n\r\n    this._Rd = this.parseReg(this.nextToken());\r\n    this.parseComma(this.nextToken());\r\n    this._Rn = this.parseReg(this.nextToken());\r\n    this.parseComma(this.nextToken());\r\n\r\n    const [value, type] = this.parseRegOrImm();         \r\n    this._Rs = value;\r\n    this._type = type;\r\n  }\r\n\r\n  parseRegOrImm() : [Register | number, OperandType] {\r\n    let flex: Register | number | undefined;\r\n    let type: OperandType | undefined;\r\n\r\n    try { \r\n      flex = this.parseReg(this.peekToken());                       // attempt to parse as register by peeking at the next token\r\n      type = OperandType.REGISTER;\r\n    }                 \r\n    catch (e) { if (!(e instanceof SyntaxError)) throw e }          // rethrow if not syntax error\r\n    \r\n    if (flex === undefined) {\r\n      try { \r\n        flex = this.parseImm(this.peekToken(), 5);                  // attempt to parse as immediate by peeking at the next token\r\n        type = OperandType.IMMEDIATE;\r\n      }            \r\n      catch (e) { if (!(e instanceof SyntaxError)) throw e }        // rethrow if not syntax error\r\n    }\r\n\r\n    if (flex === undefined || type === undefined) {\r\n      throw new SyntaxError(`Expected either REGISTER or IMMEDIATE value - received ${this.peekToken().type} '${this.peekToken().content}' instead.`, this._statement, this._lineNumber, this._currentToken); \r\n    }\r\n    \r\n    this.nextToken();                                               // advance token because currently only peeked\r\n    return [flex, type];\r\n  }\r\n\r\n  unpack() : [Shift, Condition, boolean, Register, Register, TRegOrImm] {\r\n    return [\r\n      this._op,\r\n      this._cond,\r\n      this._setFlags,\r\n      this._Rd,\r\n      this._Rn,\r\n      this._Rs\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * TODO: implement for explanation section\r\n   */\r\n  // assemble(): TAssembled {\r\n    \r\n  // }\r\n}","import { SyntaxError } from \"@/interpreter\";\r\nimport { Token } from \"prismjs\";\r\nimport { SyntaxNode } from \"../SyntaxNode\";\r\n\r\nexport class LabelNode extends SyntaxNode {\r\n  protected _identifier: string;\r\n\r\n  get identifier() : string { return this._identifier; }\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    this._identifier = (this.nextToken().content as string).slice(0, -1);\r\n\r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid data declaration end.`, statement, lineNumber, currentToken);\r\n  }\r\n}","import { languages } from 'prismjs'\r\nimport { tokens } from '@/constants/tokens';\r\n\r\nexport const branchRegex = /\\b(b|bl|bx)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i\r\n\r\nlanguages.armv7 =  {\r\n\t[tokens.string]: {\r\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/\r\n\t},\r\n\t[tokens.line_comment]: {\r\n\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n\t\tgreedy: true\r\n\t},\r\n\t[tokens.bi_operand]: {\r\n\t\tpattern: /\\b(cmn|cmp|mov|mvn|teq|tst)(s)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.tri_operand]: {\r\n\t\tpattern: /\\b(adc|add|and|bic|eor|orr|rsb|rsc|sbc|sub)(s)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.branch]: {\r\n\t\tpattern: branchRegex,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.shift]: {\r\n\t\tpattern: /\\b(lsl|lsr|asr|ror|rrx)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.transfer.single]: { \r\n\t\tpattern: /\\b(str|ldr)(b)?(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.transfer.block]: {\r\n\t\tpattern: /\\b(stm|ldm)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(fd|ed|fa|ea|ia|ib|da|db)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.transfer.stack]: {\r\n\t\tpattern: /\\b(push|pop)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?\\b/i,\r\n\t\talias: 'operation'\r\n\t},\r\n\t[tokens.register]: {\r\n\t\tpattern: /\\b(r([0-9]|(10|11|12))|(sp|lr|pc))\\b/i,\r\n\t},\r\n\t[tokens.immediate]: [\r\n\t\t{ pattern: /#\\b0x(\\d|[a-f])+\\b/i, alias: 'hex' },\r\n\t\t{ pattern: /#\\b0b(0|1)+\\b/i, alias: 'bin' },\r\n\t\t{ pattern: /#\\b0[0-7]+\\b/i, alias: 'oct' },\r\n\t\t{ pattern: /#\\b(0d)?(\\d)+\\b/i, alias: 'dec' }\r\n\t],\r\n\t[tokens.number]: [\r\n\t\t{ pattern: /\\b0x(\\d|[a-f])+\\b/i, alias: 'hex' },\r\n\t\t{ pattern: /\\b0b(0|1)+\\b/i, alias: 'bin' },\r\n\t\t{ pattern: /\\b0[0-7]+\\b/i, alias: 'oct' },\r\n\t\t{ pattern: /\\b(0d)?(\\d)+\\b/i, alias: 'dec' }\r\n\t],\r\n\t[tokens.indexer]: [\r\n\t\t{ pattern: /\\[/, alias: 'start' },\r\n\t\t{ pattern: /\\]/, alias: 'end' },\r\n\t],\r\n\t[tokens.reg_list]: [\r\n\t\t{ pattern: /\\{/, alias: 'start' },\r\n\t\t{ pattern: /\\}/, alias: 'end' },\r\n\t],\r\n\t// 'number': /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\r\n\t[tokens.comma]: /,/,\r\n\t[tokens.directive]: /\\.\\b(text|data|global|extern|byte|hword|word|asciz|skip|balign)\\b/m,\r\n\t[tokens.data_label]: /=\\b[A-Za-z_][A-Za-z_\\d]+\\b/m,\r\n\t[tokens.sign]: [\r\n\t\t{ pattern: /-/m, alias: \"minus\" },\r\n\t\t{ pattern: /\\+/m, alias: \"plus\" }\r\n\t],\r\n\t[tokens.updating]: /!/m,\r\n\t[tokens.label]: /\\b[A-Za-z_][A-Za-z_\\d]+\\b:/m,\r\n\t[tokens.op_label]: /\\b[A-Za-z_][A-Za-z_\\d]+\\b/m,\r\n\t[tokens.end]: /\\n/m,\r\n\t[tokens.whitespace]: /\\s+/,\r\n\t[tokens.unknown]: /.+/\r\n};\r\n","export default {\r\n\t\"headings\":[[\"OCT\", \"HEX\",\t\"BIN\", \"Symbol\", \"Description\"]],\r\n\t\"ascii\":[\r\n\t\t[\"000\", \"00\", \"00000000\", \"NUL\", \"Null char\"],\r\n\t\t[\"001\", \"01\", \"00000001\", \"SOH\", \"Start of Heading\"],\r\n\t\t[\"002\", \"02\", \"00000010\", \"STX\", \"Start of Text\"],\r\n\t\t[\"003\", \"03\", \"00000011\", \"ETX\", \"End of Text\"],\r\n\t\t[\"004\", \"04\", \"00000100\", \"EOT\", \"End of Transmission\"],\r\n\t\t[\"005\", \"05\", \"00000101\", \"ENQ\", \"Enquiry\"],\r\n\t\t[\"006\", \"06\", \"00000110\", \"ACK\", \"Acknowledgment\"],\r\n\t\t[\"007\", \"07\", \"00000111\", \"BEL\", \"Bell\"],\r\n\t\t[\"010\", \"08\", \"00001000\", \"BS\", \"Back Space\"],\r\n\t\t[\"011\", \"09\", \"00001001\", \"HT\", \"Horizontal Tab\"],\r\n\t\t[\"012\", \"0A\", \"00001010\", \"LF\", \"Line Feed\"],\r\n\t\t[\"013\", \"0B\", \"00001011\", \"VT\", \"Vertical Tab\"],\r\n\t\t[\"014\", \"0C\", \"00001100\", \"FF\", \"Form Feed\"],\r\n\t\t[\"015\", \"0D\", \"00001101\", \"CR\", \"Carriage Return\"],\r\n\t\t[\"016\", \"0E\", \"00001110\", \"SO\", \"Shift Out / X-On\"],\r\n\t\t[\"017\", \"0F\", \"00001111\", \"SI\", \"Shift In / X-Off\"],\r\n\t\t[\"020\", \"10\", \"00010000\", \"DLE\", \"Data Line Escape\"],\r\n\t\t[\"021\", \"11\", \"00010001\", \"DC1\", \"Device Control 1 (oft. XON)\"],\r\n\t\t[\"022\", \"12\", \"00010010\", \"DC2\", \"Device Control 2\"],\r\n\t\t[\"023\", \"13\", \"00010011\", \"DC3\", \"Device Control 3 (oft. XOFF)\"],\r\n\t\t[\"024\", \"14\", \"00010100\", \"DC4\", \"Device Control 4\"],\r\n\t\t[\"025\", \"15\", \"00010101\", \"NAK\", \"Negative Acknowledgement\"],\r\n\t\t[\"026\", \"16\", \"00010110\", \"SYN\", \"Synchronous Idle\"],\r\n\t\t[\"027\", \"17\", \"00010111\", \"ETB\", \"End of Transmit Block\"],\r\n\t\t[\"030\", \"18\", \"00011000\", \"CAN\", \"Cancel\"],\r\n\t\t[\"031\", \"19\", \"00011001\", \"EM\", \"End of Medium\"],\r\n\t\t[\"032\", \"1A\", \"00011010\", \"SUB\", \"Substitute\"],\r\n\t\t[\"033\", \"1B\", \"00011011\", \"ESC\", \"Escape\"],\r\n\t\t[\"034\", \"1C\", \"00011100\", \"FS\", \"File Separator\"],\r\n\t\t[\"035\", \"1D\", \"00011101\", \"GS\", \"Group Separator\"],\r\n\t\t[\"036\", \"1E\", \"00011110\", \"RS\", \"Record Separator\"],\r\n\t\t[\"037\", \"1F\", \"00011111\", \"US\", \"Unit Separator\"],\r\n\t\t[\"040\", \"20\", \"00100000\", \" \", \"Space\"],\r\n\t\t[\"041\", \"21\", \"00100001\", \"!\", \"Exclamation mark\"],\r\n\t\t[\"042\", \"22\", \"00100010\", \"\\\"\", \"Double quotes (or speech marks)\"],\r\n\t\t[\"043\", \"23\", \"00100011\", \"#\", \"Number\"],\r\n\t\t[\"044\", \"24\", \"00100100\", \"$\", \"Dollar\"],\r\n\t\t[\"045\", \"25\", \"00100101\", \"%\", \"Per cent sign\"],\r\n\t\t[\"046\", \"26\", \"00100110\", \"&\", \"&amp;\", \"Ampersand\"],\r\n\t\t[\"047\", \"27\", \"00100111\", \"'\", \"Single quote\"],\r\n\t\t[\"050\", \"28\", \"00101000\", \"(\", \"Open parenthesis (or open bracket)\"],\r\n\t\t[\"051\", \"29\", \"00101001\", \")\", \"Close parenthesis (or close bracket)\"],\r\n\t\t[\"052\", \"2A\", \"00101010\", \"*\", \"Asterisk\"],\r\n\t\t[\"053\", \"2B\", \"00101011\", \"+\", \"Plus\"],\r\n\t\t[\"054\", \"2C\", \"00101100\", \",\", \"Comma\"],\r\n\t\t[\"055\", \"2D\", \"00101101\", \"-\", \"Hyphen\"],\r\n\t\t[\"056\", \"2E\", \"00101110\", \".\", \"Period, dot or full stop\"],\r\n\t\t[\"057\", \"2F\", \"00101111\", \"/\", \"Slash or divide\"],\r\n\t\t[\"060\", \"30\", \"00110000\", \"0\", \"Zero\"],\r\n\t\t[\"061\", \"31\", \"00110001\", \"1\", \"One\"],\r\n\t\t[\"062\", \"32\", \"00110010\", \"2\", \"Two\"],\r\n\t\t[\"063\", \"33\", \"00110011\", \"3\", \"Three\"],\r\n\t\t[\"064\", \"34\", \"00110100\", \"4\", \"Four\"],\r\n\t\t[\"065\", \"35\", \"00110101\", \"5\", \"Five\"],\r\n\t\t[\"066\", \"36\", \"00110110\", \"6\", \"Six\"],\r\n\t\t[\"067\", \"37\", \"00110111\", \"7\", \"Seven\"],\r\n\t\t[\"070\", \"38\", \"00111000\", \"8\", \"Eight\"],\r\n\t\t[\"071\", \"39\", \"00111001\", \"9\", \"Nine\"],\r\n\t\t[\"072\", \"3A\", \"00111010\", \":\", \"Colon\"],\r\n\t\t[\"073\", \"3B\", \"00111011\", \";\", \"Semicolon\"],\r\n\t\t[\"074\", \"3C\", \"00111100\", \"<\", \"Less than (or open angled bracket)\"],\r\n\t\t[\"075\", \"3D\", \"00111101\", \"=\", \"Equals\"],\r\n\t\t[\"076\", \"3E\", \"00111110\", \">\", \"Greater than (or close angled bracket)\"],\r\n\t\t[\"077\", \"3F\", \"00111111\", \"?\", \"Question mark\"],\r\n\t\t[\"100\", \"40\", \"01000000\", \"@\", \"At symbol\"],\r\n\t\t[\"101\", \"41\", \"01000001\", \"A\", \"Uppercase A\"],\r\n\t\t[\"102\", \"42\", \"01000010\", \"B\", \"Uppercase B\"],\r\n\t\t[\"103\", \"43\", \"01000011\", \"C\", \"Uppercase C\"],\r\n\t\t[\"104\", \"44\", \"01000100\", \"D\", \"Uppercase D\"],\r\n\t\t[\"105\", \"45\", \"01000101\", \"E\", \"Uppercase E\"],\r\n\t\t[\"106\", \"46\", \"01000110\", \"F\", \"Uppercase F\"],\r\n\t\t[\"107\", \"47\", \"01000111\", \"G\", \"Uppercase G\"],\r\n\t\t[\"110\", \"48\", \"01001000\", \"H\", \"Uppercase H\"],\r\n\t\t[\"111\", \"49\", \"01001001\", \"I\", \"Uppercase I\"],\r\n\t\t[\"112\", \"4A\", \"01001010\", \"J\", \"Uppercase J\"],\r\n\t\t[\"113\", \"4B\", \"01001011\", \"K\", \"Uppercase K\"],\r\n\t\t[\"114\", \"4C\", \"01001100\", \"L\", \"Uppercase L\"],\r\n\t\t[\"115\", \"4D\", \"01001101\", \"M\", \"Uppercase M\"],\r\n\t\t[\"116\", \"4E\", \"01001110\", \"N\", \"Uppercase N\"],\r\n\t\t[\"117\", \"4F\", \"01001111\", \"O\", \"Uppercase O\"],\r\n\t\t[\"120\", \"50\", \"01010000\", \"P\", \"Uppercase P\"],\r\n\t\t[\"121\", \"51\", \"01010001\", \"Q\", \"Uppercase Q\"],\r\n\t\t[\"122\", \"52\", \"01010010\", \"R\", \"Uppercase R\"],\r\n\t\t[\"123\", \"53\", \"01010011\", \"S\", \"Uppercase S\"],\r\n\t\t[\"124\", \"54\", \"01010100\", \"T\", \"Uppercase T\"],\r\n\t\t[\"125\", \"55\", \"01010101\", \"U\", \"Uppercase U\"],\r\n\t\t[\"126\", \"56\", \"01010110\", \"V\", \"Uppercase V\"],\r\n\t\t[\"127\", \"57\", \"01010111\", \"W\", \"Uppercase W\"],\r\n\t\t[\"130\", \"58\", \"01011000\", \"X\", \"Uppercase X\"],\r\n\t\t[\"131\", \"59\", \"01011001\", \"Y\", \"Uppercase Y\"],\r\n\t\t[\"132\", \"5A\", \"01011010\", \"Z\", \"Uppercase Z\"],\r\n\t\t[\"133\", \"5B\", \"01011011\", \"[\", \"Opening bracket\"],\r\n\t\t[\"134\", \"5C\", \"01011100\", \"\\\\\", \"Backslash\"],\r\n\t\t[\"135\", \"5D\", \"01011101\", \"]\", \"Closing bracket\"],\r\n\t\t[\"136\", \"5E\", \"01011110\", \"^\", \"Caret - circumflex\"],\r\n\t\t[\"137\", \"5F\", \"01011111\", \"_\", \"Underscore\"],\r\n\t\t[\"140\", \"60\", \"01100000\", \"`\", \"Grave accent\"],\r\n\t\t[\"141\", \"61\", \"01100001\", \"a\", \"Lowercase a\"],\r\n\t\t[\"142\", \"62\", \"01100010\", \"b\", \"Lowercase b\"],\r\n\t\t[\"143\", \"63\", \"01100011\", \"c\", \"Lowercase c\"],\r\n\t\t[\"144\", \"64\", \"01100100\", \"d\", \"Lowercase d\"],\r\n\t\t[\"145\", \"65\", \"01100101\", \"e\", \"Lowercase e\"],\r\n\t\t[\"146\", \"66\", \"01100110\", \"f\", \"Lowercase f\"],\r\n\t\t[\"147\", \"67\", \"01100111\", \"g\", \"Lowercase g\"],\r\n\t\t[\"150\", \"68\", \"01101000\", \"h\", \"Lowercase h\"],\r\n\t\t[\"151\", \"69\", \"01101001\", \"i\", \"Lowercase i\"],\r\n\t\t[\"152\", \"6A\", \"01101010\", \"j\", \"Lowercase j\"],\r\n\t\t[\"153\", \"6B\", \"01101011\", \"k\", \"Lowercase k\"],\r\n\t\t[\"154\", \"6C\", \"01101100\", \"l\", \"Lowercase l\"],\r\n\t\t[\"155\", \"6D\", \"01101101\", \"m\", \"Lowercase m\"],\r\n\t\t[\"156\", \"6E\", \"01101110\", \"n\", \"Lowercase n\"],\r\n\t\t[\"157\", \"6F\", \"01101111\", \"o\", \"Lowercase o\"],\r\n\t\t[\"160\", \"70\", \"01110000\", \"p\", \"Lowercase p\"],\r\n\t\t[\"161\", \"71\", \"01110001\", \"q\", \"Lowercase q\"],\r\n\t\t[\"162\", \"72\", \"01110010\", \"r\", \"Lowercase r\"],\r\n\t\t[\"163\", \"73\", \"01110011\", \"s\", \"Lowercase s\"],\r\n\t\t[\"164\", \"74\", \"01110100\", \"t\", \"Lowercase t\"],\r\n\t\t[\"165\", \"75\", \"01110101\", \"u\", \"Lowercase u\"],\r\n\t\t[\"166\", \"76\", \"01110110\", \"v\", \"Lowercase v\"],\r\n\t\t[\"167\", \"77\", \"01110111\", \"w\", \"Lowercase w\"],\r\n\t\t[\"170\", \"78\", \"01111000\", \"x\", \"Lowercase x\"],\r\n\t\t[\"171\", \"79\", \"01111001\", \"y\", \"Lowercase y\"],\r\n\t\t[\"172\", \"7A\", \"01111010\", \"z\", \"Lowercase z\"],\r\n\t\t[\"173\", \"7B\", \"01111011\", \"{\", \"Opening brace\"],\r\n\t\t[\"174\", \"7C\", \"01111100\", \"|\", \"Vertical bar\"],\r\n\t\t[\"175\", \"7D\", \"01111101\", \"}\", \"Closing brace\"],\r\n\t\t[\"176\", \"7E\", \"01111110\", \"~\", \"Equivalency sign - tilde\"],\r\n\t\t[\"177\", \"7F\", \"01111111\", \"\", \"Delete\"],\r\n\t\t[\"200\", \"80\", \"10000000\", \"€\", \"Euro sign\"],\r\n\t\t[\"201\", \"81\", \"10000001\", \" \", \"\"],\r\n\t\t[\"202\", \"82\", \"10000010\", \"‚\", \"Single low-9 quotation mark\"],\r\n\t\t[\"203\", \"83\", \"10000011\", \"ƒ\", \"Latin small letter f with hook\"],\r\n\t\t[\"204\", \"84\", \"10000100\", \"„\", \"Double low-9 quotation mark\"],\r\n\t\t[\"205\", \"85\", \"10000101\", \"…\", \"Horizontal ellipsis\"],\r\n\t\t[\"206\", \"86\", \"10000110\", \"†\", \"Dagger\"],\r\n\t\t[\"207\", \"87\", \"10000111\", \"‡\", \"Double dagger\"],\r\n\t\t[\"210\", \"88\", \"10001000\", \"ˆ\", \"Modifier letter circumflex accent\"],\r\n\t\t[\"211\", \"89\", \"10001001\", \"‰\", \"Per mille sign\"],\r\n\t\t[\"212\", \"8A\", \"10001010\", \"Š\", \"Latin capital letter S with caron\"],\r\n\t\t[\"213\", \"8B\", \"10001011\", \"‹\", \"Single left-pointing angle quotation\"],\r\n\t\t[\"214\", \"8C\", \"10001100\", \"Œ\", \"Latin capital ligature OE\"],\r\n\t\t[\"215\", \"8D\", \"10001101\", \" \", \" \"],\r\n\t\t[\"216\", \"8E\", \"10001110\", \"Ž\", \"Latin capital letter Z with caron\"],\r\n\t\t[\"217\", \"8F\", \"10001111\", \" \", \" \"],\r\n\t\t[\"220\", \"90\", \"10010000\", \" \", \" \"],\r\n\t\t[\"221\", \"91\", \"10010001\", \"‘\", \"Left single quotation mark\"],\r\n\t\t[\"222\", \"92\", \"10010010\", \"’\", \"Right single quotation mark\"],\r\n\t\t[\"223\", \"93\", \"10010011\", \"“\", \"Left double quotation mark\"],\r\n\t\t[\"224\", \"94\", \"10010100\", \"”\", \"Right double quotation mark\"],\r\n\t\t[\"225\", \"95\", \"10010101\", \"•\", \"Bullet\"],\r\n\t\t[\"226\", \"96\", \"10010110\", \"–\", \"En dash\"],\r\n\t\t[\"227\", \"97\", \"10010111\", \"—\", \"Em dash\"],\r\n\t\t[\"230\", \"98\", \"10011000\", \"˜\", \"Small tilde\"],\r\n\t\t[\"231\", \"99\", \"10011001\", \"™\", \"Trade mark sign\"],\r\n\t\t[\"232\", \"9A\", \"10011010\", \"š\", \"Latin small letter S with caron\"],\r\n\t\t[\"233\", \"9B\", \"10011011\", \"›\", \"Single right-pointing angle quotation mark\"],\r\n\t\t[\"234\", \"9C\", \"10011100\", \"œ\", \"Latin small ligature oe\"],\r\n\t\t[\"235\", \"9D\", \"10011101\", \" \", \" \"],\r\n\t\t[\"236\", \"9E\", \"10011110\", \"ž\", \"Latin small letter z with caron\"],\r\n\t\t[\"237\", \"9F\", \"10011111\", \"Ÿ\", \"Latin capital letter Y with diaeresis\"],\r\n\t\t[\"240\", \"A0\", \"10100000\", \" \", \"Non-breaking space\"],\r\n\t\t[\"241\", \"A1\", \"10100001\", \"¡\", \"Inverted exclamation mark\"],\r\n\t\t[\"242\", \"A2\", \"10100010\", \"¢\", \"Cent sign\"],\r\n\t\t[\"243\", \"A3\", \"10100011\", \"£\", \"Pound sign\"],\r\n\t\t[\"244\", \"A4\", \"10100100\", \"¤\", \"Currency sign\"],\r\n\t\t[\"245\", \"A5\", \"10100101\", \"¥\", \"Yen sign\"],\r\n\t\t[\"246\", \"A6\", \"10100110\", \"¦\", \"Pipe, Broken vertical bar\"],\r\n\t\t[\"247\", \"A7\", \"10100111\", \"§\", \"Section sign\"],\r\n\t\t[\"250\", \"A8\", \"10101000\", \"¨\", \"Spacing diaeresis - umlaut\"],\r\n\t\t[\"251\", \"A9\", \"10101001\", \"©\", \"Copyright sign\"],\r\n\t\t[\"252\", \"AA\", \"10101010\", \"ª\", \"Feminine ordinal indicator\"],\r\n\t\t[\"253\", \"AB\", \"10101011\", \"«\", \"Left double angle quotes\"],\r\n\t\t[\"254\", \"AC\", \"10101100\", \"¬\", \"Not sign\"],\r\n\t\t[\"255\", \"AD\", \"10101101\", \"­\", \"Soft hyphen\"],\r\n\t\t[\"256\", \"AE\", \"10101110\", \"®\", \"Registered trade mark sign\"],\r\n\t\t[\"257\", \"AF\", \"10101111\", \"¯\", \"Spacing macron - overline\"],\r\n\t\t[\"260\", \"B0\", \"10110000\", \"°\", \"Degree sign\"],\r\n\t\t[\"261\", \"B1\", \"10110001\", \"±\", \"Plus-or-minus sign\"],\r\n\t\t[\"262\", \"B2\", \"10110010\", \"²\", \"Superscript two - squared\"],\r\n\t\t[\"263\", \"B3\", \"10110011\", \"³\", \"Superscript three - cubed\"],\r\n\t\t[\"264\", \"B4\", \"10110100\", \"´\", \"Acute accent - spacing acute\"],\r\n\t\t[\"265\", \"B5\", \"10110101\", \"µ\", \"Micro sign\"],\r\n\t\t[\"266\", \"B6\", \"10110110\", \"¶\", \"Pilcrow sign - paragraph sign\"],\r\n\t\t[\"267\", \"B7\", \"10110111\", \"·\", \"Middle dot - Georgian comma\"],\r\n\t\t[\"270\", \"B8\", \"10111000\", \"¸\", \"Spacing cedilla\"],\r\n\t\t[\"271\", \"B9\", \"10111001\", \"¹\", \"Superscript one\"],\r\n\t\t[\"272\", \"BA\", \"10111010\", \"º\", \"Masculine ordinal indicator\"],\r\n\t\t[\"273\", \"BB\", \"10111011\", \"»\", \"Right double angle quotes\"],\r\n\t\t[\"274\", \"BC\", \"10111100\", \"¼\", \"Fraction one quarter\"],\r\n\t\t[\"275\", \"BD\", \"10111101\", \"½\", \"Fraction one half\"],\r\n\t\t[\"276\", \"BE\", \"10111110\", \"¾\", \"Fraction three quarters\"],\r\n\t\t[\"277\", \"BF\", \"10111111\", \"¿\", \"Inverted question mark\"],\r\n\t\t[\"300\", \"C0\", \"11000000\", \"À\", \"Latin capital letter A with grave\"],\r\n\t\t[\"301\", \"C1\", \"11000001\", \"Á\", \"Latin capital letter A with acute\"],\r\n\t\t[\"302\", \"C2\", \"11000010\", \"Â\", \"Latin capital letter A with circumflex\"],\r\n\t\t[\"303\", \"C3\", \"11000011\", \"Ã\", \"Latin capital letter A with tilde\"],\r\n\t\t[\"304\", \"C4\", \"11000100\", \"Ä\", \"Latin capital letter A with diaeresis\"],\r\n\t\t[\"305\", \"C5\", \"11000101\", \"Å\", \"Latin capital letter A with ring above\"],\r\n\t\t[\"306\", \"C6\", \"11000110\", \"Æ\", \"Latin capital letter AE\"],\r\n\t\t[\"307\", \"C7\", \"11000111\", \"Ç\", \"Latin capital letter C with cedilla\"],\r\n\t\t[\"310\", \"C8\", \"11001000\", \"È\", \"Latin capital letter E with grave\"],\r\n\t\t[\"311\", \"C9\", \"11001001\", \"É\", \"Latin capital letter E with acute\"],\r\n\t\t[\"312\", \"CA\", \"11001010\", \"Ê\", \"Latin capital letter E with circumflex\"],\r\n\t\t[\"313\", \"CB\", \"11001011\", \"Ë\", \"Latin capital letter E with diaeresis\"],\r\n\t\t[\"314\", \"CC\", \"11001100\", \"Ì\", \"Latin capital letter I with grave\"],\r\n\t\t[\"315\", \"CD\", \"11001101\", \"Í\", \"Latin capital letter I with acute\"],\r\n\t\t[\"316\", \"CE\", \"11001110\", \"Î\", \"Latin capital letter I with circumflex\"],\r\n\t\t[\"317\", \"CF\", \"11001111\", \"Ï\", \"Latin capital letter I with diaeresis\"],\r\n\t\t[\"320\", \"D0\", \"11010000\", \"Ð\", \"Latin capital letter ETH\"],\r\n\t\t[\"321\", \"D1\", \"11010001\", \"Ñ\", \"Latin capital letter N with tilde\"],\r\n\t\t[\"322\", \"D2\", \"11010010\", \"Ò\", \"Latin capital letter O with grave\"],\r\n\t\t[\"323\", \"D3\", \"11010011\", \"Ó\", \"Latin capital letter O with acute\"],\r\n\t\t[\"324\", \"D4\", \"11010100\", \"Ô\", \"Latin capital letter O with circumflex\"],\r\n\t\t[\"325\", \"D5\", \"11010101\", \"Õ\", \"Latin capital letter O with tilde\"],\r\n\t\t[\"326\", \"D6\", \"11010110\", \"Ö\", \"Latin capital letter O with diaeresis\"],\r\n\t\t[\"327\", \"D7\", \"11010111\", \"×\", \"Multiplication sign\"],\r\n\t\t[\"330\", \"D8\", \"11011000\", \"Ø\", \"Latin capital letter O with slash\"],\r\n\t\t[\"331\", \"D9\", \"11011001\", \"Ù\", \"Latin capital letter U with grave\"],\r\n\t\t[\"332\", \"DA\", \"11011010\", \"Ú\", \"Latin capital letter U with acute\"],\r\n\t\t[\"333\", \"DB\", \"11011011\", \"Û\", \"Latin capital letter U with circumflex\"],\r\n\t\t[\"334\", \"DC\", \"11011100\", \"Ü\", \"Latin capital letter U with diaeresis\"],\r\n\t\t[\"335\", \"DD\", \"11011101\", \"Ý\", \"Latin capital letter Y with acute\"],\r\n\t\t[\"336\", \"DE\", \"11011110\", \"Þ\", \"Latin capital letter THORN\"],\r\n\t\t[\"337\", \"DF\", \"11011111\", \"ß\", \"Latin small letter sharp s - ess-zed\"],\r\n\t\t[\"340\", \"E0\", \"11100000\", \"à\", \"Latin small letter a with grave\"],\r\n\t\t[\"341\", \"E1\", \"11100001\", \"á\", \"Latin small letter a with acute\"],\r\n\t\t[\"342\", \"E2\", \"11100010\", \"â\", \"Latin small letter a with circumflex\"],\r\n\t\t[\"343\", \"E3\", \"11100011\", \"ã\", \"Latin small letter a with tilde\"],\r\n\t\t[\"344\", \"E4\", \"11100100\", \"ä\", \"Latin small letter a with diaeresis\"],\r\n\t\t[\"345\", \"E5\", \"11100101\", \"å\", \"Latin small letter a with ring above\"],\r\n\t\t[\"346\", \"E6\", \"11100110\", \"æ\", \"Latin small letter ae\"],\r\n\t\t[\"347\", \"E7\", \"11100111\", \"ç\", \"Latin small letter c with cedilla\"],\r\n\t\t[\"350\", \"E8\", \"11101000\", \"è\", \"Latin small letter e with grave\"],\r\n\t\t[\"351\", \"E9\", \"11101001\", \"é\", \"Latin small letter e with acute\"],\r\n\t\t[\"352\", \"EA\", \"11101010\", \"ê\", \"Latin small letter e with circumflex\"],\r\n\t\t[\"353\", \"EB\", \"11101011\", \"ë\", \"Latin small letter e with diaeresis\"],\r\n\t\t[\"354\", \"EC\", \"11101100\", \"ì\", \"Latin small letter i with grave\"],\r\n\t\t[\"355\", \"ED\", \"11101101\", \"í\", \"Latin small letter i with acute\"],\r\n\t\t[\"356\", \"EE\", \"11101110\", \"î\", \"Latin small letter i with circumflex\"],\r\n\t\t[\"357\", \"EF\", \"11101111\", \"ï\", \"Latin small letter i with diaeresis\"],\r\n\t\t[\"360\", \"F0\", \"11110000\", \"ð\", \"Latin small letter eth\"],\r\n\t\t[\"361\", \"F1\", \"11110001\", \"ñ\", \"Latin small letter n with tilde\"],\r\n\t\t[\"362\", \"F2\", \"11110010\", \"ò\", \"Latin small letter o with grave\"],\r\n\t\t[\"363\", \"F3\", \"11110011\", \"ó\", \"Latin small letter o with acute\"],\r\n\t\t[\"364\", \"F4\", \"11110100\", \"ô\", \"Latin small letter o with circumflex\"],\r\n\t\t[\"365\", \"F5\", \"11110101\", \"õ\", \"Latin small letter o with tilde\"],\r\n\t\t[\"366\", \"F6\", \"11110110\", \"ö\", \"Latin small letter o with diaeresis\"],\r\n\t\t[\"367\", \"F7\", \"11110111\", \"÷\", \"Division sign\"],\r\n\t\t[\"370\", \"F8\", \"11111000\", \"ø\", \"Latin small letter o with slash\"],\r\n\t\t[\"371\", \"F9\", \"11111001\", \"ù\", \"Latin small letter u with grave\"],\r\n\t\t[\"372\", \"FA\", \"11111010\", \"ú\", \"Latin small letter u with acute\"],\r\n\t\t[\"373\", \"FB\", \"11111011\", \"û\", \"Latin small letter u with circumflex\"],\r\n\t\t[\"374\", \"FC\", \"11111100\", \"ü\", \"Latin small letter u with diaeresis\"],\r\n\t\t[\"375\", \"FD\", \"11111101\", \"ý\", \"Latin small letter y with acute\"],\r\n\t\t[\"376\", \"FE\", \"11111110\", \"þ\", \"Latin small letter thorn\"],\r\n\t\t[\"377\", \"FF\", \"11111111\", \"ÿ\", \"Latin small letter y with diaeresis\"]\r\n\t]\r\n}","import { bitset } from \"@/assets/bitset\";\r\nimport { condExplain, Condition, condMap, condTitle, Operation, opMap, Register, regTitle } from \"@/constants\";\r\nimport { Interpreter, SyntaxError } from \"@/interpreter\";\r\nimport { Token } from \"prismjs\";\r\nimport { InstructionNode } from \"../InstructionNode\";\r\nimport { IExplanation, TAssembled, TBranchAddress } from \"../types\";\r\nimport { branchRegex } from \"@/assets\";\r\n\r\nexport class BranchNode extends InstructionNode {\r\n  protected _op: Operation;\r\n  protected _cond: Condition;\r\n  protected _setFlags: boolean;\r\n  protected _Rd: TBranchAddress;\r\n  private readonly _regex: RegExp = branchRegex;\r\n\r\n  get Rd() : TBranchAddress { return this._Rd; }\r\n\r\n  constructor(statement: Token[], lineNumber: number, currentToken: number = 0) {\r\n    super(statement, lineNumber, currentToken);\r\n\r\n    const [operation, modifier, condition] = this.splitOpCode(this.nextToken());\r\n    this._op = opMap[operation];\r\n    this._setFlags = modifier.length === 0 ? false : true;\r\n    this._cond = condMap[condition];\r\n    \r\n    if (this.peekToken().type === \"register\") \r\n      this._Rd = this.parseReg(this.peekToken());\r\n\r\n    else if (this.peekToken().type === \"op-label\") \r\n      this._Rd = this.peekToken().content as string;\r\n\r\n    else throw new SyntaxError(`Expected either REGISTER or LABEL value - received '${this.peekToken().type}' ${this.peekToken().content}' instead.`, statement, lineNumber, currentToken);\r\n\r\n    this.nextToken();\r\n    if (this.hasToken()) throw new SyntaxError(`Unexpected token '${this.peekToken().content}' after valid instruction end.`, statement, lineNumber, currentToken + 1);\r\n  }\r\n\r\n  protected splitOpCode(token: Token): [string, string, string] {\r\n    let operation: string = \"\";\r\n    let modifier: string = \"\";\r\n    let condition: string = \"\";\r\n\r\n    const matches = this._regex.exec(token.content as string)!;\r\n    operation = matches[1];\r\n    condition = matches[2] ?? \"\";\r\n\r\n    return [operation, modifier, condition];\r\n  }\r\n\r\n  unpack(): [Operation, Condition, TBranchAddress] {\r\n    return [\r\n      this._op,\r\n      this._cond,\r\n      this._Rd\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  assemble(): TAssembled {\r\n    if (this._op === Operation.BX) return this.assembleBX();\r\n\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n\r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n\r\n    instruction = (instruction << 3) | 5;\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Branch\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 3\r\n    });\r\n    \r\n    const linkBit = this._op === Operation.BL ? 1 : 0;\r\n    instruction = (instruction << 1) | linkBit;\r\n    explanation.push({\r\n      title: \"Link Bit\", \r\n      subtitle: linkBit ? \"Link\" : \"Do not link\", \r\n      detail: \"Tells the processor to set the link register to the instruction after the branch so that it can be returned to.\", \r\n      range: 1\r\n    });\r\n\r\n    const labelOffset = Interpreter.generateLabelOffset(this._Rd as string, this);\r\n\r\n    instruction = (instruction << 24) | (labelOffset & 16777215);\r\n    explanation.push({\r\n      title: \"Offset\", \r\n      subtitle: `Value ${labelOffset}`, \r\n      // TODO: add html functionality to description to add link\r\n      detail: \"A 24 bit encoding of the offset from the current PC to the label address. This actually works a little differently in real processors, but this is the gist.\", \r\n      range: 24\r\n    });\r\n\r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n\r\n  assembleBX(): TAssembled {\r\n    let instruction: number = 0;\r\n    const explanation: IExplanation[] = [];\r\n\r\n    instruction = (instruction << 4) | this._cond;\r\n    explanation.push({\r\n      title: \"Condition Code\", \r\n      subtitle: condTitle[this._cond], \r\n      detail: condExplain[this._cond], \r\n      range: 4\r\n    });\r\n\r\n    // push instruction signature 000100101111111111110001 into the bitcode\r\n    instruction = (instruction << 24) | 1245169;\r\n    explanation.push({\r\n      title: \"Instruction Type\", \r\n      subtitle: \"Branch and exchange\", \r\n      detail: \"Indicates the organisation of bits to the processor so that the instruction can be decoded.\", \r\n      range: 24\r\n    });\r\n\r\n    instruction = (instruction << 4) | this._Rd as Register;\r\n    explanation.push({\r\n      title: \"First Operand\", \r\n      subtitle: regTitle[this._Rd as Register], \r\n      detail: \"The first operand contains the address to which the processor should branch.\", \r\n      range: 4\r\n    });\r\n\r\n    return {\r\n      bitcode: bitset(32, instruction).reverse(), \r\n      explanation\r\n    };\r\n  }\r\n}","import { RuntimeError } from \"@/interpreter\";\r\nimport { state } from \"../../state\";\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { Register, TTransferSize, addressModeGroup } from \"@/constants\";\r\nimport { TransferNode, BlockTransferNode, SingleTransferNode } from \"@/syntax\";\r\nimport { TSimulatorSnapshot } from \"../../types\";\r\nimport { TByteRange } from \"@/explainer/types\";\r\n\r\nexport const common = {\r\n  align(size: number): number {\r\n    return Math.ceil(size / 8) * 8;\r\n  },\r\n\r\n\tstore: function (toStore: number, address: number, size: TTransferSize) {\r\n    if (size === \"word\") {\r\n      const buffer = new ArrayBuffer(4);\r\n      const word = new Uint32Array(buffer);\r\n      const bytes = new Uint8Array(buffer);\r\n      word.set([toStore], 0);\r\n\r\n      state.memory.byteView.set(bytes, address);\r\n      // state.memory.wordView[address / 4] = toStore;\r\n    }\r\n    else if (size === \"byte\") {\r\n      state.memory.byteView[address] = toStore;\r\n    }\r\n\r\n    this.observeMemory();\r\n  },\r\n\r\n  storeBytes: function (toStore: number[], ptr: number) {\r\n    if (ptr + toStore.length > state.memory.size - state.memory.stackHeight) {\r\n      throw new RuntimeError(\"SIGSEG: Segmentation fault.\", state.currentInstruction!.statement, state.currentInstruction!.lineNumber);\r\n    }\r\n\r\n    state.memory.byteView.set(toStore, ptr);\r\n    this.observeMemory();\r\n  },\r\n\r\n  observeMemory: function () {\r\n    state.memory.observableByteView = Array.from(state.memory.byteView);\r\n    state.memory.observableWordView = Array.from(state.memory.wordView);\r\n  },\r\n\r\n\tgetMemoryAccessRange: function (transfer: TransferNode, snapshot?: TSimulatorSnapshot): TByteRange | undefined {\r\n    if (!snapshot) {\r\n      snapshot = { ...state, key: 0 } as TSimulatorSnapshot;\r\n    }\r\n\r\n    if (transfer instanceof BlockTransferNode) {\r\n      let [op, cond, base, reglist, mode, wb] = transfer.unpack();\r\n\r\n      const address = snapshot.cpu.registers[base as Register];\r\n      const isIncrement = addressModeGroup.increment.includes(mode);\r\n      const nRegisters = reglist.length;\r\n\r\n      if (isIncrement) {\r\n        return {\r\n          base: address,\r\n          limit: address + (nRegisters * 4)\r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          base: address - (nRegisters * 4),\r\n          limit: address\r\n        }\r\n      }\r\n    }\r\n    else if (transfer instanceof SingleTransferNode) {\r\n      const [op, cond, size, reg, addr, sign, flex, mode, wb] = transfer.unpack();\r\n      let address: number;\r\n\r\n      if (typeof addr === \"string\") {\r\n        address = snapshot.memory.dataTable[addr];\r\n      }\r\n      else {\r\n        address = snapshot.cpu.registers[addr as Register];\r\n      }\r\n\r\n      if (size === \"word\") {\r\n        if (sign === '+') {\r\n          return {\r\n            base: address,\r\n            limit: address + 4\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            base: address - 4,\r\n            limit: address\r\n          }\r\n        }\r\n      }\r\n      else if (size === \"byte\") {\r\n        if (sign === '+') {\r\n          return {\r\n            base: address,\r\n            limit: address + 1\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            base: address - 1,\r\n            limit: address\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { IriscError } from \"@/interpreter\";\r\nimport { state } from \"../state\";\r\nimport { TExitStatus, TSimulatorSnapshot } from \"../types\";\r\nimport Vue from 'vue';\r\nimport { snapshots } from \"./snapshots\";\r\nimport { init } from \"./init\";\r\nimport { runner } from \"./runner\";\r\nimport { memory } from \"./memory\";\r\nimport { Queue } from \"@/utilities\";\r\n\r\nexport const interaction = {\r\n  start: function () {\r\n    if (state.running) {\r\n      if (!state.step) this.resume();\r\n      return;\r\n    }\r\n\r\n    snapshots.reinstateSnapshot(0);\r\n    state.paused = false;\r\n    \r\n    // reset emulator state and run simulation\r\n    init.reset();\r\n    runner.run();\r\n  },\r\n\r\n  stepForward: function () {\r\n    if (state.running && state.paused) {\r\n      this.setStep(true);\r\n      return\r\n    }\r\n    \r\n    this.pause();\r\n    if (!state.running) {\r\n      init.reset();\r\n      runner.run();\r\n    }\r\n  },\r\n\r\n  stepBack: function () {\r\n    snapshots.reinstateSnapshot(state.cpu.tick - 1);\r\n  },\r\n\r\n  pause: function () {\r\n    state.paused = true;\r\n  },\r\n\r\n  resume: function () {\r\n    state.paused = false;\r\n  },\r\n\r\n  setStep: function (value: boolean) {\r\n    state.step = value;\r\n  },\r\n\r\n  stop: function () {\r\n    state.interrupted = false;\r\n    state.running = false;\r\n    state.paused = false;\r\n  },\r\n\r\n  setDelay(delay: number) : void {\r\n    state.delay = delay;\r\n  },\r\n\r\n\taddError(error: IriscError) {\r\n    state.errors.push(error);\r\n  },\r\n\r\n  hoverError(error: IriscError) {\r\n    state.hoveredError = error;\r\n  },\r\n\r\n  unhoverError() {\r\n    state.hoveredError = null;\r\n  },\r\n\r\n\ttoggleBreakpoint: function (lineNumber: number) {\r\n    let instruction = state.memory.text.find(e => e.lineNumber === lineNumber);\r\n\r\n    if (instruction) {\r\n      let breakpoint = state.breakpoints.find(e => e.lineNumber === instruction?.lineNumber);\r\n      if (breakpoint) {\r\n        state.breakpoints = state.breakpoints.filter(e => e.lineNumber !== breakpoint?.lineNumber)\r\n      }\r\n      else {\r\n        state.breakpoints.push(instruction);\r\n      }\r\n    }\r\n  },\r\n\r\n  removeBreakpoints: function () {\r\n    state.breakpoints = [];\r\n  },\r\n\r\n  addOutput(output: string) {\r\n    [...output].forEach(char => {\r\n      if (char === '\\n') state.output.push(\"\");\r\n      else {\r\n        let lastLine = state.output.length -1;\r\n        let existingLine = state.output[lastLine];\r\n        \r\n        Vue.set(state.output, lastLine, `${existingLine}${char}`);\r\n      }\r\n    })\r\n  },\r\n\r\n\t// on simulation finish\r\n  setExitStatus: function (status: TExitStatus) {\r\n    state.exitStatus = status;\r\n    this.stop();\r\n  }\r\n}","import { Register } from \"@/constants\";\r\nimport { RuntimeError, Interpreter } from \"@/interpreter\";\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { state } from \"../state\";\r\nimport { init } from \"./init\";\r\nimport { memory } from \"./memory\";\r\nimport { interaction } from \"./interaction\";\r\nimport { cpu } from \"./cpu\";\r\nimport { snapshots } from \"./snapshots\";\r\nimport { TAllocation } from \"../types\";\r\n\r\nexport const runner = {\r\n  /**\r\n   * \r\n   */\r\n  run: async function (skipToSleep?: boolean) {\r\n    if (state.errors.length > 0) {\r\n      state.vue!.$root.$emit('bv::show::modal', 'errors-modal');\r\n      return;\r\n    }\r\n\r\n    if (!skipToSleep) {\r\n      init.setEntryPoint();\r\n\r\n      // reset stack\r\n      memory.setStackHeight(0);\r\n\r\n      // reset heap\r\n      state.memory.heapMap = new Map<number, TAllocation>();\r\n      memory.setHeapHeight();\r\n    }\r\n\r\n    state.running = true;\r\n    try {\r\n      while(state.running) {\r\n        if (!skipToSleep) {\r\n          interaction.setStep(false);\r\n          let node: TInstructionNode = memory.instruction(state.cpu.registers[Register.PC]);\r\n\r\n          state.previousPC = state.cpu.registers[Register.PC];\r\n          cpu.setRegister(Register.PC, state.cpu.registers[Register.PC] + 4);\r\n\r\n          // if runtime instruction runoff\r\n          if (node === undefined) {\r\n            let last: TInstructionNode = state.currentInstruction!;\r\n            throw new RuntimeError(\"SIGSEG: Segmentation fault.\", last.statement, last.lineNumber);\r\n          }\r\n\r\n          await Interpreter.execute(node);\r\n        }\r\n\r\n        skipToSleep = false;\r\n        await this.sleep();\r\n\r\n        // check for bx lr to static exit point (one word after memory.size)\r\n        if (state.cpu.registers[Register.PC] === state.memory.size + 4) {\r\n          interaction.setExitStatus(0);\r\n        }\r\n        else {\r\n          // check for breakpoint\r\n          const nextInstruction: TInstructionNode = memory.instruction(state.cpu.registers[Register.PC]);\r\n          if (state.breakpoints.find(e => e.lineNumber === nextInstruction.lineNumber)) {\r\n            interaction.pause();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.error(e);\r\n\r\n      if (e instanceof RuntimeError) {\r\n        interaction.setExitStatus(e);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Checks every 50ms to see if tick speed (delay) value has changed. If the delay has elapsed\r\n   * then move return so that the simulator may continue to the next instruction.\r\n   */\r\n  sleep: async function () {\r\n    let sleptfor: number = 0;\r\n    while ((sleptfor < state.delay || state.paused) && state.running && !state.step) {\r\n      await new Promise(r => setTimeout(r, 10));\r\n      sleptfor += 10;\r\n    }\r\n\r\n    return;\r\n  },\r\n}","import { state } from \"../state\";\r\nimport { TSimulatorSnapshot } from \"../types\";\r\nimport clone  from 'lodash.clonedeep';\r\nimport { memory } from \"./memory\";\r\nimport { runner } from \"./runner\";\r\n\r\nexport const snapshots = {\r\n  takeSnapshot: function () {\r\n    const snapshot: TSimulatorSnapshot = {\r\n      key: Date.now(),\r\n\r\n      cpu: clone(state.cpu),\r\n      memory: clone(state.memory),\r\n\r\n      running: state.running,\r\n      previousPC: state.previousPC,\r\n      currentInstruction: state.currentInstruction,\r\n      wasExecuted: state.wasExecuted,\r\n\r\n      output: clone(state.output),\r\n      exitStatus: clone(state.exitStatus)\r\n    };\r\n\r\n    // enqueue snapshot or replace if snapshot at that tick already exists\r\n    state.snapshots.enqueue(snapshot, (existingSnapshot) => existingSnapshot.cpu.tick === snapshot.cpu.tick );\r\n  },\r\n\r\n  reinstateSnapshot: function (tick: number) {\r\n    if (tick < 0) return;\r\n\r\n    const snapshot = state.snapshots.data().find(e => e.cpu.tick === tick);\r\n    if (!snapshot) throw Error;\r\n\r\n    const wasRunning = state.running;\r\n\r\n    state.cpu = clone(snapshot.cpu);\r\n\r\n    const buffer = new ArrayBuffer(snapshot.memory.size);\r\n    const byteView = new Uint8Array(buffer);\r\n\r\n    byteView.set(snapshot.memory.byteView);\r\n    state.memory = {\r\n      ...clone(snapshot.memory),\r\n      buffer,\r\n      byteView,\r\n      wordView: new Uint32Array(buffer)\r\n    };\r\n\r\n    state.running = snapshot.running;\r\n    state.paused = true;\r\n\r\n    state.previousPC = snapshot.previousPC;\r\n    state.currentInstruction = snapshot.currentInstruction;\r\n    state.wasExecuted = snapshot.wasExecuted;\r\n\r\n    state.output = clone(snapshot.output);\r\n    state.exitStatus = clone(snapshot.exitStatus);\r\n\r\n    memory.observeMemory();\r\n\r\n    if (snapshot.running && !wasRunning) {\r\n      runner.run(true);\r\n    }\r\n  },\r\n}","import { RuntimeError, ReferenceError } from \"@/interpreter\";\r\nimport { state } from \"../../state\";\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { Register, TTransferSize, addressModeGroup } from \"@/constants\";\r\nimport { TransferNode, BlockTransferNode, SingleTransferNode, LabelNode, BranchNode } from \"@/syntax\";\r\nimport { TSimulatorSnapshot } from \"../../types\";\r\nimport { memory } from \".\";\r\nimport { snapshots } from \"../snapshots\";\r\nimport { interaction } from \"../interaction\";\r\n\r\nexport const text = {\r\n\tsetTextHeight: function (height: number) {\r\n    state.memory.textHeight = height;\r\n  },\r\n\r\n  setInstructions: function (instructions: TInstructionNode[]) {\r\n    state.memory.text = instructions;\r\n    this.validate();\r\n\r\n    instructions.forEach((instruction, index) => {\r\n      try {\r\n        const bitcode = instruction.assemble().bitcode;\r\n        const deccode = parseInt(bitcode.join(\"\"), 2);\r\n\r\n        state.memory.wordView.set([deccode], index);\r\n      }\r\n      catch (e) { \r\n        console.warn(`skipping instruction: ${instruction.lineNumber} : ${instruction.text}`);\r\n      }\r\n    });\r\n\r\n    state.currentInstruction = undefined;\r\n    state.cpu.tick = 0;\r\n\r\n    memory.observeMemory();\r\n    snapshots.takeSnapshot();\r\n  },\r\n  \r\n\tinstruction: function (offset: number) : TInstructionNode {\r\n    if (offset > state.memory.textHeight) {\r\n      throw new RuntimeError(`SIGSEG: Segmentation fault.`, [], -1);\r\n    }\r\n    if (offset % 4 !== 0) {\r\n      throw new RuntimeError(\"SIGBUS: Bus error - misaligned access.\", [], -1);\r\n    }\r\n\r\n    return state.memory.text[offset / 4];\r\n  },\r\n\r\n  addLabel: function (label: string, address: number) {\r\n    Vue.set(state.memory.textMap, label, address);\r\n  },\r\n\r\n\thasLabel: function (label: string) : boolean {\r\n    return state.memory.textMap[label] !== undefined;\r\n  },\r\n\r\n  label: function (label: string) : number {\r\n    return state.memory.textMap[label];\r\n  },\r\n\r\n\tsetCurrentInstruction: function (instruction: TInstructionNode) {\r\n    state.currentInstruction = instruction;\r\n  },\r\n\r\n\tsetExecuted: function (executed: boolean) {\r\n    state.wasExecuted = executed;\r\n  },\r\n\r\n  validate: function () {\r\n    state.memory.text.forEach(ins => {\r\n      if (ins instanceof LabelNode) {\r\n        if (state.memory.textMap[ins.identifier] === undefined) {\r\n          interaction.addError(new ReferenceError(`Missing reference to '${ins.identifier}'.`, ins.statement, ins.lineNumber, 1));\r\n        }\r\n      }\r\n      else if (ins instanceof BranchNode) {\r\n        if (typeof ins.Rd === 'string') {\r\n          if (state.memory.textMap[ins.Rd] === undefined) {\r\n            interaction.addError(new ReferenceError(`Missing reference to '${ins.Rd}'.`, ins.statement, ins.lineNumber, 1));\r\n          }\r\n        }\r\n      }\r\n      else if (ins instanceof SingleTransferNode && ins.isLiteral) {\r\n        if (state.memory.dataTable[ins.literal] === undefined) {\r\n          interaction.addError(new ReferenceError(`Missing reference to '${ins.literal}'.`, ins.statement, ins.lineNumber, 3));\r\n        }\r\n      }\r\n    });\r\n  },\r\n}","import { AssemblyError, RuntimeError } from \"@/interpreter\";\r\nimport { state as state } from \"../../state\";\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { Register, TTransferSize, addressModeGroup } from \"@/constants\";\r\nimport { TransferNode, BlockTransferNode, SingleTransferNode } from \"@/syntax\";\r\nimport { TAllocation, TDeclaration, TSimulatorSnapshot } from \"../../types\";\r\nimport { SimulatorState } from \"@/simulator\";\r\n\r\nexport const data = {\r\n  allocateData: function (declarations: TDeclaration[], height: number) {\r\n    const data = new Uint8Array(new ArrayBuffer(state.memory.size)); \r\n    const table: Record<string, number> = {};\r\n    const map = new Map<number, TDeclaration>();\r\n\r\n    declarations.forEach(e => {\r\n      data.set(e.data, e.offset);\r\n\r\n      const address = state.memory.textHeight + e.offset;\r\n      table[e.label] = address; \r\n      map.set(address, e);\r\n    });\r\n\r\n    try {\r\n      state.memory.byteView?.set(data.slice(0, height), state.memory.textHeight);\r\n    }\r\n    catch (e) {\r\n      SimulatorState.addError(new AssemblyError('Not enough memory to assemble program in editor.', [], -1, -1));\r\n    }\r\n\r\n    state.memory.dataHeight = Math.ceil(height / 4) * 4;\r\n    state.memory.dataTable = table;\r\n    state.memory.dataMap = map;\r\n  },\r\n\r\n  dataLabel: function (label: string) : number {\r\n    return state.memory.dataTable[label];\r\n  }\r\n}","import { state } from './state';\r\n\r\nexport const getters = {\r\n  running: () => state.running,\r\n  paused: () => state.paused,\r\n  step: () => state.step,\r\n  delay: () => state.delay,\r\n\r\n  currentTick: () => state.cpu.tick,\r\n  registers: () => state.cpu.observableRegisters,\r\n  cpsr: () => state.cpu.cpsr,\r\n  memory: () => ({\r\n    ...state.memory,\r\n    exitPoint: state.memory.size + 4\r\n  }),\r\n\r\n  byteView: () => state.memory.observableByteView,\r\n  wordView: () => state.memory.observableWordView,\r\n  heapBase: () => state.memory.textHeight + state.memory.dataHeight,\r\n\r\n  // currentInstruction: () => actions.instruction(data.previousPC),\r\n  currentInstruction: () => state.currentInstruction,\r\n  previousPC: () => state.previousPC,\r\n  wasExecuted: () => state.wasExecuted,\r\n\r\n  interrupted: () => state.interrupted,\r\n  stdin: () => state.stdin,\r\n\r\n  output: () => state.output,\r\n  errors: () => state.errors,\r\n  breakpoints: () => state.breakpoints,\r\n\r\n  hoveredError: () => state.hoveredError,\r\n  exitStatus: () => state.exitStatus,\r\n\r\n  snapshots: () => state.snapshots,\r\n  vue: () => state.vue\r\n}","import { RuntimeError } from \"@/interpreter\";\r\nimport { state } from \"../../state\";\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { Register, TTransferSize, addressModeGroup } from \"@/constants\";\r\nimport { TransferNode, BlockTransferNode, SingleTransferNode } from \"@/syntax\";\r\nimport { TAllocation, TSimulatorSnapshot } from \"../../types\";\r\nimport { getters } from \"@/simulator/getters\";\r\nimport { memory } from \".\";\r\n\r\nexport const heap = {\r\n\tmalloc: function (size: number): number {\r\n\t\tsize = memory.align(size);\r\n\r\n\t\tlet ptr = findFirstSpace(size);\r\n\r\n\t\t// if a free block exists that can hold $size, split the block\r\n\t\t// else allocate to the top of the heap\r\n\t\tif (ptr) {\r\n\t\t\tptr = splitBlock(ptr, size);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tptr = allocate(getters.heapBase() + state.memory.heapHeight, size);\r\n\t\t}\r\n\r\n\t\treturn ptr;\r\n\t},\r\n\r\n\tcalloc: function (nmemb: number, size: number): number {\r\n\t\tsize = memory.align(nmemb * size);\r\n\r\n\t\tlet ptr = findFirstSpace(size);\r\n\r\n\t\t// if a free block exists that can hold $size, split the block\r\n\t\t// else allocate to the top of the heap\r\n\t\tif (ptr) {\r\n\t\t\tsplitBlock(ptr, size);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tptr = allocate(getters.heapBase() + state.memory.heapHeight, size);\r\n\t\t}\r\n\r\n\t\t// if allocation succeeded, set bytes in allocated range to 0\r\n\t\tif (ptr !== 0) {\r\n\t\t\tclear(ptr, size);\r\n\t\t\tmemory.observeMemory();\r\n\t\t}\r\n\r\n\t\treturn ptr;\r\n\t},\r\n\r\n\t/**\r\n\t * TODO: implement\r\n\t * @param ptr \r\n\t * @param size \r\n\t * @returns \r\n\t */\r\n\trealloc: function (ptr: number, size: number): number {\r\n\t\treturn 0;\r\n\t},\r\n\r\n\tfree: function (ptr: number) {\r\n\t\tif (!state.memory.heapMap.has(ptr)) return;\r\n\r\n\t\t// set block to freed\r\n\t\tlet block = state.memory.heapMap.get(ptr)!;\r\n\t\tstate.memory.heapMap.set(ptr, { ...block, allocated: false })\r\n\r\n\t\t// TODO:\r\n\t\t// mergeEmptyBlocks()\r\n\r\n\t\tthis.setHeapHeight();\r\n\t},\r\n\r\n\tsetHeapHeight() {\r\n\t\tlet top = getters.heapBase();\r\n\t\r\n\t\tstate.memory.heapMap.forEach((allocation: TAllocation, ptr: number) => {\r\n\t\t\t// if (!allocation.allocated) return;\r\n\t\t\tif (top > ptr + allocation.size) return;\r\n\t\t\t\r\n\t\t\ttop = ptr + allocation.size;\r\n\t\t});\r\n\t\r\n\t\tstate.memory.heapHeight = top - state.memory.textHeight - state.memory.dataHeight;\r\n\t\tstate.memory.heapMap = new Map(state.memory.heapMap)\r\n\t}\r\n}\r\n\r\n\r\n/**************************************************************\r\n * Helper functions\r\n */\r\n\r\n/**\r\n * \r\n * @param size \r\n * @returns \r\n */\r\nfunction findFirstSpace(size: number): number | null {\r\n\tlet firstPtr: number | null = null;\r\n\r\n\t// find pointer of first available space that is large enough to hold $size\r\n\tfor (let [ptr, allocation] of state.memory.heapMap) {\r\n\t\tif (allocation.allocated) continue;\r\n\t\tif (size > allocation.size) continue;\r\n\r\n\t\tfirstPtr = ptr;\r\n\t\tbreak;\r\n\t}\r\n\r\n\treturn firstPtr;\r\n}\r\n\r\n// TODO: implement mergeEmptyBlocks()\r\nfunction mergeEmptyBlocks() {\r\n\tconst orderedBlocks = Array.from(state.memory.heapMap)\r\n\t\t.sort(([aPtr, _a], [bPtr, _b]) => {\r\n\t\t\treturn aPtr - bPtr;\r\n\t\t});\r\n\r\n\t// remove free blocks at the top\r\n\tfor (const block of orderedBlocks.slice().reverse()) {\r\n\t\tif (block[1].allocated) break;\r\n\t\tstate.memory.heapMap.delete(block[0]);\r\n\t}\r\n\r\n\tconst groupedEmptyBlocks = orderedBlocks\r\n\t\t.reduce((groups, block, index, blocks) => {\r\n\t\t\tconst lastGroup = groups[groups.length - 1];\r\n\t\t\tconst lastBlock = blocks[index - 1];\r\n  \r\n\t\t\tif(!lastGroup || (!block[1].allocated && !(lastBlock?.[1].allocated))) {\r\n\t\t\t\tgroups.push([]);\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tif (!block[1].allocated) {\r\n\t\t\t\tgroups[groups.length - 1].push(block);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn groups; \r\n\t\t}, [] as [number, TAllocation][][])\r\n\t\t.filter(group => group.length > 1)\r\n\r\n\t// TODO:\r\n\t// finish this\r\n\t// \t\t- merge groups of empty blocks into single empty blocks\r\n\t//\t\t- apply changes to heap map\r\n}\r\n\r\nfunction splitBlock(ptr: number, size: number): number {\r\n\tlet block = state.memory.heapMap.get(ptr)!;\r\n\tlet leftoverSize = block.size - size;\r\n\r\n\t// allocate new block\r\n\tptr = allocate(ptr, size);\r\n\r\n\t// allocate leftover block if there is space remaining\r\n\tif (leftoverSize > 0) allocate(ptr + size, leftoverSize, true);\r\n\r\n\treturn ptr;\r\n}\r\n\r\nfunction allocate(ptr: number, size: number, free?: boolean): number {\r\n\t// if there is no space - return a null (0)\r\n\tif (ptr + size > state.memory.size - state.memory.stackHeight) return 0;\r\n\r\n\tstate.memory.heapMap.set(ptr, { size, allocated: !free });\r\n\r\n\t// update heap height for simulator\r\n\tmemory.setHeapHeight();\r\n\r\n\treturn ptr;\r\n}\r\n\r\nfunction clear(ptr: number, size: number) {\r\n\tconst range = new Array(size).fill(0);\r\n\tstate.memory.byteView.set(range, ptr);\r\n}","import { RuntimeError } from \"@/interpreter\";\r\nimport { state } from \"../../state\";\r\nimport Vue from 'vue';\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { Register, TTransferSize, addressModeGroup } from \"@/constants\";\r\nimport { TransferNode, BlockTransferNode, SingleTransferNode } from \"@/syntax\";\r\nimport { TSimulatorSnapshot } from \"../../types\";\r\n\r\nexport const stack = {\r\n\tsetStackHeight: function (height: number) {\r\n    state.memory.stackHeight = height;\r\n  }\r\n}","import { common } from \"./common\"\r\nimport { text } from \"./text\";\r\nimport { data } from \"./data\";\r\nimport { heap } from \"./heap\";\r\nimport { stack } from \"./stack\";\r\n\r\nexport const memory = {\r\n    ...common,\r\n    ...text,\r\n    ...data,\r\n    ...heap,\r\n    ...stack\r\n}","import { Register } from \"@/constants\";\r\nimport { Queue } from \"@/utilities\";\r\nimport { state } from \"../state\";\r\nimport Vue from 'vue';\r\nimport { TAllocation, TSimulatorSnapshot } from \"../types\";\r\nimport { cpu } from \"./cpu\";\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { memory } from \"./memory\";\r\nimport { LabelNode, BranchNode, SingleTransferNode } from \"@/syntax\";\r\nimport { snapshots } from \"./snapshots\";\r\nimport { interaction } from \"./interaction\";\r\nimport { ReferenceError } from \"@/interpreter\";\r\n\r\n\r\nexport const init = {\r\n\tinit: function (memSize?: number) {\r\n\t\tstate.running = false;\r\n\t\tstate.paused = false;\r\n\t\tstate.step = false;\r\n\r\n\t\tthis.initMemory(memSize);\r\n\t\tthis.reset();\r\n\t},\r\n\r\n  setVueInstance: function (vue: Vue) {\r\n    state.vue = vue;\r\n  },\r\n\r\n\treset: function () {\r\n\t\tstate.cpu.registers = new Uint32Array(new ArrayBuffer(4 * 16));\r\n\t\tcpu.setRegister(Register.SP, state.memory.size);\r\n\t\tcpu.setRegister(Register.LR, state.memory.size + 4);    // one word after total memory\r\n\t\tcpu.observeRegisters();\r\n\r\n\t\tstate.cpu.tick = 0;\r\n\t\tstate.cpu.cpsr = Vue.observable([false, false, false, false]);\r\n\r\n    state.stdin = undefined;\r\n    state.interrupted = false;\r\n\t\tstate.output = [\"\"];\r\n\t\tstate.exitStatus = undefined;\r\n\r\n\t\tstate.currentInstruction = undefined;\r\n\t},\r\n\r\n\tinitMemory: function (memSize?: number) {\r\n    if (memSize !== undefined) state.memory.size = memSize;\r\n\r\n    state.memory.textHeight = 0;\r\n    state.memory.textMap = {};\r\n\r\n    state.memory.dataHeight = 0;\r\n    state.memory.dataTable = {};\r\n\r\n    state.memory.heapHeight = 0;\r\n    state.memory.heapMap = new Map<number, TAllocation>();\r\n\r\n    state.memory.stackHeight = 0;\r\n    \r\n    state.memory.text = [];\r\n    state.memory.buffer = new ArrayBuffer(state.memory.size);\r\n    state.memory.byteView = new Uint8Array(state.memory.buffer);\r\n    state.memory.wordView = new Uint32Array(state.memory.buffer);\r\n\r\n    const uninitialisedMemory = Array.from({length: state.memory.size}, () => Math.floor(Math.random() * 256));\r\n    uninitialisedMemory.forEach((byte, address) => {\r\n      state.memory.byteView[address] = byte;\r\n    });\r\n\r\n    // observe memory to make ArrayBuffer views Vue.Observable\r\n    memory.observeMemory();\r\n  \r\n    state.errors = [];\r\n    state.exitStatus = undefined;\r\n\r\n    state.snapshots = new Queue<TSimulatorSnapshot>(500, true);\r\n  },\r\n\r\n\tsetEntryPoint: function () {\r\n    if (memory.hasLabel(\"main\")) cpu.setRegister(Register.PC, memory.label(\"main\"));\r\n  }\r\n}","import { state } from \"../state\";\r\nimport { TSimulatorSnapshot } from \"../types\";\r\nimport clone  from 'lodash.clonedeep';\r\nimport { memory } from \"./memory\";\r\nimport { runner } from \"./runner\";\r\nimport { interaction } from \"./interaction\";\r\n\r\nexport const io = {\r\n  interrupt: async function () {\r\n    state.stdin = undefined;\r\n    state.interrupted = true;\r\n\r\n    return await this.waitForIO();\r\n  },\r\n\r\n  setStdin: function (stdin: string) {\r\n    state.stdin = stdin;\r\n    interaction.addOutput(stdin);\r\n    \r\n    state.interrupted = false;\r\n  },\r\n\r\n  waitForIO: async function () {\r\n    while (state.interrupted) {\r\n      await new Promise(r => setTimeout(r, 100));\r\n    }\r\n\r\n    return;\r\n  }\r\n}","import { init } from \"./init\";\r\nimport { cpu } from \"./cpu\";\r\nimport { interaction } from \"./interaction\";\r\nimport { memory } from \"./memory\";\r\nimport { snapshots } from \"./snapshots\";\r\nimport { io } from \"./io\";\r\n\r\nexport const actions = {\r\n    ...init,\r\n    ...cpu,\r\n    ...memory,\r\n    ...interaction,\r\n    ...io,\r\n    ...snapshots\r\n}","import { actions } from \"./actions\"\r\nimport { getters } from \"./getters\"\r\nexport { TSimulatorSnapshot } from './types';\r\n\r\nexport const SimulatorState = {\r\n  ...actions,\r\n  ...getters\r\n}\r\n","import { SimulatorState } from '@/simulator';\r\nimport { AllocationNode, BiOperandNode, BlockTransferNode, BranchNode, DirectiveNode, InstructionNode, LabelNode, ShiftNode, SingleTransferNode, SyntaxNode, TriOperandNode } from '@/syntax';\r\nimport { languages, Token, tokenize } from 'prismjs';\r\nimport { AssemblyError, IriscError, SyntaxError } from './error';\r\nimport { Directive, callAddress } from '@/constants';\r\nimport { TAllocation, TDeclaration } from '@/simulator/types';\r\n\r\nconst state = {\r\n  get memory() { return SimulatorState.memory(); }\r\n}\r\n\r\n/**\r\n * \r\n * @param program \r\n * @returns \r\n */\r\nfunction parse(program: string) : Token[][] {\r\n  return tokenize(program, languages.armv7).reduce((a, e) => {\r\n\r\n    // capture important tokens\r\n    if (e instanceof Token) {\r\n      // create new line if end token (\\n)\r\n      if (e.type === \"end\") a.push([]);\r\n\r\n      // push valid token into current line\r\n      else if (![\"whitespace\", \"line-comment\"].includes(e.type)) {\r\n        // do not convert to lower case if string\r\n        if (e.type === \"string\") {\r\n          a[a.length - 1].push(e); \r\n        }\r\n\r\n        // convert all other tokens to lower case for compilation\r\n        else {\r\n          a[a.length - 1].push({\r\n            ...e,\r\n            content: (e.content as string).toLowerCase()\r\n          }); \r\n        }\r\n        \r\n      }\r\n    }\r\n\r\n    // reduce\r\n    return a;\r\n  }, [[]] as Token [][]);\r\n}\r\n\r\n/**\r\n * \r\n * @param lines \r\n * @returns \r\n */\r\nfunction compile(lines: Token[][]): SyntaxNode[] {\r\n  return lines.reduce((a: SyntaxNode[], e: Token[], i: number) => {\r\n    try {\r\n      const node: SyntaxNode | null = compileOne(e, i);\r\n      if (node !== null) a.push(node);\r\n    }\r\n    catch (e) {\r\n      if (e instanceof IriscError) {\r\n        SimulatorState.addError(e);\r\n      }\r\n    }\r\n    \r\n    return a;\r\n  }, [] as SyntaxNode[]);\r\n}\r\n\r\n/**\r\n * \r\n * @param line \r\n * @param lineNumber \r\n * @returns \r\n */\r\nfunction compileOne(line: Token[], lineNumber: number) : SyntaxNode | null {\r\n  if (line.length === 0) return null;\r\n\r\n  if (line[0].type === \"bi-operand\") {\r\n    return new BiOperandNode(line, lineNumber, 0);\r\n  }\r\n  if (line[0].type === \"tri-operand\") {\r\n    return new TriOperandNode(line, lineNumber, 0);\r\n  }\r\n  if (line[0].type === \"shift\") {\r\n    return new ShiftNode(line, lineNumber, 0);\r\n  }\r\n  if (line[0].type === \"branch\") {\r\n    return new BranchNode(line, lineNumber, 0);\r\n  }\r\n  if (line[0].type === \"label\") {\r\n    if (line.length === 1) return new LabelNode(line, lineNumber, 0);\r\n    else return new AllocationNode(line, lineNumber, 0);\r\n  }\r\n\r\n  if (line[0].type === \"directive\") {\r\n    return new DirectiveNode(line, lineNumber, 0);\r\n  }\r\n\r\n  if (line[0].type === \"single-transfer\") {\r\n    return new SingleTransferNode(line, lineNumber, 0);\r\n  }\r\n  if (line[0].type === \"block-transfer\" ||\r\n      line[0].type === \"stack-transfer\") {\r\n    return new BlockTransferNode(line, lineNumber, 0);\r\n  }\r\n  // if (line[0].type === \"stack-transfer\") {\r\n\r\n  // }\r\n\r\n  // special error for labels with missing \":\" - a common mistake\r\n  if (line[0].type === \"op-label\") {\r\n    throw new SyntaxError(\"Invalid label-like token detected, did you forget a colon?\", line, lineNumber, 0);\r\n  }\r\n\r\n  throw new SyntaxError(\"Unrecognised instruction.\", line, lineNumber, 0);\r\n}\r\n\r\n/**\r\n * \r\n * @param nodes \r\n */\r\nfunction load(nodes: (SyntaxNode | null)[]) {\r\n  enum Mode { Text, Data }\r\n\r\n  const instructions: InstructionNode[] = [];\r\n\r\n  let dataHeight: number = 0;\r\n  const declarationTable = [] as TDeclaration[];\r\n\r\n  let mode: Mode = Mode.Text;\r\n  nodes.forEach((node, index) => {\r\n    if (node instanceof DirectiveNode) {\r\n      switch (node.directive) {\r\n        case Directive.TEXT:\r\n          mode = Mode.Text;\r\n          break;\r\n        case Directive.DATA:\r\n          mode = Mode.Data;\r\n          break;\r\n        case Directive.EXTERN:\r\n          SimulatorState.addLabel(node.identifier!, callAddress);\r\n          break;\r\n        case Directive.BALIGN:\r\n          // align current heap height to next multiple of .balign parameter\r\n          dataHeight = Math.ceil(dataHeight / node.value) * node.value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    else if (node instanceof AllocationNode) {\r\n      if (mode !== Mode.Data) {\r\n        SimulatorState.addError(new AssemblyError(\"Cannot declare data allocations outside of the .data section.\", node.statement, node.lineNumber, -1));\r\n      }\r\n\r\n      const dataLabelExists = declarationTable.some(e => e.label === node.identifier);\r\n      if (SimulatorState.hasLabel(node.identifier) || dataLabelExists) {\r\n        SimulatorState.addError(new AssemblyError(`Cannot declare multiple labels with the same name: '${node.identifier}'.`, node.statement, node.lineNumber, -1));\r\n      }\r\n\r\n      declarationTable.push({\r\n        label: node.identifier,\r\n        type: node.type,\r\n        data: node.data,\r\n        size: node.data.length,\r\n        offset: dataHeight\r\n      });\r\n\r\n      dataHeight = dataHeight + node.data.length;\r\n    }\r\n\r\n    else if (node instanceof LabelNode) {\r\n      if (mode !== Mode.Text) {\r\n        SimulatorState.addError(new AssemblyError(\"Cannot declare branchable labels outside of the .text section.\", node.statement, node.lineNumber, 0));\r\n      }\r\n\r\n      const dataLabelExists = declarationTable.some(e => e.label === node.identifier);\r\n      if (SimulatorState.hasLabel(node.identifier) || dataLabelExists) {\r\n        SimulatorState.addError(new AssemblyError(`Cannot declare multiple labels with the same name: '${node.identifier}'.`, node.statement, node.lineNumber, 0));\r\n      }\r\n      else SimulatorState.addLabel(node.identifier, instructions.length * 4);\r\n    }\r\n\r\n    else if (node instanceof InstructionNode) {\r\n      if (mode !== Mode.Text) {\r\n        SimulatorState.addError(new AssemblyError(\"Cannot declare instructions outside of the .text section.\", node.statement, node.lineNumber, 0));\r\n      }\r\n\r\n      instructions.push(node);\r\n    }\r\n  });\r\n\r\n  // pad end of instructions with nop if not 8 byte aligned\r\n  if (instructions.length % 2 !== 0) {\r\n    const nop = \"andeq r0, r0, r0\";\r\n    const tokens = parse(nop) as Token[][];\r\n    \r\n    const nopnode = compileOne(tokens[0], -1) as InstructionNode;\r\n    instructions.push(nopnode);\r\n  }\r\n\r\n  // set all simulator data\r\n  SimulatorState.setTextHeight(instructions.length * 4);\r\n  SimulatorState.allocateData(declarationTable, dataHeight);\r\n  SimulatorState.setInstructions(instructions);  \r\n}\r\n\r\n/**\r\n * Wrapper function to perform a common set of the assembly functions.\r\n * @param program \r\n */\r\nfunction build(program: string) : void {\r\n  SimulatorState.stop();\r\n  SimulatorState.initMemory();\r\n  SimulatorState.removeBreakpoints();\r\n\r\n  const lines = parse(program);\r\n  const nodes = compile(lines);\r\n\r\n  load(nodes);\r\n}\r\n\r\nexport { parse, compile, compileOne, load, build };\r\n","var util = require('util');\r\n\r\nvar tokenize = function(/*String*/ str, /*RegExp*/ re, /*Function?*/ parseDelim, /*Object?*/ instance){\r\n  // summary:\r\n  //    Split a string by a regular expression with the ability to capture the delimeters\r\n  // parseDelim:\r\n  //    Each group (excluding the 0 group) is passed as a parameter. If the function returns\r\n  //    a value, it's added to the list of tokens.\r\n  // instance:\r\n  //    Used as the \"this' instance when calling parseDelim\r\n  var tokens = [];\r\n  var match, content, lastIndex = 0;\r\n  while((match = re.exec(str))){\r\n    content = str.slice(lastIndex, re.lastIndex - match[0].length);\r\n    if(content.length){\r\n      tokens.push(content);\r\n    }\r\n    if(parseDelim){\r\n      var parsed = parseDelim.apply(instance, match.slice(1).concat(tokens.length));\r\n      if(typeof parsed != 'undefined'){\r\n        if(parsed.specifier === '%'){\r\n          tokens.push('%');\r\n        }else{\r\n          tokens.push(parsed);\r\n        }\r\n      }\r\n    }\r\n    lastIndex = re.lastIndex;\r\n  }\r\n  content = str.slice(lastIndex);\r\n  if(content.length){\r\n    tokens.push(content);\r\n  }\r\n  return tokens;\r\n};\r\n\r\nvar Formatter = function(/*String*/ format){\r\n  this._mapped = false;\r\n  this._format = format;\r\n  this._tokens = tokenize(format, this._re, this._parseDelim, this);\r\n};\r\n\r\n// The old regexp `/\\%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-\\#]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?[hlL]?([\\%bscdeEfFgGioOuxX])/` has a cubic worst-case time complexity behavior due to overlapping capture groups `([0 +\\-\\#]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?`. And a pump string of 0 can be consumed by `([0 +\\-\\#]*), (\\*|\\d+)?, or (\\*|\\d+)?`.\r\n// The solution replace the sub-regexp (\\*|\\d+)?(\\.)?(\\*|\\d+)? with the sub-regexp `(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?`, see the figure in [#32](https://github.com/adaltas/node-printf/pull/32)\r\n// There are also performance improvement, see in [#31](https://github.com/adaltas/node-printf/issues/31#issuecomment-776731490)\r\nFormatter.prototype._re = /%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%bscdeEfFgGioOuxX])/g;\r\nFormatter.prototype._parseDelim = function(mapping, intmapping, flags, minWidth, period, precision, specifier){\r\n  if(mapping){\r\n    this._mapped = true;\r\n  }\r\n  return {\r\n    mapping: mapping,\r\n    intmapping: intmapping,\r\n    flags: flags,\r\n    _minWidth: minWidth, // May be dependent on parameters\r\n    period: period,\r\n    _precision: precision, // May be dependent on parameters\r\n    specifier: specifier\r\n  };\r\n};\r\nFormatter.prototype._specifiers = {\r\n  b: {\r\n    base: 2,\r\n    isInt: true\r\n  },\r\n  o: {\r\n    base: 8,\r\n    isInt: true\r\n  },\r\n  x: {\r\n    base: 16,\r\n    isInt: true\r\n  },\r\n  X: {\r\n    extend: ['x'],\r\n    toUpper: true\r\n  },\r\n  d: {\r\n    base: 10,\r\n    isInt: true\r\n  },\r\n  i: {\r\n    extend: ['d']\r\n  },\r\n  u: {\r\n    extend: ['d'],\r\n    isUnsigned: true\r\n  },\r\n  c: {\r\n    setArg: function(token){\r\n      if(!isNaN(token.arg)){\r\n        var num = parseInt(token.arg);\r\n        if(num < 0 || num > 127){\r\n          throw new Error('invalid character code passed to %c in printf');\r\n        }\r\n        token.arg = isNaN(num) ? '' + num : String.fromCharCode(num);\r\n      }\r\n    }\r\n  },\r\n  s: {\r\n    setMaxWidth: function(token){\r\n      token.maxWidth = (token.period == '.') ? token.precision : -1;\r\n    }\r\n  },\r\n  e: {\r\n    isDouble: true,\r\n    doubleNotation: 'e'\r\n  },\r\n  E: {\r\n    extend: ['e'],\r\n    toUpper: true\r\n  },\r\n  f: {\r\n    isDouble: true,\r\n    doubleNotation: 'f'\r\n  },\r\n  F: {\r\n    extend: ['f']\r\n  },\r\n  g: {\r\n    isDouble: true,\r\n    doubleNotation: 'g'\r\n  },\r\n  G: {\r\n    extend: ['g'],\r\n    toUpper: true\r\n  },\r\n  O: {\r\n    isObject: true\r\n  }\r\n};\r\nFormatter.prototype.format = function(/*mixed...*/ filler){\r\n  if(this._mapped && typeof filler != 'object'){\r\n    throw new Error('format requires a mapping');\r\n  }\r\n\r\n  var str = '';\r\n  var position = 0;\r\n  for(var i = 0, token; i < this._tokens.length; i++){\r\n    token = this._tokens[i];\r\n\r\n    if(typeof token == 'string'){\r\n      str += token;\r\n    }else{\r\n      if(this._mapped){\r\n        // Identify value of property defined in `token.mapping`\r\n        var tokens = token.mapping.split('.');\r\n        var value = filler;\r\n        for (var j = 0, c = tokens.length; j < c; j++) {\r\n          value = value[tokens[j]];\r\n          if (typeof value === 'undefined') {\r\n            break\r\n          }\r\n        }\r\n        if(typeof value == 'undefined'){\r\n          throw new Error('missing key \\'' + token.mapping + '\\'');\r\n        }\r\n        token.arg = value;\r\n      }else{\r\n        if(token.intmapping){\r\n          position = parseInt(token.intmapping) - 1;\r\n        }\r\n        if(position >= arguments.length){\r\n          throw new Error('got ' + arguments.length + ' printf arguments, insufficient for \\'' + this._format + '\\'');\r\n        }\r\n        token.arg = arguments[position++];\r\n      }\r\n\r\n      if(!token.compiled){\r\n        token.compiled = true;\r\n        token.sign = '';\r\n        token.zeroPad = false;\r\n        token.rightJustify = false;\r\n        token.alternative = false;\r\n\r\n        var flags = {};\r\n        for(var fi = token.flags.length; fi--;){\r\n          var flag = token.flags.charAt(fi);\r\n          flags[flag] = true;\r\n          switch(flag){\r\n            case ' ':\r\n              token.sign = ' ';\r\n              break;\r\n            case '+':\r\n              token.sign = '+';\r\n              break;\r\n            case '0':\r\n              token.zeroPad = (flags['-']) ? false : true;\r\n              break;\r\n            case '-':\r\n              token.rightJustify = true;\r\n              token.zeroPad = false;\r\n              break;\r\n            case '#':\r\n              token.alternative = true;\r\n              break;\r\n            default:\r\n              throw Error('bad formatting flag \\'' + token.flags.charAt(fi) + '\\'');\r\n          }\r\n        }\r\n\r\n        token.minWidth = (token._minWidth) ? parseInt(token._minWidth) : 0;\r\n        token.maxWidth = -1;\r\n        token.toUpper = false;\r\n        token.isUnsigned = false;\r\n        token.isInt = false;\r\n        token.isDouble = false;\r\n        token.isObject = false;\r\n        token.precision = 1;\r\n        if(token.period == '.'){\r\n          if(token._precision){\r\n            token.precision = parseInt(token._precision);\r\n          }else{\r\n            token.precision = 0;\r\n          }\r\n        }\r\n\r\n        var mixins = this._specifiers[token.specifier];\r\n        if(typeof mixins == 'undefined'){\r\n          throw new Error('unexpected specifier \\'' + token.specifier + '\\'');\r\n        }\r\n        if(mixins.extend){\r\n          var s = this._specifiers[mixins.extend];\r\n          for(var k in s){\r\n            mixins[k] = s[k];\r\n          }\r\n          delete mixins.extend;\r\n        }\r\n        for(var l in mixins){\r\n          token[l] = mixins[l];\r\n        }\r\n      }\r\n\r\n      if(typeof token.setArg == 'function'){\r\n        token.setArg(token);\r\n      }\r\n\r\n      if(typeof token.setMaxWidth == 'function'){\r\n        token.setMaxWidth(token);\r\n      }\r\n\r\n      if(token._minWidth == '*'){\r\n        if(this._mapped){\r\n          throw new Error('* width not supported in mapped formats');\r\n        }\r\n        token.minWidth = parseInt(arguments[position++]);\r\n        if(isNaN(token.minWidth)){\r\n          throw new Error('the argument for * width at position ' + position + ' is not a number in ' + this._format);\r\n        }\r\n        // negative width means rightJustify\r\n        if (token.minWidth < 0) {\r\n          token.rightJustify = true;\r\n          token.minWidth = -token.minWidth;\r\n        }\r\n      }\r\n\r\n      if(token._precision == '*' && token.period == '.'){\r\n        if(this._mapped){\r\n          throw new Error('* precision not supported in mapped formats');\r\n        }\r\n        token.precision = parseInt(arguments[position++]);\r\n        if(isNaN(token.precision)){\r\n          throw Error('the argument for * precision at position ' + position + ' is not a number in ' + this._format);\r\n        }\r\n        // negative precision means unspecified\r\n        if (token.precision < 0) {\r\n          token.precision = 1;\r\n          token.period = '';\r\n        }\r\n      }\r\n      if(token.isInt){\r\n        // a specified precision means no zero padding\r\n        if(token.period == '.'){\r\n          token.zeroPad = false;\r\n        }\r\n        this.formatInt(token);\r\n      }else if(token.isDouble){\r\n        if(token.period != '.'){\r\n          token.precision = 6;\r\n        }\r\n        this.formatDouble(token);\r\n      }else if(token.isObject){\r\n        this.formatObject(token);\r\n      }\r\n      this.fitField(token);\r\n      str += '' + token.arg;\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\nFormatter.prototype._zeros10 = '0000000000';\r\nFormatter.prototype._spaces10 = '          ';\r\nFormatter.prototype.formatInt = function(token) {\r\n  var i = parseInt(token.arg);\r\n  if(!isFinite(i)){ // isNaN(f) || f == Number.POSITIVE_INFINITY || f == Number.NEGATIVE_INFINITY)\r\n    // allow this only if arg is number\r\n    if(typeof token.arg != 'number'){\r\n      throw new Error('format argument \\'' + token.arg + '\\' not an integer; parseInt returned ' + i);\r\n    }\r\n    //return '' + i;\r\n    i = 0;\r\n  }\r\n\r\n  // if not base 10, make negatives be positive\r\n  // otherwise, (-10).toString(16) is '-a' instead of 'fffffff6'\r\n  if(i < 0 && (token.isUnsigned || token.base != 10)){\r\n    i = 0xffffffff + i + 1;\r\n  }\r\n\r\n  if(i < 0){\r\n    token.arg = (- i).toString(token.base);\r\n    this.zeroPad(token);\r\n    token.arg = '-' + token.arg;\r\n  }else{\r\n    token.arg = i.toString(token.base);\r\n    // need to make sure that argument 0 with precision==0 is formatted as ''\r\n    if(!i && !token.precision){\r\n      token.arg = '';\r\n    }else{\r\n      this.zeroPad(token);\r\n    }\r\n    if(token.sign){\r\n      token.arg = token.sign + token.arg;\r\n    }\r\n  }\r\n  if(token.base == 16){\r\n    if(token.alternative){\r\n      token.arg = '0x' + token.arg;\r\n    }\r\n    token.arg = token.toUpper ? token.arg.toUpperCase() : token.arg.toLowerCase();\r\n  }\r\n  if(token.base == 8){\r\n    if(token.alternative && token.arg.charAt(0) != '0'){\r\n      token.arg = '0' + token.arg;\r\n    }\r\n  }\r\n};\r\nFormatter.prototype.formatDouble = function(token) {\r\n  var f = parseFloat(token.arg);\r\n  if(!isFinite(f)){ // isNaN(f) || f == Number.POSITIVE_INFINITY || f == Number.NEGATIVE_INFINITY)\r\n    // allow this only if arg is number\r\n    if(typeof token.arg != 'number'){\r\n      throw new Error('format argument \\'' + token.arg + '\\' not a float; parseFloat returned ' + f);\r\n    }\r\n    // C99 says that for 'f':\r\n    //   infinity -> '[-]inf' or '[-]infinity' ('[-]INF' or '[-]INFINITY' for 'F')\r\n    //   NaN -> a string  starting with 'nan' ('NAN' for 'F')\r\n    // this is not commonly implemented though.\r\n    //return '' + f;\r\n    f = 0;\r\n  }\r\n\r\n  switch(token.doubleNotation) {\r\n    case 'e': {\r\n      token.arg = f.toExponential(token.precision);\r\n      break;\r\n    }\r\n    case 'f': {\r\n      token.arg = f.toFixed(token.precision);\r\n      break;\r\n    }\r\n    case 'g': {\r\n      // C says use 'e' notation if exponent is < -4 or is >= prec\r\n      // ECMAScript for toPrecision says use exponential notation if exponent is >= prec,\r\n      // though step 17 of toPrecision indicates a test for < -6 to force exponential.\r\n      if(Math.abs(f) < 0.0001){\r\n        //print('forcing exponential notation for f=' + f);\r\n        token.arg = f.toExponential(token.precision > 0 ? token.precision - 1 : token.precision);\r\n      }else{\r\n        token.arg = f.toPrecision(token.precision);\r\n      }\r\n\r\n      // In C, unlike 'f', 'gG' removes trailing 0s from fractional part, unless alternative format flag ('#').\r\n      // But ECMAScript formats toPrecision as 0.00100000. So remove trailing 0s.\r\n      if(!token.alternative){\r\n        //print('replacing trailing 0 in \\'' + s + '\\'');\r\n        token.arg = token.arg.replace(/(\\..*[^0])0*e/, '$1e');\r\n        // if fractional part is entirely 0, remove it and decimal point\r\n        token.arg = token.arg.replace(/\\.0*e/, 'e').replace(/\\.0$/,'');\r\n      }\r\n      break;\r\n    }\r\n    default: throw new Error('unexpected double notation \\'' + token.doubleNotation + '\\'');\r\n  }\r\n\r\n  // C says that exponent must have at least two digits.\r\n  // But ECMAScript does not; toExponential results in things like '1.000000e-8' and '1.000000e+8'.\r\n  // Note that s.replace(/e([\\+\\-])(\\d)/, 'e$10$2') won't work because of the '$10' instead of '$1'.\r\n  // And replace(re, func) isn't supported on IE50 or Safari1.\r\n  token.arg = token.arg.replace(/e\\+(\\d)$/, 'e+0$1').replace(/e-(\\d)$/, 'e-0$1');\r\n\r\n  // if alt, ensure a decimal point\r\n  if(token.alternative){\r\n    token.arg = token.arg.replace(/^(\\d+)$/,'$1.');\r\n    token.arg = token.arg.replace(/^(\\d+)e/,'$1.e');\r\n  }\r\n\r\n  if(f >= 0 && token.sign){\r\n    token.arg = token.sign + token.arg;\r\n  }\r\n\r\n  token.arg = token.toUpper ? token.arg.toUpperCase() : token.arg.toLowerCase();\r\n};\r\nFormatter.prototype.formatObject = function(token) {\r\n  // If no precision is specified, then reset it to null (infinite depth).\r\n  var precision = (token.period === '.') ? token.precision : null;\r\n  // Historically, inspect was called with 3 options\r\n  // token.arg = util.inspect(token.arg, !token.alternative, precision, token.sign);\r\n  // Now using an object but not sure colors make any sense here\r\n  token.arg = util.inspect(token.arg, {\r\n    showHidden: !token.alternative,\r\n    depth: precision,\r\n    colors: token.sign,\r\n    compact: true\r\n  });\r\n};\r\nFormatter.prototype.zeroPad = function(token, /*Int*/ length) {\r\n  length = (arguments.length == 2) ? length : token.precision;\r\n  var negative = false;\r\n  if(typeof token.arg != \"string\"){\r\n    token.arg = \"\" + token.arg;\r\n  }\r\n  if (token.arg.substr(0,1) === '-') {\r\n    negative = true;\r\n    token.arg = token.arg.substr(1);\r\n  }\r\n\r\n  var tenless = length - 10;\r\n  while(token.arg.length < tenless){\r\n    token.arg = (token.rightJustify) ? token.arg + this._zeros10 : this._zeros10 + token.arg;\r\n  }\r\n  var pad = length - token.arg.length;\r\n  token.arg = (token.rightJustify) ? token.arg + this._zeros10.substring(0, pad) : this._zeros10.substring(0, pad) + token.arg;\r\n  if (negative) token.arg = '-' + token.arg;\r\n};\r\nFormatter.prototype.fitField = function(token) {\r\n  if(token.maxWidth >= 0 && token.arg.length > token.maxWidth){\r\n    token.arg = token.arg.substring(0, token.maxWidth);\r\n  }\r\n  if(token.zeroPad){\r\n    this.zeroPad(token, token.minWidth);\r\n    return;\r\n  }\r\n  this.spacePad(token);\r\n};\r\nFormatter.prototype.spacePad = function(token, /*Int*/ length) {\r\n  length = (arguments.length == 2) ? length : token.minWidth;\r\n  if(typeof token.arg != 'string'){\r\n    token.arg = '' + token.arg;\r\n  }\r\n  var tenless = length - 10;\r\n  while(token.arg.length < tenless){\r\n    token.arg = (token.rightJustify) ? token.arg + this._spaces10 : this._spaces10 + token.arg;\r\n  }\r\n  var pad = length - token.arg.length;\r\n  token.arg = (token.rightJustify) ? token.arg + this._spaces10.substring(0, pad) : this._spaces10.substring(0, pad) + token.arg;\r\n};\r\n\r\n// module.exports = function(){\r\n//   var args = Array.prototype.slice.call(arguments),\r\n//     stream, format;\r\n//   if(args[0] instanceof require('stream').Stream){\r\n//     stream = args.shift();\r\n//   }\r\n//   format = args.shift();\r\n//   var formatter = new Formatter(format);\r\n//   var string = formatter.format.apply(formatter, args);\r\n//   if(stream){\r\n//     stream.write(string);\r\n//   }else{\r\n//     return string;\r\n//   }\r\n// };\r\n\r\nexport const printf = function(){\r\n  var args = Array.prototype.slice.call(arguments),\r\n    stream, format;\r\n  if(args[0] instanceof require('stream').Stream){\r\n    stream = args.shift();\r\n  }\r\n  format = args.shift();\r\n  var formatter = new Formatter(format);\r\n  var string = formatter.format.apply(formatter, args);\r\n  if(stream){\r\n    stream.write(string);\r\n  }else{\r\n    return string;\r\n  }\r\n};\r\n\r\nexport const getTokens = function(format){\r\n  var formatter = new Formatter(format);\r\n  // return formatter._tokens.length;\r\n  return formatter._tokens.filter(token => typeof token != 'string');\r\n}","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { printf as cprintf, getTokens} from \"@/assets/printf/printf\";\r\nimport { RuntimeError } from \"@/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\n\r\nexport function printf(): boolean {\r\n\tlet stringArr: string[] = [];\r\n\r\n\t// fetch full string from simulator memory\r\n\tlet index = state.registers[Register.R0];\r\n\twhile (state.memory.byteView[index] !== 0) {\r\n\t\tstringArr.push(String.fromCharCode(state.memory.byteView[index]));\r\n\t\tindex++;\r\n\t}\r\n\r\n\t// join char array\r\n\tlet formatStr = stringArr.join(\"\");\r\n\r\n\t// get replaceable identifiers\r\n\tconst tokens = getTokens(formatStr);\r\n\r\n\tlet useStack = false;\r\n\tlet currentRegister = Register.R1;\r\n\tlet currentStackOffset = 0;\r\n\tconst args = tokens.map((token, index) => {\r\n\t\tlet data: any;\r\n\t\tlet register: Register = currentRegister;\r\n\t\tlet offset: number = currentStackOffset;         // byte view offset\r\n\r\n\t\tif (!useStack && currentRegister > Register.R3) useStack = true;\r\n\r\n\t\t// TODO: implement stack argument passing\r\n\t\tif (useStack) {\r\n\t\t\tconst instruction = SimulatorState.currentInstruction()!;\r\n\t\t\tthrow new RuntimeError(\"Passing arguments to printf via the stack is not yet supported. Coming soon!\", instruction.statement, instruction.lineNumber);\r\n\t\t}\r\n\r\n\t\tif (token.specifier === 'c') {\r\n\t\t\t[data, register, offset] = getChar(useStack, currentRegister, currentStackOffset);\r\n\t\t}\r\n\t\telse if (token.specifier === 's') {\r\n\t\t\t[data, register, offset] = getString(useStack, currentRegister, currentStackOffset);\r\n\t\t}\r\n\t\telse if (['i', 'd'].includes(token.specifier)) {\r\n\t\t\t[data, register, offset] = getDecimal(useStack, currentRegister, currentStackOffset);\r\n\t\t}\r\n\r\n\t\t// TODO: implement other format specifiers\r\n\t\telse {\r\n\t\t\tconst instruction = SimulatorState.currentInstruction()!;\r\n\t\t\tthrow new RuntimeError(\"printf format strings with specifiers other than %c, %s, %d and %i are not yet supported.\", instruction.statement, instruction.lineNumber);\r\n\t\t}\r\n\r\n\t\tcurrentRegister = register;\r\n\t\tcurrentStackOffset = offset;\r\n\t\treturn data;\r\n\t});\r\n\r\n\tconst string = cprintf(formatStr, ...args);\r\n\tSimulatorState.addOutput(string);\r\n\r\n\trandomiseScratch();\r\n\tSimulatorState.setRegister(Register.R0, string.length);\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction getChar(useStack: boolean, register: Register, offset: number): [string, Register, number] {\r\n\tlet data: string;\r\n\r\n\tif (!useStack) {\r\n\t\tdata = String.fromCharCode(state.registers[register]);\r\n\t\tregister = (register + 1) as Register;\r\n\t}\r\n\telse {\r\n\t\tlet framePointer = state.registers[Register.R11];\r\n\t\tdata = String.fromCharCode(state.memory.byteView[framePointer + offset]);\r\n\t\toffset += 4;\r\n\t}\r\n\r\n\treturn [data, register, offset];\r\n}\r\n\r\nfunction getString(useStack: boolean, register: Register, offset: number): [string, Register, number] {\r\n\tlet address: number;\r\n\r\n\tif (!useStack) {\r\n\t\taddress = state.registers[register];\r\n\t\tregister = (register + 1) as Register;\r\n\t}\r\n\telse {\r\n\t\tlet framePointer = state.registers[Register.R11];\r\n\t\taddress = state.memory.byteView[framePointer + offset]\r\n\t\toffset += 4;\r\n\t}\r\n\r\n\tlet stringArr: string[] = [];\r\n\twhile (state.memory.byteView[address] !== 0) {\r\n\t\tstringArr.push(String.fromCharCode(state.memory.byteView[address]));\r\n\t\taddress++;\r\n\t}\r\n\r\n\tconst data = stringArr.join(\"\");\r\n\r\n\treturn [data, register, offset];\r\n}\r\n\r\nfunction getDecimal(useStack: boolean, register: Register, offset: number, signed: boolean = true): [number, Register, number] {\r\n\tlet data: number;\r\n\r\n\tif (!useStack) {\r\n\t\tif (signed) data = -(~state.registers[register] + 1);\t\t// invert and add one to get absolute signed value\r\n\t\telse data = state.registers[register];\r\n\r\n\t\tregister = (register + 1) as Register;\r\n\t}\r\n\telse {\r\n\t\tlet framePointer = state.registers[Register.R11];\r\n\t\tdata = state.memory.wordView[(framePointer + offset) / 4];\r\n\t\toffset += 4;\r\n\t}\r\n\r\n\treturn [data, register, offset];\r\n}","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\n\r\nexport function putchar() : boolean {\r\n  const charCode = state.registers[Register.R0];\r\n  \r\n  // add single char to output\r\n  SimulatorState.addOutput(String.fromCharCode(charCode));\r\n\r\n  randomiseScratch();\r\n  SimulatorState.setRegister(Register.R0, charCode);\r\n\r\n  return true;\r\n}","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\n\r\nexport function puts() : boolean {\r\n  let stringArr: string[] = [];\r\n\r\n  // fetch full string from simulator memory\r\n  let index = state.registers[Register.R0];\r\n  while (state.memory.byteView[index] !== 0) {\r\n    stringArr.push(String.fromCharCode(state.memory.byteView[index]));\r\n    index++;\r\n  }\r\n\r\n  // join char array\r\n  let string = stringArr.join(\"\");\r\n\r\n  // append newline character and add to output\r\n  SimulatorState.addOutput(`${string}\\n`);\r\n\r\n  // randomise scratch registers and set return\r\n  randomiseScratch();\r\n  SimulatorState.setRegister(Register.R0, 1);\r\n\r\n  return true;\r\n}","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\nimport { RuntimeError } from \"../error\";\r\n\r\nexport async function gets() : Promise<boolean> {\r\n  // block for IO\r\n  await SimulatorState.interrupt();\r\n\r\n  const ptr = state.registers[Register.R0];\r\n  const stdin = SimulatorState.stdin()! + String.fromCharCode(0);\r\n\r\n  // convert string to bytes and store\r\n  const bytes = [...stdin].map((_, i) => stdin.charCodeAt(i));\r\n  SimulatorState.storeBytes(bytes, ptr);\r\n\r\n  randomiseScratch();\r\n  SimulatorState.setRegister(Register.R0, ptr);\r\n\r\n  return true;\r\n}","/// <reference path=\"./scanf.d.ts\" />\r\nconst { scanf, sscanf } = require('./scanf')\r\nexport { scanf, sscanf } ","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\nimport { RuntimeError } from \"../error\";\r\nimport { sscanf } from  '@/assets/scanf';\r\n\r\nexport async function scanf() : Promise<boolean> {\r\n  // block for IO\r\n  await SimulatorState.interrupt();\r\n  const stdin = SimulatorState.stdin();\r\n\r\n\tif (stdin === undefined) {\r\n\t\tSimulatorState.setRegister(Register.R0, -1);\r\n\t\treturn true;\r\n\t}\r\n\r\n  let stringArr: string[] = [];\r\n\r\n\t// fetch full string from simulator memory\r\n\tlet index = state.registers[Register.R0];\r\n\twhile (state.memory.byteView[index] !== 0) {\r\n\t\tstringArr.push(String.fromCharCode(state.memory.byteView[index]));\r\n\t\tindex++;\r\n\t}\r\n\r\n\t// join char array\r\n\tconst formatStr = stringArr.join(\"\");\r\n\tconst tokens = sscanf(stdin, formatStr);\r\n\r\n\tif (tokens.every((e: string | number) => e == null || Number.isNaN(e))) {\r\n\t\t// no tokens found\r\n\t\tSimulatorState.setRegister(Register.R0, -1);\r\n\t\treturn true;\r\n\t}\r\n\r\n  let useStack = false;\r\n\tlet currentRegister = Register.R1;\r\n\tlet currentStackOffset = 0;\r\n\ttokens.forEach((token: string | number) => {\r\n\t\tlet ptr = state.registers[currentRegister];\r\n\t\tlet offset: number = currentStackOffset;         // byte view offset\r\n\r\n\t\tif (!useStack && currentRegister > Register.R3) useStack = true;\r\n\r\n\t\t// TODO: implement stack argument passing\r\n\t\tif (useStack) {\r\n\t\t\tconst instruction = SimulatorState.currentInstruction()!;\r\n\t\t\tthrow new RuntimeError(\"Passing arguments to printf via the stack is not yet supported. Coming soon!\", instruction.statement, instruction.lineNumber);\r\n\t\t}\r\n\r\n\t\tif (typeof token === 'number') {\r\n\t\t\tif (!Number.isInteger(token)) {\r\n\t\t\t\tconst instruction = SimulatorState.currentInstruction()!;\r\n\t\t\t\tthrow new RuntimeError(\"Floats and doubles are not yet supported by iRISC. Maybe someday eh?\", instruction.statement, instruction.lineNumber);\r\n\t\t\t}\r\n\r\n\t\t\tSimulatorState.store(token, ptr, \"word\");\r\n\t\t}\r\n\t\telse if (typeof token === 'string') {\r\n\t\t\tif (token.length > 1) {\r\n\t\t\t\tconst bytes = [...token].map((_, i) => token.charCodeAt(i));\r\n\t\t\t\tSimulatorState.storeBytes(bytes, ptr);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tSimulatorState.store(token.charCodeAt(0), ptr, \"byte\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcurrentRegister = (currentRegister + 1) as Register;\r\n\t\tcurrentStackOffset = offset;\r\n\t});\r\n\r\n\r\n\r\n  return true;\r\n}","import { Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { state } from \"@/interpreter/interpreter\";\r\nimport { randomiseScratch } from \".\";\r\n\r\nexport function malloc(): boolean {\r\n\tconst size = state.registers[Register.R0];\r\n\tconst ptr = SimulatorState.malloc(size);\r\n\r\n\trandomiseScratch();\r\n\tSimulatorState.setRegister(Register.R0, ptr);\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function calloc(): boolean {\r\n\tconst nmemb = state.registers[Register.R0];\r\n\tconst size = state.registers[Register.R1];\r\n\r\n\tconst ptr = SimulatorState.calloc(nmemb, size);\r\n\r\n\trandomiseScratch();\r\n\tSimulatorState.setRegister(Register.R0, ptr);\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function free(): boolean {\r\n\tconst ptr = state.registers[Register.R0]\r\n\r\n\tSimulatorState.free(ptr);\r\n\r\n\trandomiseScratch();\r\n\r\n\treturn true;\r\n}","import { Call, Register } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { RuntimeError } from \"../error\";\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { printf } from './printf';\r\nimport { putchar } from \"./putchar\";\r\nimport { puts } from './puts';\r\nimport { gets } from './gets';\r\nimport { scanf } from './scanf';\r\nimport { malloc, free, calloc } from './allocation';\r\n\r\n/**\r\n * Randomises the scratch registers to demonstrate that the contents of these\r\n * registers should not be assumed to stay the same after a function call.\r\n */\r\nexport function randomiseScratch() {\r\n\tlet randomRange = 256\r\n\tSimulatorState.setRegister(Register.R0, Math.floor(Math.random() * randomRange));\r\n\tSimulatorState.setRegister(Register.R1, Math.floor(Math.random() * randomRange));\r\n\tSimulatorState.setRegister(Register.R2, Math.floor(Math.random() * randomRange));\r\n\tSimulatorState.setRegister(Register.R3, Math.floor(Math.random() * randomRange));\r\n}\r\n\r\nexport async function executeCall(instruction: TInstructionNode, call: Call) : Promise<boolean> {\r\n\r\n  // stdout\r\n  if (call === Call.PUTCHAR) return putchar();\r\n  if (call === Call.PUTS) return puts();\r\n  if (call === Call.PRINTF) return printf();\r\n\r\n  // stdin\r\n  if (call === Call.GETS) return await gets();\r\n  if (call === Call.SCANF) return await scanf();\r\n\r\n  // allocation\r\n  if (call === Call.MALLOC) return malloc();\r\n  if (call === Call.CALLOC) return calloc();\r\n  if (call === Call.FREE) return free();\r\n\r\n  throw new RuntimeError(\"Attempted to branch to unrecognised function call. This is likely an error with iRISC. Please inform the developers.\", instruction.statement, instruction.lineNumber)\r\n}\r\n","import { rotr } from \"@/assets/bitset\";\r\nimport { addressModeGroup, BlockTransfer, callAddress, callMap, Flag, Operation, opTitle, Register, Shift, SingleTransfer, TTransferSize } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { BiOperandNode, FlexOperand, ShiftNode, TriOperandNode, BranchNode, BlockTransferNode, SingleTransferNode } from \"@/syntax\";\r\nimport { TInstructionNode } from \"@/syntax/types\";\r\nimport { ReferenceError, RuntimeError } from \"./error\";\r\nimport { executeCall } from \"./extern\";\r\n\r\n/**\r\n * Local declaration of useful EmulatorState getters with the js object getter\r\n * syntax so that they can be accessed like properties rather than requiring \r\n * the function execution brackets (()).\r\n */\r\nconst state = {\r\n  get registers() { return SimulatorState.registers(); },\r\n  get cpsr() { return SimulatorState.cpsr(); },\r\n  get memory() { return SimulatorState.memory(); },\r\n  get previousPC() { return SimulatorState.previousPC(); },\r\n  get breakpoints() { return SimulatorState.breakpoints(); }\r\n}\r\n\r\n/**\r\n * Wrapper for execution of all instruction-type nodes. The only function which is exported.\r\n * All other functions are private to this file and directly mutate the EmulatorState\r\n * \r\n * @param instruction the instruction to be executed\r\n */\r\nexport async function execute(instruction: TInstructionNode, incPC: boolean = true) : Promise<boolean> {\r\n  let executed: boolean = false;\r\n  SimulatorState.setCurrentInstruction(instruction);\r\n\r\n  {\r\n    if (instruction instanceof BranchNode) executed = await executeBranch(instruction);\r\n\r\n    if (instruction instanceof BiOperandNode) executed = executeBiOperand(instruction);\r\n    if (instruction instanceof TriOperandNode) executed = executeTriOperand(instruction);\r\n    if (instruction instanceof ShiftNode) executed = executeShift(instruction);\r\n\r\n    if (instruction instanceof SingleTransferNode) executed = executeSingleTransfer(instruction);\r\n    if (instruction instanceof BlockTransferNode) executed = executeBlockTransfer(instruction);\r\n  }\r\n\r\n  SimulatorState.tick();\r\n  SimulatorState.setExecuted(executed);\r\n  SimulatorState.takeSnapshot();\r\n\r\n  return executed;\r\n}\r\n\r\n/**\r\n * \r\n * @param flex \r\n * @returns \r\n */\r\nexport function deflex(flex: FlexOperand) : number {\r\n  let deflex: number;\r\n\r\n  const [Rm, shift, Rs, immShift] = flex.unpack();\r\n  if (flex.isImm) return rotr(Rm as number, immShift);            // return value of immediate (short circuit)\r\n  else deflex = state.registers[Rm as Register];               // get value in register\r\n\r\n  if (flex.shifted) {\r\n    let shiftBy: number;\r\n    if (flex.shiftedByImm) shiftBy = Rs as number;                // get value of immediate shift\r\n    else shiftBy = state.registers[Rs as Register];            // get value in shift register\r\n\r\n    deflex = applyFlexShift(shift as Shift, deflex, shiftBy);     // apply the unpacked shift\r\n  }\r\n  \r\n  return deflex;\r\n}\r\n\r\n/**\r\n * \r\n * @param shift \r\n * @param value \r\n * @param amount \r\n * @returns \r\n */\r\nfunction applyFlexShift(shift: Shift, value: number, amount: number) : number {\r\n  switch(shift) {\r\n    case Shift.LSL:\r\n      return value << amount;\r\n    case Shift.LSR:\r\n      if (amount == 0) amount = 32;       // special case for right shifts\r\n      return value >>> amount;\r\n    case Shift.ASR:\r\n      return value >> amount;\r\n    case Shift.ROR:\r\n      return rotr(value, amount);\r\n    default: {\r\n      let instruction = state.memory.text[state.registers[Register.PC]];\r\n      throw new RuntimeError(\"While attempting to perform a flex operand optional shift.\", instruction.statement, instruction.lineNumber);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param instruction \r\n * @returns \r\n */\r\nfunction executeBiOperand(instruction: BiOperandNode) : boolean {\r\n  const [op, cond, set, dest, flex] = instruction.unpack();             // unpack the instruction\r\n  if (!SimulatorState.checkFlags(cond)) return false;                  // returns early if condition code is not satisfied\r\n\r\n  const src: number = deflex(flex);                                     // deflex the flex operand into a single value\r\n  switch(op) {                                                        // check opcode and execute instruction\r\n    case Operation.MOV:\r\n      if (set) SimulatorState.setFlags(state.registers[dest], src, src);\r\n      SimulatorState.setRegister(dest, src);\r\n      break;\r\n    case Operation.MVN:\r\n      if (set) SimulatorState.setFlags(state.registers[dest], -src, -src);\r\n      SimulatorState.setRegister(dest, -src);\r\n      break;\r\n    case Operation.CMP:\r\n      SimulatorState.setFlags(state.registers[dest], src, state.registers[dest] - src, '-');\r\n      break;\r\n    case Operation.CMN:\r\n      SimulatorState.setFlags(state.registers[dest], src, state.registers[dest] + src, '+');\r\n      break;\r\n    case Operation.TST:\r\n      SimulatorState.setFlags(state.registers[dest], src, state.registers[dest] & src);\r\n      break;\r\n    case Operation.TEQ:\r\n      SimulatorState.setFlags(state.registers[dest], src, state.registers[dest] ^ src);\r\n      break;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param instruction \r\n * @returns \r\n */\r\nfunction executeTriOperand(instruction: TriOperandNode) : boolean {\r\n  const [op, cond, set, dest, src, flex] = instruction.unpack();        // unpack the instruction\r\n  if (!SimulatorState.checkFlags(cond)) return false;                  // returns early if condition code is not satisfied\r\n\r\n  const n = state.registers[src];\r\n  const m = deflex(flex);                                               // deflex the flex operand into a value\r\n  let result: number | undefined;\r\n  switch (op) {                                                       // check opcode and execute instruction\r\n    case Operation.AND:\r\n      if (set) SimulatorState.setFlags(n, m, n & m);\r\n      result = n & m;\r\n      break;\r\n    case Operation.EOR:\r\n      if (set) SimulatorState.setFlags(n, m, n ^ m);\r\n      result = n ^ m;\r\n      break;\r\n    case Operation.ORR:\r\n      if (set) SimulatorState.setFlags(n, m, n | m);\r\n      result = n | m;\r\n      break;\r\n    case Operation.ADD:\r\n      if (set) SimulatorState.setFlags(n, m, n + m, '+');\r\n      result = n + m;\r\n      break;\r\n    case Operation.SUB:\r\n      if (set) SimulatorState.setFlags(n, m, n - m, '-');\r\n      result = n - m;\r\n      break;\r\n    case Operation.RSB:\r\n      if (set) SimulatorState.setFlags(m, n, m - n, '-');\r\n      result = m - n;\r\n      break;\r\n    case Operation.BIC:\r\n      if (set) SimulatorState.setFlags(m, n, n & (~m));\r\n      result = n & (~m);\r\n      break;\r\n    case Operation.ADC:\r\n      result = n + m + (state.cpsr[Flag.C] ? 1 : 0);\r\n      if (set) SimulatorState.setFlags(n, m, n + m + (state.cpsr[Flag.C] ? 1 : 0), '+');\r\n      break;\r\n    case Operation.SBC:\r\n      result = n - m - (state.cpsr[Flag.C] ? 0 : 1);\r\n      if (set) SimulatorState.setFlags(n, m, n - m - (state.cpsr[Flag.C] ? 0 : 1), '-');\r\n      break;\r\n    case Operation.RSC:\r\n      result = m - n - (state.cpsr[Flag.C] ? 0 : 1);\r\n      if (set) SimulatorState.setFlags(n, m, m - n - (state.cpsr[Flag.C] ? 0 : 1), '-');\r\n      break;\r\n  } \r\n\r\n  if (result === undefined) {\r\n    let instruction = state.memory.text[state.registers[Register.PC]];\r\n    throw new RuntimeError(`While attempting to perform a '${opTitle[op]}' instruction.`, instruction.statement, instruction.lineNumber);\r\n  }\r\n\r\n  SimulatorState.setRegister(dest, result);\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param instruction \r\n * @returns \r\n */\r\nfunction executeShift(instruction: ShiftNode) : boolean {\r\n  const [op, cond, set, dest, src1, src2] = instruction.unpack();       // unpack the instruction\r\n  if (!SimulatorState.checkFlags(cond)) return false;                  // returns early if condition code is not satisfied\r\n\r\n  const n = state.registers[src1];\r\n  let m;\r\n  if (instruction.isReg) m = state.registers[src2 as Register];\r\n  else m = src2 as number;\r\n\r\n  let result;\r\n  switch (op) {                                                        // check opcode and execute instruction\r\n    case Shift.LSL:\r\n      if (set) SimulatorState.setFlags(n, m, n << m);\r\n      result = n << m;\r\n      break;\r\n    case Shift.LSR:\r\n      if (set) SimulatorState.setFlags(n, m, n >> m);\r\n      result = n >>> m;\r\n      break;\r\n    case Shift.ASR:\r\n      if (set) SimulatorState.setFlags(n, m, n >> m);\r\n      result = n >> m;\r\n      break;\r\n    case Shift.ROR:\r\n      if (set) SimulatorState.setFlags(n, m, rotr(n, m));\r\n      result = rotr(n, m);\r\n      break;\r\n    default:\r\n      throw new RuntimeError(\"While attempting to perform a shift operation.\", instruction.statement, instruction.lineNumber);\r\n  }\r\n\r\n  SimulatorState.setRegister(dest, result);\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param instruction \r\n * @returns \r\n */\r\nasync function executeBranch(instruction: BranchNode) : Promise<boolean> {\r\n  const [op, cond, addr] = instruction.unpack();\r\n  if (!SimulatorState.checkFlags(cond)) return false;                          // returns early if condition code is not satisfied\r\n\r\n  let address: number;\r\n  if (typeof addr === 'string') {\r\n    address = SimulatorState.label(addr as string);\r\n    if (address === callAddress) {\r\n\r\n      let callExecuted = await executeCall(instruction, callMap[addr as string]);\r\n      if (callExecuted) {\r\n        // if branch with link, set the link register\r\n        if (op === Operation.BL) {\r\n          SimulatorState.setRegister(Register.LR, state.registers[Register.PC]);\r\n        }\r\n\r\n        // move to link register\r\n        SimulatorState.setRegister(Register.PC, state.registers[Register.LR]);\r\n      }\r\n\r\n      return callExecuted;\r\n    }\r\n  }\r\n  else address = state.registers[addr as Register];\r\n\r\n  switch (op) {\r\n    case Operation.B:\r\n    case Operation.BX:\r\n      SimulatorState.setRegister(Register.PC, address);\r\n      break;\r\n    case Operation.BL:\r\n      SimulatorState.setRegister(Register.LR, state.registers[Register.PC]);\r\n      SimulatorState.setRegister(Register.PC, address);\r\n      break;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction executeSingleTransfer(instruction: SingleTransferNode) : boolean {\r\n  const [op, cond, size, reg, addr, sign, flex, mode, wb] = instruction.unpack();\r\n  if (!SimulatorState.checkFlags(cond)) return false;                          // returns early if condition code is not satisfied\r\n\r\n  let address: number;\r\n  let postAddress: number;\r\n  let data: number;\r\n  if (typeof addr === \"string\") {\r\n    address = SimulatorState.dataLabel(addr as string);\r\n\r\n    if (op === SingleTransfer.LDR) {\r\n      SimulatorState.setRegister(reg, address);\r\n      return true;\r\n    }\r\n\r\n    throw new RuntimeError('Cannot store directly to label.', instruction.statement, instruction.lineNumber);\r\n\r\n    // other cases should be caught by assembler\r\n  }\r\n  else {\r\n    address = state.registers[addr as Register];\r\n    const m = flex ? deflex(flex) : 0;\r\n    postAddress = sign === \"+\" ? address + m : address - m;\r\n\r\n    if (mode === \"pre\") address = postAddress;\r\n\r\n  }\r\n\r\n  checkAlignment(address, size, instruction);\r\n  if (wb) {\r\n    SimulatorState.setRegister((addr as Register), postAddress);\r\n  }\r\n\r\n  switch (op) {\r\n    case SingleTransfer.LDR:\r\n      if (size === \"word\") data = state.memory.wordView[address / 4];\r\n      else data = state.memory.byteView[address];\r\n\r\n      SimulatorState.setRegister(reg, data);\r\n      break;\r\n    case SingleTransfer.STR:\r\n      checkStore(postAddress, addr, instruction);\r\n\r\n      if (size === \"word\") data = state.registers[reg];\r\n      else data = state.registers[reg] & 0xff;\r\n\r\n      SimulatorState.store(data, address, size);\r\n      break;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction executeBlockTransfer(instruction: BlockTransferNode) : boolean {\r\n  let [op, cond, base, reglist, mode, wb] = instruction.unpack();\r\n  if (!SimulatorState.checkFlags(cond)) return false;                          // returns early if condition code is not satisfied\r\n\r\n  let address = state.registers[base as Register];\r\n  const increment = addressModeGroup.increment.includes(mode);\r\n  const before = addressModeGroup.before.includes(mode);\r\n\r\n  checkAlignment(address, \"word\", instruction);\r\n\r\n  if (!increment) reglist = reglist.slice().reverse();\r\n  switch (op) {\r\n    case BlockTransfer.LDM:\r\n      reglist.forEach(reg => {\r\n        if (before) increment ? address += 4 : address -= 4;\r\n\r\n        checkStore(address, base, instruction);\r\n        SimulatorState.setRegister(reg, state.memory.wordView[address / 4]);\r\n\r\n        if (!before) increment ? address += 4 : address -= 4;\r\n        if (base === Register.SP) SimulatorState.setStackHeight(state.memory.size - address);\r\n      });\r\n\r\n      break;\r\n    case BlockTransfer.STM:\r\n      reglist.forEach(reg => {\r\n        if (before) increment ? address += 4 : address -= 4;\r\n        \r\n        if (base === Register.SP) SimulatorState.setStackHeight(state.memory.size - address);\r\n        checkStore(address, base, instruction);\r\n        SimulatorState.store(state.registers[reg], address, \"word\");\r\n        \r\n        if (!before) increment ? address += 4 : address -= 4;\r\n      });\r\n\r\n      break;\r\n  }\r\n\r\n  if (wb) SimulatorState.setRegister((base as Register), address);\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Checks that the requested load/store address is aligned with the data size. The instruction is\r\n * also passed so that runtime errors can be raised. If an error is not thrown then the address can\r\n * be assumed to be aligned.\r\n * \r\n * @param address byte address to load/store from/to\r\n * @param size the size of the data to load/store\r\n * @returns \r\n */\r\nfunction checkAlignment(address: number, size: TTransferSize, instruction: TInstructionNode) : void {\r\n  switch (size) {\r\n    case \"byte\": return;\r\n    case \"word\":\r\n      if (address % 4 === 0) return;\r\n  }\r\n\r\n  throw new RuntimeError(\"SIGBUS: Bus error - misaligned access.\", instruction.statement, instruction.lineNumber);\r\n}\r\n\r\n/**\r\n * Checks that the requested load/store address is read/writeable in the current context. Checks the \r\n * stack pointer post-decrement to ensure that stack is not overflowing. Ensures that data is not \r\n * written to the text section. Throws segmentation faults for all errors.\r\n * \r\n * @param address \r\n * @param register \r\n * @param instruction \r\n */\r\nfunction checkStore(address: number, register: Register, instruction: TInstructionNode) : void {\r\n  if (register === Register.SP) {\r\n    if (address < state.memory.textHeight + state.memory.dataHeight + state.memory.heapHeight) {\r\n      throw new RuntimeError(\"SIGSEG: Segmentation fault.\", instruction.statement, instruction.lineNumber);\r\n    }\r\n    if (address > state.memory.size) {\r\n      throw new RuntimeError(\"SIGSEG: Segmentation fault.\", instruction.statement, instruction.lineNumber);\r\n    }\r\n  }\r\n\r\n  else if (address < state.memory.textHeight || address >= state.memory.size) {\r\n    throw new RuntimeError(\"SIGSEG: Segmentation fault.\", instruction.statement, instruction.lineNumber);\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param instruction \r\n * @returns \r\n */\r\nexport function generateLabelOffset(label: string, instruction: TInstructionNode): number {\r\n  if (label in state.memory.dataTable) {\r\n    return (state.memory.dataTable[label] - state.previousPC) / 4;\r\n  }\r\n\r\n  if (label in state.memory.textMap) {\r\n    return (state.memory.textMap[label] - state.previousPC) / 4;\r\n  }\r\n\r\n  throw new ReferenceError(`Missing reference to '${label}'.`, instruction.statement, instruction.lineNumber, -1)\r\n}\r\n\r\nexport { state };","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-inline-block\",attrs:{\"tour-item\":\"debugger\"}},[(!_vm.hidePlayback)?[_c('i',{staticClass:\"button red fas fa-stop mr-1 clickable\",on:{\"click\":_vm.stop,\"mouseenter\":function($event){_vm.tip('stop  (ctrl + ↑)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}}),[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.running),expression:\"!running\"}],staticClass:\"button green fas fa-play mx-1 clickable\",attrs:{\"tour-item\":\"debug-run\"},on:{\"click\":_vm.run,\"mouseenter\":function($event){_vm.tip('run (ctrl + ↓)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}}),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running && !_vm.paused),expression:\"running && !paused\"}],staticClass:\"button fas fa-pause mx-1 clickable\",on:{\"click\":_vm.pause,\"mouseenter\":function($event){_vm.tip('pause (ctrl + ↓)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}}),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running && _vm.paused),expression:\"running && paused\"}],staticClass:\"button green fas fa-play mx-1 clickable\",on:{\"click\":_vm.resume,\"mouseenter\":function($event){_vm.tip('continue (ctrl + ↓)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}})],_c('i',{staticClass:\"button amber step fas fa-step-backward mx-1 clickable\",on:{\"click\":_vm.stepBack,\"mouseenter\":function($event){_vm.tip('step back (ctrl + ←)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}}),_c('i',{staticClass:\"button amber step fas fa-step-forward mx-1 clickable\",on:{\"click\":_vm.stepForward,\"mouseenter\":function($event){_vm.tip('step (ctrl + →)')},\"mouseleave\":function($event){return _vm.tip(undefined)}}})]:_vm._e(),_c('div',{staticClass:\"tick-rate d-inline-block mx-1\",staticStyle:{\"width\":\"60px\"}},[_c('b-form-input',{staticStyle:{\"margin-bottom\":\"-5px\"},attrs:{\"type\":\"range\",\"inline\":\"\",\"value\":1000 / _vm.delay,\"min\":\"0.5\",\"max\":\"100\",\"step\":\"0.1\"},on:{\"input\":_vm.setDelay,\"mouseenter\":function($event){return _vm.tip('tick rate')},\"mouseleave\":function($event){return _vm.tip(undefined)}}})],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { SimulatorState } from '@/simulator';\r\n\r\nexport default Vue.extend({\r\n\tprops: {\r\n\t\ttooltip: String,\r\n\t\thidePlayback: Boolean\r\n\t},\r\n\tcomputed: {\r\n\t\tcurrentTick: SimulatorState.currentTick,\r\n\t\trunning: SimulatorState.running,\r\n\t\tpaused: SimulatorState.paused,\r\n\t\tdelay: SimulatorState.delay,\r\n\t\terrors: SimulatorState.errors\r\n\t},\r\n\tmethods: {\r\n\t\trun: () => SimulatorState.start(),\r\n\t\tstop: () => SimulatorState.stop(),\r\n\r\n\t\tpause: () => SimulatorState.pause(),\r\n\t\tresume: () => SimulatorState.resume(),\r\n\r\n\t\tstepBack: () => SimulatorState.stepBack(),\r\n\t\tstepForward: () => SimulatorState.stepForward(),\r\n\r\n\t\treset: () => SimulatorState.reset(),\r\n\t\tsetDelay: function (delay: number) {\r\n\t\t\tSimulatorState.setDelay(1000 / delay)\r\n\t\t},\r\n\r\n\t\ttip(text?: string) {\r\n\t\t\tthis.$emit('update:tooltip', text);\r\n\t\t}\r\n\t}\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debug.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debug.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./debug.vue?vue&type=template&id=15cce2df&scoped=true&\"\nimport script from \"./debug.vue?vue&type=script&lang=ts&\"\nexport * from \"./debug.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./debug.vue?vue&type=style&index=0&id=15cce2df&scoped=true&lang=css&\"\nimport style1 from \"./debug.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15cce2df\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.currentDirectory)?_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(_vm.close),expression:\"close\"}],staticClass:\"files-container p-1\",class:_vm.showFiles ? 'min-width' : ''},[(!_vm.forceShow && !_vm.showFiles)?_c('a',{staticClass:\"link clickable\",staticStyle:{\"color\":\"#f9e1b3\"},on:{\"click\":function($event){_vm.showFiles = true}}},[_vm._v(\"files\")]):_c('div',[_c('div',{staticClass:\"mb-1\"},[_vm._v(\" /\"+_vm._s(_vm.currentDirectory.name)+\" \")]),_vm._l((_vm.directories),function(directory){return _c('div',{key:directory.name},[_c('a',{staticClass:\"link text-grey clickable\",on:{\"click\":function($event){return _vm.openDirectory(directory)}}},[_c('i',[_vm._v(_vm._s(directory.name)+\"/\")])])])}),(!_vm.hideFiles)?_vm._l((_vm.files),function(file){return _c('div',{key:file.name},[_c('a',{staticClass:\"link text-white clickable\",class:{ open: !_vm.selectedFile && _vm.currentFile === file, selected: _vm.selectedFile === file },on:{\"click\":function($event){return _vm.openFile(file)}}},[_vm._v(\" \"+_vm._s(file.name)+\" \")])])}):_vm._e(),(_vm.currentDirectory.parent)?_c('div',[_c('a',{staticClass:\"link text-grey clickable\",on:{\"click\":function($event){return _vm.openDirectory(_vm.currentDirectory.parent)}}},[_vm._v(\"..\")])]):_vm._e()],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// sampleFiles: [\r\n//   \"helloworld.s\",\r\n//   \"typewriter.s\",\r\n//   \"strlen.s\",\r\n//   \"recursion.s\",\r\n//   \"stackoverflow!.s\",\r\n//   \"bubblesort.s\",\r\n//   \"buggymess.s\"\r\n// ]\r\n\r\n\r\nimport { TDirectory, TFile } from \"./types\";\r\n\r\nexport const helloWorldSample: TFile = {\r\n  name: \"helloworld.s\", \r\n  static: true,\r\n  writeable: false\r\n}\r\n\r\n// export const sampleFiles: TFile[] = [\r\n//   helloWorldSample,\r\n//   { name: \"typewriter.s\", isStatic: true },\r\n//   { name: \"strlen.s\", isStatic: true },\r\n//   { name: \"recursion.s\", isStatic: true },\r\n//   { name: \"stackoverflow!.s\", isStatic: true },\r\n//   { name: \"bubblesort.s\", isStatic: true },\r\n//   { name: \"buggymess.s\", isStatic: true }\r\n// ]\r\n\r\n// export const \r\n\r\nexport const sampleDirectories: TDirectory[] = [\r\n  // user files placeholder\r\n  { \r\n    name: \"userfiles\",\r\n    directories: [],\r\n    files: [\r\n      {\r\n        name: 'readme.s',\r\n        static: true,\r\n        writeable: false\r\n      }\r\n    ],\r\n    writeable: true\r\n  },\r\n\r\n  // samples\r\n  {\r\n    name: \"samples\",\r\n    directories: [],\r\n    files: [\r\n      helloWorldSample,\r\n      { name: \"typewriter.s\", static: true, writeable: false },\r\n      { name: \"strlen.s\", static: true, writeable: false },\r\n      { name: \"recursion.s\", static: true, writeable: false },\r\n      { name: \"stackoverflow!.s\", static: true, writeable: false },\r\n      { name: \"bubblesort.s\", static: true, writeable: false },\r\n      { name: \"buggymess.s\", static: true, writeable: false }\r\n    ],\r\n    writeable: false\r\n  }\r\n]","import { FileSystemError, NotImplementedError } from \"@/interpreter\";\r\nimport { TFileSystem, TFile, TDirectory } from \"./types\";\r\nimport Vue from 'vue';\r\nimport { sampleDirectories } from \"./constants\";\r\n\r\nexport const filesystem = Vue.observable<TFileSystem>({\r\n  name: \"\",\r\n  directories: [],\r\n  files: [],\r\n  writeable: true,\r\n\r\n  parentDirectory: undefined,\r\n  openDirectory: undefined,\r\n  openFile: undefined\r\n});\r\n\r\nexport const getters = {\r\n  filesystem: () => filesystem,\r\n  currentDirectory: () => filesystem.openDirectory ?? filesystem,\r\n  currentFile: () => filesystem.openFile,\r\n\r\n  pwd: function () {\r\n    let directory = this.currentDirectory();\r\n    let path = [directory.name];\r\n\r\n    while (directory.parent) {\r\n      path = [directory.parent.name, ...path];\r\n      directory = directory.parent;\r\n    }\r\n\r\n    let pwd = path.join('/');\r\n    if (pwd === \"\") pwd = '/';\r\n\r\n    return pwd;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  init: function () {\r\n    filesystem.openDirectory = filesystem;\r\n\r\n    // set sample directories and connect to parent\r\n    filesystem.directories = sampleDirectories;\r\n    filesystem.directories.forEach(e => e.parent = filesystem);\r\n    filesystem.directories.forEach(d => d.files.forEach(f => f.parent = d));\r\n\r\n    this.loadLocal();\r\n    this.reopen();\r\n  },\r\n\r\n  loadLocal: function () {\r\n    let keys = Object.keys(localStorage)\r\n      .filter(e => e.startsWith('/'))\r\n      .sort();\r\n\r\n    // split paths and create directories\r\n    keys.forEach(key => {\r\n      const tokens = key.split('/').slice(1);\r\n\r\n      let currentDir = filesystem;\r\n      tokens.forEach((token, i) => {\r\n        let isDir = true;\r\n        if (i === tokens.length - 1) isDir = false;\r\n\r\n        if (isDir) {\r\n          // add new directory if none exists\r\n          let nextDir = currentDir.directories.find(e => e.name === token);\r\n          if (!nextDir) {\r\n            nextDir = {\r\n              name: token,\r\n              parent: currentDir,\r\n              files: [],\r\n              directories: [],\r\n              writeable: true\r\n            };\r\n\r\n            currentDir.directories.push(nextDir);\r\n          }\r\n          \r\n          currentDir = nextDir;\r\n        }\r\n        else {\r\n          currentDir.files.push({\r\n            name: token,\r\n            parent: currentDir,\r\n            static: false,\r\n            content: localStorage.getItem(key) ?? undefined,\r\n            writeable: true\r\n          });\r\n        }\r\n      });\r\n    });\r\n  },\r\n\r\n  reopen: function () {\r\n    try {\r\n      const openPath = localStorage.getItem('openFile') ?? \"\";\r\n      const target = this.resolvePath(openPath);\r\n\r\n      if (isDirectory(target)) throw new FileSystemError(\"\");\r\n\r\n      this.openDirectory(target.parent!);\r\n      this.openFile(target);\r\n    }\r\n    catch (e) {\r\n      console.trace();\r\n      console.error(\"Could not reopen file from local storage.\");\r\n    }\r\n  },\r\n\r\n  openFile: async function (file: TFile) {\r\n    if (!file.content && file.static) {\r\n      file.content = await fetch(`samples/${file.name}`)\r\n        .then(res => res.text())\r\n        .then(code => {\r\n          return code;\r\n        });\r\n    }\r\n    \r\n    const path = fullPath(file);\r\n    if (path === null) throw new FileSystemError(\"Could not find file in local directory tree.\");\r\n\r\n    localStorage.setItem('openFile', path);\r\n    filesystem.openFile = file;\r\n  },\r\n\r\n  openDirectory: function (directory: TDirectory) {\r\n    filesystem.parentDirectory = filesystem.openDirectory;\r\n    filesystem.openDirectory = directory;\r\n  },\r\n\r\n  cd: function (param: string) {\r\n    const target = this.resolvePath(param);\r\n\r\n    if (!isDirectory(target)) throw new FileSystemError(\"Argument is not a valid directory.\");\r\n    this.openDirectory(target!);\r\n  },\r\n\r\n  textEdit: function (param: string) {\r\n    const target = this.resolvePath(param);\r\n\r\n    if (isDirectory(target)) throw new FileSystemError(\"Cannot text-edit a directory.\");\r\n    this.openFile(target);\r\n  },\r\n\r\n  resolvePath(path: string): TDirectory | TFile {\r\n    let current: TDirectory | TFile = filesystem.openDirectory!;\r\n    if (path.startsWith('/')) {\r\n      current = filesystem;\r\n    }\r\n\r\n    const tokens = path.split('/').filter(e => e !== '');\r\n    tokens.forEach((token, i) => {\r\n      let next: TDirectory | TFile | undefined;\r\n\r\n      if (token === '..') next = (current as TDirectory).parent;\r\n      else if (token === '.') next = current;\r\n      else {\r\n        next = (current as TDirectory).directories.find(e => e.name === token);\r\n        if (!next && i === tokens.length - 1) {\r\n          next = (current as TDirectory).files.find(e => e.name === token);\r\n        }\r\n      }\r\n\r\n      if (!next) throw new FileSystemError(\"Could not resolve path.\");\r\n      current = next;\r\n    });\r\n\r\n    return current;\r\n  },\r\n\r\n  addDirectory: function (directory: TDirectory, parent: TDirectory) {\r\n    if (parent.directories.includes(directory)) return;   // already exists\r\n\r\n    directory.parent = parent;\r\n    parent.directories.push(directory);\r\n  },\r\n\r\n  newFile: function (name: string, content: string): TFile {\r\n    return {\r\n      name, \r\n      content, \r\n      writeable: true,\r\n      static: false\r\n    };\r\n  },\r\n\r\n  addFile: function (file: TFile, parent: TDirectory) {\r\n    if (parent.files.some(e => e.name === file.name)) return;   // already exists\r\n\r\n    file.parent = parent;\r\n    parent.files.push(file);\r\n  },\r\n\r\n  save: function (file: TFile, content: string) {\r\n    if (!file.writeable) throw new FileSystemError(\"Permission denied.\");\r\n\r\n    const path = fullPath(file);\r\n    if (path === null) throw new FileSystemError(\"Could not find file in local directory tree.\");\r\n    \r\n    file.content = content;\r\n    localStorage.setItem(path, file.content ?? \"\");\r\n  }\r\n}\r\n\r\nfunction fullPath(file: TFile): string | null {\r\n  const pathArr = [file.parent?.name, file.name];\r\n\r\n  let parent = file.parent\r\n  while (parent?.parent) {\r\n    pathArr.unshift(parent.parent.name);\r\n    parent = parent.parent;\r\n  }\r\n\r\n  return pathArr.join('/');\r\n}\r\n\r\n// function depthFirstSearch(directory: TDirectory, file: TFile): TDirectory[] {\r\n//   if (!directory) {\r\n//     return [];\r\n//   }\r\n  \r\n//   if (directory.files.includes(file)) {\r\n//     return [directory];\r\n//   }\r\n\r\n//   for (let dir of directory.directories) {\r\n//     const foundPath = depthFirstSearch(dir, file);\r\n//     if (foundPath.length > 0) return [directory, ...foundPath];\r\n//   }\r\n\r\n//   return [];\r\n// }\r\n\r\n\r\nconst isDirectory = (x: TFile | TDirectory | undefined): x is TDirectory => (x as TDirectory)?.files !== undefined;","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { SimulatorState, TSimulatorSnapshot } from '@/simulator';\r\nimport { zip } from '@/assets/functions';\r\nimport { TransferNode } from '@/syntax';\r\nimport { IExplanation, TAssembled } from '@/syntax/types';\r\nimport { flagExplain, flagName, flagTitle, regExplain, Register, regName, regTitle, Flag } from \"@/constants\";\r\nimport { explain, TSnapshotExplanation } from \"@/explainer\";\r\nimport { highlight, languages } from 'prismjs';\r\nimport Vue from 'vue';\r\nimport { BModal } from 'bootstrap-vue';\r\nimport debug from \"./debug.vue\";\r\nimport { nextTick } from 'vue/types/umd';\r\n\r\n/**\r\n * Extends IExplanation interface to include a portion of the instruction bitcode,\r\n * making it into an \"ISection\".\r\n */\r\ninterface ISection extends IExplanation {\r\n  bits: number[];\r\n}\r\n\r\nenum TipType {\r\n  INSTRUCTION = \"instruction\",\r\n  SECTION = \"section\",\r\n  DEFAULT = \"default\"\r\n}\r\n\r\ntype TTip = {\r\n  title: string;\r\n  subtitle: string;\r\n  detail: string;\r\n  type: TipType;\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'instruction',\r\n  components: {\r\n    debug\r\n  },\r\n  data() {\r\n    return {\r\n      regName,\r\n      regTitle,\r\n      regExplain,\r\n\r\n      flagName, \r\n      flagTitle,\r\n      flagExplain,\r\n\r\n      default: {\r\n        bitcode: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        explanation: [{\r\n          title: \"No Instruction\",\r\n          subtitle: \"\",\r\n          detail: \"Execute an instruction to examine its machine code.\",\r\n          range: 32,\r\n        }]\r\n      } as TAssembled,\r\n\r\n      tooltip: undefined as TTip | undefined,\r\n\r\n      historyShown: false,\r\n      debuggerTooltip: undefined as string | undefined\r\n    }\r\n  },\r\n  computed: {\r\n    paused: SimulatorState.paused,\r\n    delay: SimulatorState.delay,\r\n    currentInstruction: SimulatorState.currentInstruction,\r\n    wasExecuted: SimulatorState.wasExecuted,\r\n    currentTick: SimulatorState.currentTick,\r\n    memSize: () => SimulatorState.memory().size,\r\n\r\n    // hack so we can access the enum in dom\r\n    TipType: () => TipType,\r\n\r\n    sections: function (): ISection[] {\r\n      const assembled = this.currentInstruction?.assemble() ?? this.default;\r\n\r\n      let startIdx = 0;\r\n      return assembled.explanation.map(explanation => {\r\n        let section = {\r\n          ...explanation,\r\n          bits: assembled.bitcode.slice(startIdx, startIdx + explanation.range)\r\n        };\r\n        \r\n        startIdx += explanation.range;\r\n        return section;\r\n      });\r\n    },\r\n\r\n    computedTooltip: function (): TTip {\r\n      if (this.tooltip) return this.tooltip;\r\n      if (!this.currentInstruction) return {\r\n        ...this.default.explanation[0],\r\n        type: TipType.DEFAULT\r\n      }\r\n\r\n      return {\r\n        title: highlight(this.currentInstruction.text, languages.armv7, 'ARMv7'),\r\n        subtitle: this.wasExecuted ? \"Executed\" : \"Not Executed\",\r\n        detail: \"This is the assembled machine code for the last instruction. Hover over the different sections to see what they mean.\",\r\n        type: TipType.INSTRUCTION\r\n      }\r\n    },\r\n\r\n    snapshots: function (): TSnapshotExplanation[] {\r\n      return SimulatorState.snapshots()\r\n        .data()\r\n        .slice()\r\n        .reduce((a, snapshot, index, snapshots) => {\r\n          const prevSnapshot: TSimulatorSnapshot | undefined = snapshots[index - 1];\r\n\r\n          a.push(explain(snapshot, prevSnapshot));\r\n          return a;\r\n        }, [] as TSnapshotExplanation[])\r\n        .reverse()\r\n    }\r\n  },\r\n  methods: {\r\n    tip: function (section: ISection) {\r\n      this.tooltip = {\r\n        ...section,\r\n        type: TipType.SECTION\r\n      };\r\n    },\r\n\r\n    untip: function () {\r\n      this.tooltip = undefined;\r\n    },\r\n\r\n    showHistory: function () {\r\n      this.historyShown = false;\r\n\t\t\t(this.$refs.history as BModal).show();\r\n      \r\n\t\t\tconst v = this;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tv.historyShown = true;\r\n        this.scrollToTick(this.currentTick);\r\n\t\t\t}, 350);\r\n    },\r\n\r\n    scrollToTick(tick: number, behavior: string = \"smooth\") {\r\n      this.$nextTick(() => {\r\n        const snapshot = (this.$refs[`tick_${tick}`] as any[])?.[0];\r\n        if (snapshot) {\r\n          snapshot.scrollIntoView({ behavior, block: \"start\", inline: \"nearest\" });\r\n        }\r\n      });\r\n    },\r\n\r\n    reinstate: function (tick: number) {\r\n      SimulatorState.reinstateSnapshot(tick);\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    currentTick: {\r\n      handler: function (tick: number) {\r\n        this.$nextTick(() => {\r\n          const scrollBehaviour = this.paused || this.delay > 100 ? \"smooth\" : \"instant\";\r\n          this.scrollToTick(tick, scrollBehaviour);\r\n        });\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { actions, getters } from './state';\r\nexport { TFileSystem, TDirectory, TFile } from './types';\r\nexport { helloWorldSample } from './constants';\r\n\r\nexport const FileSystemState = {\r\n  ...actions, \r\n  ...getters\r\n}\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { FileSystemState } from '@/files';\r\nimport { TFile, TDirectory } from '@/files/types';\r\n\r\nexport default Vue.extend({\r\n  name: \"files\",\r\n  props: {\r\n    forceShow: Boolean,\r\n    hideFiles: Boolean,\r\n    preventDefaultFile: Boolean,\r\n    preventDefaultDirectory: Boolean,\r\n    selectedFile: Object\r\n  },\r\n  data() {\r\n    return {\r\n      showFiles: false,\r\n    };\r\n  },\r\n  computed: {\r\n    currentDirectory: FileSystemState.currentDirectory,\r\n    currentFile: FileSystemState.currentFile,\r\n    isRoot: function (): boolean {\r\n      return this.currentDirectory === FileSystemState.filesystem()\r\n    },\r\n\r\n    files: function (): TFile[] {\r\n      return this.currentDirectory.files\r\n        .slice()\r\n        .sort();\r\n    },\r\n\r\n    directories: function (): TDirectory[] {\r\n      return this.currentDirectory.directories\r\n        .slice()\r\n        .sort();\r\n    }\r\n  },\r\n  methods: {\r\n    openDirectory: function (directory: TDirectory) {\r\n      if (this.preventDefaultDirectory) {\r\n        this.$emit('open:directory', directory);\r\n        return;\r\n      }\r\n\r\n      FileSystemState.openDirectory(directory);\r\n    },\r\n\r\n    openFile: function (file: TFile) {\r\n      if (this.preventDefaultFile) {\r\n        this.$emit('open:file', file);\r\n        return;\r\n      }\r\n\r\n      FileSystemState.openFile(file);\r\n    },\r\n\r\n    close: function () {\r\n      this.showFiles = false;\r\n    }\r\n  },\r\n  watch: {\r\n    currentFile: function (value) {\r\n      this.$emit('open', value);\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./files.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./files.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./files.vue?vue&type=template&id=279caa7a&scoped=true&\"\nimport script from \"./files.vue?vue&type=script&lang=ts&\"\nexport * from \"./files.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./files.vue?vue&type=style&index=0&id=279caa7a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"279caa7a\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { debounce } from \"@/assets/functions\";\r\nimport { Assembler, IriscError, RuntimeError } from \"@/interpreter\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { highlight, languages } from 'prismjs';\r\nimport { SettingsState, TTooltip } from '@/utilities';\r\nimport { PrismEditor } from 'vue-prism-editor';\r\nimport { BModal } from 'bootstrap-vue';\r\nimport scrollIntoView from 'scroll-into-view-if-needed';\r\nimport getCaretCoordinates from \"textarea-caret\";\r\nimport debug from './debug.vue';\r\nimport files from './files.vue';\r\nimport Shepherd from 'shepherd.js';\r\nimport Vue from 'vue';\r\n\r\nimport 'prismjs/themes/prism.css'; // import syntax highlighting styles\r\nimport 'vue-prism-editor/dist/prismeditor.min.css';\r\nimport { TFile } from \"@/files\";\r\nimport { FileSystemState, helloWorldSample } from \"@/files\";\r\n\r\n\r\ntype TPoint = {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'editor',\r\n  components: {\r\n    PrismEditor,\r\n    debug,\r\n    files\r\n  },\r\n  data() {\r\n    return {\r\n      program: '' as string,\r\n      tooltip: { title: '', color: '', message: '' } as TTooltip,\r\n      \r\n      // showFiles: false,\r\n      // directory: '/',\r\n      // sampleFiles: [\r\n      //   \"helloworld.s\",\r\n      //   \"typewriter.s\",\r\n      //   \"strlen.s\",\r\n      //   \"recursion.s\",\r\n      //   \"stackoverflow!.s\",\r\n      //   \"bubblesort.s\",\r\n      //   \"buggymess.s\"\r\n      // ],\r\n\r\n      filename: \"\",\r\n\r\n      tourActive: false,\r\n      controlTooltip: undefined as string | undefined\r\n    }\r\n  },\r\n  computed: {\r\n    settings: SettingsState.settings,\r\n    memory: SimulatorState.memory,\r\n    running: SimulatorState.running,\r\n    paused: SimulatorState.paused,\r\n    delay: SimulatorState.delay,\r\n    currentInstruction: SimulatorState.currentInstruction,\r\n    currentTick: SimulatorState.currentTick,\r\n    interrupted: SimulatorState.interrupted,\r\n    currentFile: FileSystemState.currentFile,\r\n    currentDirectory: FileSystemState.currentDirectory,\r\n\r\n    fileNames: function () : string[] {\r\n      return this.currentDirectory.files.map(e => e.name);\r\n    },\r\n    selectedFile: function () : TFile | undefined {\r\n      return this.currentDirectory.files.find(e => e.name === this.filename);\r\n    },\r\n\r\n    activeTour: () => !!Shepherd.activeTour,\r\n\r\n    output: SimulatorState.output,\r\n    hasOutput: function () : boolean {\r\n      if (this.output.length === 1 && !this.output[0]) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    errors: SimulatorState.errors,\r\n    breakpoints: SimulatorState.breakpoints,\r\n    exitStatus: SimulatorState.exitStatus,\r\n\r\n    computedTooltip: function () : TTooltip {\r\n      if (this.interrupted) return {\r\n        title: 'Interrupted',\r\n        color: '#7dad7d',\r\n        message: 'Switch to the terminal to provide input.'\r\n      }\r\n\r\n      if (this.tooltip.title !== \"\") return this.tooltip;\r\n      if (this.exitStatus instanceof RuntimeError) {\r\n        return {\r\n          title: this.exitStatus.type,\r\n          color: this.exitStatus.color,\r\n          message: this.exitStatus.message\r\n        }\r\n      }\r\n      if (this.exitStatus === 0) {\r\n        return {\r\n          title: \"Exit Success\",\r\n          color: \"#5d9455\",\r\n          message: \"Program executed without error.\"\r\n        }\r\n      }\r\n\r\n      return { title: '', color: '', message: '' };\r\n    }\r\n  },\r\n  methods: {\r\n    run: SimulatorState.start,\r\n    stop: SimulatorState.stop,\r\n    pause: SimulatorState.pause,\r\n    resume: SimulatorState.resume,\r\n    stepBack: SimulatorState.stepBack,\r\n    stepForward: SimulatorState.stepForward,\r\n    reset: SimulatorState.reset,\r\n\r\n    setDelay: function (delay: number) {\r\n      SimulatorState.setDelay(1000 / delay)\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    hover: function (e: any) {\r\n      if (e.target.parentNode?.className.includes(\"error\")) {\r\n        if (!e.target.parentNode.dataset[\"errorIdx\"]) return;\r\n        \r\n        let errorIndex = parseInt(e.target.parentNode.dataset[\"errorIdx\"]) as number;\r\n        if (errorIndex === -1) return;\r\n\r\n        let error = this.errors[errorIndex];\r\n\r\n        this.tooltip = {\r\n          title: error.type,\r\n          color: error.color,\r\n          message: error.message\r\n        }\r\n      }\r\n      else {\r\n        this.tooltip = {\r\n          message: '',\r\n          color: '',\r\n          title: ''\r\n        };\r\n      }\r\n    },\r\n\r\n    click: function (e: any) {\r\n      if (e.target.parentNode?.className.includes(\"error\")) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let prismEditor = this.$refs.prism as any;    // casting to any :(\r\n        let newTarget = prismEditor.$refs.textarea as HTMLInputElement;\r\n\r\n        let errorIndex = parseInt(e.target.parentNode.dataset[\"errorIdx\"]) as number;\r\n        \r\n        let error: IriscError;\r\n        if (errorIndex === -1) error = this.exitStatus as RuntimeError;\r\n        else error = this.errors[errorIndex];\r\n\r\n        newTarget.dispatchEvent(\r\n          new CustomEvent('errorClick', {\r\n            detail: {\r\n              coords: { x: e.layerX, y: e.layerY } as TPoint,\r\n              lineNumber: error.lineNumber\r\n            }\r\n          }\r\n        ));\r\n      }\r\n      else if (e.target.className.includes(\"line-number\")){\r\n        SimulatorState.toggleBreakpoint(e.target.innerText - 1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    dblclick: function (e: any) {\r\n      if (e.target.parentNode?.className.includes(\"error\")) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        let prismEditor = this.$refs.prism as any;    // casting to any :(\r\n        let newTarget = prismEditor.$refs.textarea as HTMLInputElement;\r\n\r\n        let errorIndex = parseInt(e.target.parentNode.dataset[\"errorIdx\"]) as number;\r\n        \r\n        let error: IriscError;\r\n        if (errorIndex === -1) error = this.exitStatus as RuntimeError;\r\n        else error = this.errors[errorIndex];\r\n\r\n        newTarget.dispatchEvent(\r\n          new CustomEvent('errorDblClick', {\r\n            detail: {\r\n              coords: { x: e.layerX, y: e.layerY } as TPoint,\r\n              lineNumber: error.lineNumber\r\n            }\r\n          }\r\n        ));\r\n      }\r\n    },\r\n\r\n    lineComment: function (e: any) {\r\n      let prismEditor = this.$refs.prism as any;    // casting to any :(\r\n      let textarea = prismEditor.$refs.textarea as HTMLTextAreaElement;\r\n\r\n      // save current selection and reinstate after comments are added\r\n      let selectionStart = textarea.selectionStart;\r\n      let selectionEnd = textarea.selectionEnd;\r\n      \r\n      // split into lines\r\n      let lines = textarea.value.split(/\\r?\\n|\\r/);\r\n\r\n      // get selected line indexes\r\n      let lineIdxs = getSelectedLineIndexes(textarea);\r\n      let commentCount = lineIdxs.reduce((count, lineIdx) => {\r\n        let line = lines[lineIdx];\r\n        if (line.substring(0, 3) !== \"// \" && line !== \"\") count++;\r\n\r\n        return count;\r\n      }, 0);\r\n\r\n      let addComment = true;\r\n      if (commentCount < lineIdxs.length / 2) addComment = false;\r\n\r\n      // add or remove \"// \" to create a solid block of commented or uncommented code within the selection.\r\n      lineIdxs.forEach(e => {\r\n        if (addComment && lines[e].substring(0, 3) !== \"// \" && lines[e] !== \"\") {\r\n          lines[e] = `// ${lines[e]}`\r\n          selectionEnd += 3;      // increment persisted selection end\r\n        }\r\n        else if (!addComment && lines[e].substring(0, 3) === \"// \") {\r\n          lines[e] = lines[e].substring(3);\r\n          selectionEnd -= 3;      // decrement persisted selection end\r\n        }\r\n      });\r\n\r\n      // join commented lines and reinstate selection\r\n      this.program = lines.join(\"\\n\");\r\n      this.$nextTick(() => textarea.setSelectionRange(selectionStart, selectionEnd));\r\n\r\n      function getSelectedLineIndexes(textarea: HTMLTextAreaElement) {\r\n        let start = textarea.value.substr(0, textarea.selectionStart).split(/\\r?\\n|\\r/).length - 1;\r\n        let end = textarea.value.substr(0, textarea.selectionEnd).split(/\\r?\\n|\\r/).length - 1;\r\n\r\n        // create array of all line indexes i.e.\r\n        // [3, 4, 5] if lines 4, 5, and 6 are selected\r\n        return Array.from({length: (end - start) + 1}, (_, i) => i + start);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlighter: function (program: string) {\r\n      // initial ARMv7 syntax highlighting from file\r\n      let highlit: string = highlight(program, languages.armv7, 'ARMv7');\r\n      if (highlit.length === 0) return \"\";\r\n\r\n      // deconstruct program to lines\r\n      let lines = highlit.split(`<span class=\"token end\">\\n</span>`);\r\n\r\n      // deconstruct lines to tokens\r\n      let tokens = lines.map(e => e.match(/<span.*?<\\/span>\\s*/gim) ?? []) as RegExpMatchArray[];\r\n\r\n      // squiggly underline token errors\r\n      this.highlightTokenErrors(tokens);\r\n\r\n      // reconstruct highlit tokens to lines\r\n      lines = tokens.map(e => (e as string[]).join(\"\"));\r\n      this.highlightLineErrors(lines);\r\n      this.highlightBreakpoints(lines);\r\n      this.highlightExecuting(lines);\r\n      \r\n      // reconstruct highlit lines to program\r\n      return lines.join(`<span class=\"token end\">\\n</span>`);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlightTokenErrors: function (elements: RegExpMatchArray[]) {\r\n      this.errors\r\n        .forEach((error, index) => {\r\n          if (error.tokenIndex === -1) return;\r\n\r\n          let line = elements[error.lineNumber];\r\n\r\n          let filteredIndex: number = -1;\r\n          let tokenIndex = line?.findIndex((e, i) => {\r\n            if (!e.includes(\"whitespace\")) filteredIndex++;\r\n            if (filteredIndex === error.tokenIndex) return true;\r\n          })\r\n          let tokenString = line?.[tokenIndex];\r\n\r\n          if (tokenString !== undefined) {\r\n            line[tokenIndex] = `<span class=\"token error\" style=\"text-decoration-color: ${error.color}\" data-error-idx=\"${index}\">${tokenString}</span>`;\r\n          }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlightLineErrors: function (lines: string []) {\r\n      // compile-time errors\r\n      this.errors\r\n        .forEach((error, index) => {\r\n          if (error.tokenIndex !== -1) return;\r\n\r\n          let line = lines[error.lineNumber];\r\n          if (line !== undefined) {\r\n            lines[error.lineNumber] = `<span class=\"line error\" style=\"text-decoration-color: ${error.color}\" data-error-idx=\"${index}\">${line}</span>`;\r\n          }\r\n        });\r\n\r\n      // exit status runtime error\r\n      if (this.exitStatus instanceof RuntimeError) {\r\n        let line = lines[this.exitStatus.lineNumber];\r\n        if (line !== undefined) {\r\n          lines[this.exitStatus.lineNumber] = `<span class=\"line error\" style=\"text-decoration-color: ${this.exitStatus.color}\" data-error-idx=\"${-1}\">${line}</span>`;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlightBreakpoints: function (lines: string[]) {\r\n      // user breakpoints\r\n      this.breakpoints\r\n        .forEach((instruction) => {\r\n          let line = lines[instruction.lineNumber];\r\n          if (line !== undefined) {\r\n            lines[instruction.lineNumber] = `<span class=\"line breakpoint\">${line}</span>`;\r\n          }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlightExecuting: function (lines: string[]) {\r\n      if (this.running && this.currentInstruction) {\r\n        let executing = lines[this.currentInstruction!.lineNumber];\r\n\r\n        if (executing !== undefined) {\r\n          lines[this.currentInstruction!.lineNumber] = `<span class=\"line executing\">${executing}</span>`;\r\n        }\r\n        \r\n        this.$nextTick(() => {\r\n          const node = document.querySelector('.line.executing');\r\n\r\n          if (node) {\r\n            scrollIntoView(node, {\r\n              scrollMode: 'if-needed',\r\n              block: 'nearest',\r\n              inline: 'nearest',\r\n            });\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    moveCaretToCursor: function (e: any) {\r\n      let mouseCoords: TPoint = e.detail.coords;\r\n      let textarea = e.target as HTMLTextAreaElement;\r\n      let caretPosition = this.getCaretPositionAtCursor(textarea, mouseCoords, e.detail.lineNumber);\r\n\r\n      textarea.setSelectionRange(caretPosition, caretPosition);\r\n      textarea.focus();\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    highlightWordAtCursor: function (e: any) {\r\n      let mouseCoords: TPoint = e.detail.coords;\r\n      let textarea = e.target as HTMLTextAreaElement;\r\n      let caretPosition = this.getCaretPositionAtCursor(textarea, mouseCoords, e.detail.lineNumber);\r\n      let [wordStart, wordEnd] = [caretPosition, caretPosition];\r\n\r\n      while (/\\w/.test(textarea.value[wordStart - 1]) && wordStart > 0) wordStart--;\r\n      while (/\\w/.test(textarea.value[wordEnd]) && wordEnd < textarea.value.length) wordEnd++;\r\n\r\n      textarea.setSelectionRange(wordStart, wordEnd);\r\n      textarea.focus();\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getCaretPositionAtCursor: function (element: HTMLTextAreaElement, mouseCoords: TPoint, lineNumber: number) : number {\r\n      // skip to start of offending line\r\n      const lines = element.value.split(\"\\n\");\r\n      let startIndex = 0;\r\n      for (let i = 0; i < lineNumber; i++) {\r\n        startIndex += lines[i].length + 1   // +1 here because of newline character which was removed during the split\r\n      }\r\n\r\n      let endIndex = startIndex + lines[lineNumber].length;\r\n      let smallestDistance = Number.MAX_VALUE;\r\n      let caretPosition = 0;\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        let textPos = getCaretCoordinates(element, i);\r\n        let charCoords: TPoint = { \r\n          x: textPos.left, \r\n          y: textPos.top + (textPos.height / 2)\r\n        };\r\n\r\n        let distance = getRoughDistance(mouseCoords, charCoords);\r\n        if (distance < smallestDistance) {\r\n          smallestDistance = distance;\r\n          caretPosition = i;\r\n        }\r\n      }\r\n\r\n      return caretPosition;\r\n\r\n      function getRoughDistance(p1: TPoint, p2: TPoint) : number {\r\n        let y = p2.x - p1.x;\r\n        let x = p2.y - p1.y;\r\n        \r\n        return x * x + y * y;\r\n      }\r\n    },\r\n\r\n    focus: function () {\r\n      const prismEditor = this.$refs.prism as any;    // casting to any :(\r\n      const textarea = prismEditor.$refs.textarea as HTMLTextAreaElement;\r\n\r\n      textarea.focus();\r\n    },\r\n\r\n    // quicksave: function () {\r\n    //   if (this.currentFile?.writeable) {\r\n    //     FileSystemState.save(this.currentFile)\r\n    //   }\r\n    // },\r\n\r\n    save: function () {\r\n      if (Shepherd.activeTour) return;\r\n\r\n      this.filename = this.currentFile?.name ?? \"\";\r\n      (this.$refs.save as BModal).show();\r\n\r\n      // // save to filesystem\r\n      // if (this.currentFile?.writeable) {\r\n      //   FileSystemState.save(this.currentFile, this.program);\r\n      // }\r\n      // else {\r\n        \r\n      // }\r\n    },\r\n\r\n    saveAllowChar: function (e: KeyboardEvent) {\r\n      if (/^[^\\d\\w._]$/.test(e.key)) {\r\n        e.preventDefault();\r\n      }\r\n    },\r\n\r\n    saveAs: function () {\r\n      if (!this.currentDirectory.writeable || (this.selectedFile && !this.selectedFile.writeable)) {\r\n        return;\r\n      }\r\n\r\n      let file = this.selectedFile;\r\n      if (!file) {\r\n        file = FileSystemState.newFile(this.filename, \"\");\r\n        FileSystemState.addFile(file, this.currentDirectory);\r\n        \r\n      }\r\n\r\n      FileSystemState.save(file, this.program);\r\n      FileSystemState.openFile(file);\r\n\r\n      (this.$refs.save as BModal).hide();\r\n    },\r\n\r\n    /**\r\n     * Save editor content to local storage so that it persists on this device\r\n     */\r\n    autoSave: debounce(function (program: string) {\r\n      if (Shepherd.activeTour) return;\r\n\r\n      // save to program cache\r\n      localStorage.setItem('program', program);\r\n    }),\r\n\r\n    /**\r\n     * Load editor content from local storage so that it persists on this device\r\n     */\r\n    load: function () {\r\n      this.program = localStorage.getItem('program') ?? \"\";\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   */\r\n  created: function () {\r\n    this.load();\r\n  },\r\n\r\n  /**\r\n   * \r\n   */\r\n  mounted: function () {\r\n    let prismEditor = this.$refs.prism as any;    // casting to any :(\r\n    let textarea = prismEditor.$refs.textarea as HTMLTextAreaElement;\r\n\r\n    textarea.addEventListener('errorClick', this.moveCaretToCursor);\r\n    textarea.addEventListener('errorDblClick', this.highlightWordAtCursor);\r\n  },\r\n\r\n  updated: function () {\r\n    if (Shepherd.activeTour && !this.tourActive) {\r\n      this.tourActive = true;\r\n      FileSystemState.openFile(helloWorldSample);\r\n\r\n      Shepherd.activeTour.once(\r\n        'inactive', \r\n        () => {\r\n          this.tourActive = false;\r\n          this.load();\r\n        }\r\n      );\r\n    }\r\n  },\r\n\r\n  activated: function () {\r\n    this.focus();\r\n  },\r\n\r\n  /**\r\n   * \r\n   */\r\n  beforeDestroy: function () {\r\n    let prismEditor = this.$refs.prism as any;    // casting to any :(\r\n    let textarea = prismEditor.$refs.textarea as HTMLTextAreaElement;\r\n\r\n    textarea.removeEventListener('errorClick', this.moveCaretToCursor);\r\n    textarea.removeEventListener('errorDblClick', this.highlightWordAtCursor);\r\n  },\r\n\r\n  watch: {\r\n    /**\r\n     * \r\n     */\r\n    program: debounce(Assembler.build, 500),\r\n\r\n    /**\r\n     * \r\n     */\r\n    memory: function (val, old) {\r\n      if (val.size !== old.size) Assembler.build(this.program);\r\n    },\r\n\r\n    currentFile: function (file) {\r\n      this.program = file.content ?? \"\";\r\n      localStorage.setItem('program', this.program);\r\n      this.reset();\r\n    },\r\n\r\n    filename: function (name: string) {\r\n      this.filename = name.replace(/[^\\d\\w._]/g, \"\");\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=025b9e4e&scoped=true&\"\nimport script from \"./editor.vue?vue&type=script&lang=ts&\"\nexport * from \"./editor.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./editor.vue?vue&type=style&index=0&id=025b9e4e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"025b9e4e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex flex-column container text-left p-3\",attrs:{\"tour-item\":\"assembler\"}},[_c('div',{staticClass:\"mb-3\"},[_vm._l((_vm.sections),function(section,index){return _c('span',{key:index,staticClass:\"section\",on:{\"mouseenter\":function($event){return _vm.tip(section)},\"mouseleave\":_vm.untip}},_vm._l((section.bits),function(bit,index){return _c('span',{key:index,staticClass:\"bit\"},[_vm._v(\" \"+_vm._s(bit)+\" \")])}),0)}),_c('div',{staticClass:\"history clickable\",attrs:{\"tour-item\":\"history\"},on:{\"click\":_vm.showHistory}},[_c('i',{staticClass:\"button fas fa-history\"})])],2),_c('div',{staticClass:\"fenced flex-grow-1\",staticStyle:{\"overflow\":\"auto\"}},[(_vm.computedTooltip.type === _vm.TipType.INSTRUCTION)?[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.computedTooltip.title)}}),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.computedTooltip.subtitle.length > 0),expression:\"computedTooltip.subtitle.length > 0\"}]},[_c('span',{class:_vm.computedTooltip.subtitle === 'Executed' ? 'executed' : 'not-executed'},[_vm._v(\" \"+_vm._s(_vm.computedTooltip.subtitle)+\" \")])]),_c('div',[_vm._v(_vm._s(_vm.computedTooltip.detail))])])]:[_c('div',[_vm._v(_vm._s(_vm.computedTooltip.title))]),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.computedTooltip.subtitle.length > 0),expression:\"computedTooltip.subtitle.length > 0\"}]},[_vm._v(_vm._s(_vm.computedTooltip.subtitle))]),_c('div',[_vm._v(_vm._s(_vm.computedTooltip.detail))])])]],2),_c('b-modal',{ref:\"history\",attrs:{\"id\":\"state-history\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"}},[_c('div',{staticClass:\"px-4 py-1\",attrs:{\"tour-item\":\"state-history\"}},[_c('h4',[_vm._v(\"state history\")]),_c('div',{staticClass:\"position-relative mt-3\"},[_vm._l((_vm.snapshots),function(snapshot){return _c('div',{key:snapshot.key,ref:(\"tick_\" + (snapshot.tick)),refInFor:true,staticClass:\"snapshot fenced clickable mb-4\",class:_vm.currentTick === snapshot.tick ? 'current' : 'not-current',attrs:{\"tour-item\":(\"state-history-tick-\" + (snapshot.tick))},on:{\"click\":function($event){return _vm.reinstate(snapshot.tick)}}},[_c('span',{staticClass:\"d-inline-block tick rounded py-1\"},[_vm._v(_vm._s(snapshot.tick))]),_c('div',{staticStyle:{\"color\":\"#DCDCDC\"}},[_c('span',{staticClass:\"p-1\",domProps:{\"innerHTML\":_vm._s(snapshot.instruction)}}),_c('span',{staticClass:\"reinstate px-1 float-right\"},[_c('i',{staticClass:\"fas fa-share fa-rotate-180 fa-xs\"})])]),_c('div',{staticClass:\"ml-3\"},_vm._l((snapshot.registersHit),function(ref){\nvar register = ref[0];\nvar oldValue = ref[1];\nreturn _c('div',{key:register},[_vm._v(\" \"+_vm._s(_vm.regName[register])+\": \"+_vm._s(oldValue)+\" >> \"+_vm._s(snapshot.registers[register])+\" \")])}),0),(snapshot.memWrite)?_c('div',{staticClass:\"ml-3\"},[_vm._v(\" bytes \"),_c('u',[_vm._v(\"written\")]),_vm._v(\" in range: \"+_vm._s(snapshot.memWrite.base)+\" - \"+_vm._s(snapshot.memWrite.limit)+\" \")]):_vm._e(),(snapshot.memRead)?_c('div',{staticClass:\"ml-3\"},[_vm._v(\" bytes \"),_c('u',[_vm._v(\"read\")]),_vm._v(\" in range: \"+_vm._s(snapshot.memRead.base)+\" - \"+_vm._s(snapshot.memRead.limit)+\" \")]):_vm._e()])}),_c('div',{staticClass:\"position-absolute\",staticStyle:{\"top\":\"0\"}},[_c('transition',{attrs:{\"name\":\"slide-fade-right\"}},[(_vm.historyShown)?_c('div',{staticClass:\"position-fixed fenced control-box px-1 pb-1 pt-0\",attrs:{\"tour-item\":\"state-history-debug\"}},[_c('div',{staticClass:\"pb-1\"},[_vm._v(\"debugger\")]),_c('debug',{staticClass:\"debugger\",attrs:{\"tooltip\":_vm.debuggerTooltip},on:{\"update:tooltip\":function($event){_vm.debuggerTooltip=$event}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.debuggerTooltip),expression:\"debuggerTooltip\"}],staticClass:\"control-tooltip fenced px-1\"},[_vm._v(\" \"+_vm._s(_vm.debuggerTooltip)+\" \")])],1):_vm._e()])],1)],2)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { TSimulatorSnapshot } from \"@/simulator/types\";\r\nimport { TByteRange, TSnapshotExplanation } from \"./types\";\r\nimport { Flag, Register } from \"@/constants\";\r\nimport { highlight, languages } from \"prismjs\";\r\nimport { zip } from \"@/assets/functions\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { TransferNode } from \"@/syntax\";\r\n\r\nexport function explain(snapshot: TSimulatorSnapshot, prevSnapshot: TSimulatorSnapshot | undefined): TSnapshotExplanation {\r\n\tconst explanation = {\r\n\t\tkey: snapshot.key,\r\n\t\t\r\n\t\ttick: snapshot.cpu.tick,\r\n\t\tinstruction: snapshot.currentInstruction\r\n\t\t\t? highlight(snapshot.currentInstruction.text, languages.armv7, 'ARMv7')\r\n\t\t\t: \"Base State\",\r\n\r\n\t\tregisters: snapshot.cpu.observableRegisters,\r\n\t\tflags: snapshot.cpu.cpsr,\r\n\r\n\t\tregistersHit: new Map<Register, number>(),\r\n\t\tflagsHit: new Map<Flag, boolean>(),\r\n\t} as TSnapshotExplanation;\r\n\r\n\tif (prevSnapshot) {\r\n\t\t// determine which registers were hit\r\n\t\texplanation.registersHit = zip(snapshot.cpu.observableRegisters, prevSnapshot.cpu.observableRegisters)\r\n\t\t\t.reduce((hitSet, [newReg, oldReg], index) => {\r\n\t\t\t\tif (newReg !== oldReg) hitSet.set(index, oldReg);\r\n\t\t\t\treturn hitSet;\r\n\t\t\t}, new Map<Register, number>());\r\n\r\n\t\t// determine which flags where hit\r\n\t\texplanation.flagsHit = zip(snapshot.cpu.cpsr, prevSnapshot.cpu.cpsr)\r\n\t\t\t.reduce((hitSet, [newFlag, oldFlag], index) => {\r\n\t\t\t\tif (newFlag !== oldFlag) hitSet.set(index, oldFlag);\r\n\t\t\t\treturn hitSet;\r\n\t\t\t}, new Map<Flag, boolean>());\r\n\r\n\r\n\t\t// discover which range of memory was accessed\r\n\t\tif (snapshot.currentInstruction instanceof TransferNode) {\r\n\t\t\tconst range = SimulatorState.getMemoryAccessRange(snapshot.currentInstruction, prevSnapshot);\r\n\t\t\tif (snapshot.currentInstruction.isRead) {\r\n\t\t\t\texplanation.memRead = range;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\texplanation.memWrite = range;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst prevMem = Array.from(prevSnapshot.memory.byteView);\r\n\t\t\tconst mem = Array.from(snapshot.memory.byteView);\r\n\r\n\t\t\texplanation.memWrite = zip(mem, prevMem)\r\n\t\t\t\t.reduce((range, [newByte, oldByte], index) => {\r\n\t\t\t\t\tif (newByte !== oldByte) {\r\n\t\t\t\t\t\tif (!range) range = { base: index, limit: index }\r\n\t\t\t\t\t\telse range.limit = index;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn range;\r\n\t\t\t\t}, undefined as TByteRange | undefined);\r\n\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\treturn explanation;\r\n}","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./instruction.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./instruction.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./instruction.vue?vue&type=template&id=9526e860&scoped=true&\"\nimport script from \"./instruction.vue?vue&type=script&lang=ts&\"\nexport * from \"./instruction.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./instruction.vue?vue&type=style&index=0&id=9526e860&scoped=true&lang=css&\"\nimport style1 from \"./instruction.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9526e860\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex flex-column container text-center p-3\",attrs:{\"tour-item\":\"memory\"}},[_c('div',{staticClass:\"dashed mb-3 px-2 py-1\"},[_c('div',{staticClass:\"d-flex align-items-end position-relative w-100\",attrs:{\"tour-item\":\"memory-usage\"}},[_c('div',{staticClass:\"d-flex flex-column sector text\",style:((\"width: \" + _vm.textWidth + \"%;\"))},[_c('div',{staticClass:\"label\"},[_c('span',{on:{\"mouseenter\":function($event){return _vm.tip('text')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('text')}}},[_vm._v(\" text \")])]),_c('div',{staticClass:\"region\",on:{\"mouseenter\":function($event){return _vm.tip('text')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('text')}}}),_c('div',{staticClass:\"placeholder\"})]),(_vm.dataWidth > 0)?_c('div',{staticClass:\"d-flex flex-column sector data\",style:((\"width: \" + _vm.dataWidth + \"%\"))},[_c('div',{staticClass:\"placeholder\"}),_c('div',{staticClass:\"region\",on:{\"mouseenter\":function($event){return _vm.tip('data')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('data')}}}),_c('div',{staticClass:\"label\"},[_c('span',{on:{\"mouseenter\":function($event){return _vm.tip('data')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('data')}}},[_vm._v(\" data \")])])]):_vm._e(),(_vm.heapWidth > 0)?_c('div',{staticClass:\"d-flex flex-column sector heap\",style:((\"width: \" + _vm.heapWidth + \"%\"))},[_c('div',{staticClass:\"label\"},[_c('span',{on:{\"mouseenter\":function($event){return _vm.tip('heap')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('heap')}}},[_vm._v(\" heap \")])]),_c('div',{staticClass:\"region\",on:{\"mouseenter\":function($event){return _vm.tip('heap')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('heap')}}}),_c('div',{staticClass:\"placeholder\"})]):_vm._e(),_c('div',{staticClass:\"d-flex flex-column sector uninitialised\",style:((\"width: \" + _vm.uninitWidth + \"%\"))},[_c('div',{staticClass:\"region\",on:{\"mouseenter\":function($event){return _vm.tip('uninitialised')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('uninitialised')}}}),_c('div',{staticClass:\"placeholder\"})]),_c('div',{staticClass:\"d-flex flex-column sector stack\",style:((\"width: \" + _vm.stackWidth + \"%\"))},[_c('div',{staticClass:\"label rtl\"},[_c('span',{on:{\"mouseenter\":function($event){return _vm.tip('stack')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('stack')}}},[_vm._v(\" stack \")])]),_c('div',{staticClass:\"region\",on:{\"mouseenter\":function($event){return _vm.tip('stack')},\"mouseleave\":_vm.untip,\"click\":function($event){return _vm.explore('stack')}}}),_c('div',{staticClass:\"placeholder\"})]),(_vm.stackPointer >= 0 && _vm.stackPointer <= 100)?_c('div',{staticClass:\"d-flex flex-column sector stack-pointer\",staticStyle:{\"pointer-events\":\"none\"},style:((\"width: \" + _vm.stackPointer + \"%\"))},[_c('div',{staticClass:\"placeholder\"}),_c('div',{staticClass:\"region\",staticStyle:{\"pointer-events\":\"none\"}}),_c('div',{staticClass:\"label rtl text-white text-left\"},[_c('span',{on:{\"mouseenter\":function($event){return _vm.tip('stackPointer')},\"mouseleave\":_vm.untip}},[_vm._v(\" sp \")])])]):_vm._e()])]),_c('div',{staticClass:\"flex-grow-1 dashed info px-2 py-1\",staticStyle:{\"overflow\":\"auto\"}},[(_vm.tooltip)?[_c('div',{staticStyle:{\"width\":\"calc(100% - 40px)\"},style:((\"color: \" + (_vm.tooltip.color) + \";\"))},[_vm._v(\" \"+_vm._s(_vm.tooltip.tip)+\" \")])]:[_c('div',[_vm._v(\" Total: \"+_vm._s(_vm.memory.size)+\" bytes \")]),_c('div',[_vm._v(\" Used: \"),_c('span',{class:{\n            'text-warning': _vm.used === _vm.memory.size,\n            'text-danger': _vm.used > _vm.memory.size\n          }},[_vm._v(\" \"+_vm._s(_vm.used)+\" bytes \")])])]],2),_c('explorer',{ref:\"explorer\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"modal\",attrs:{\"id\":\"memory-explorer\",\"centered\":\"\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"}},[_c('div',{staticClass:\"px-4 py-1\"},[_c('h4',[_vm._v(\"memory explorer\")]),(_vm.memIsInitialised)?_c('div',{staticClass:\"my-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-1 pl-0 pr-3\"},_vm._l((_vm.memSize / 4),function(_,index){return _c('div',{key:index,staticClass:\"word-index\"},[_vm._v(_vm._s(index * 4))])}),0),_c('div',{staticClass:\"col pl-0\",attrs:{\"tour-item\":\"memory-data\"}},[_c('div',{staticClass:\"position-relative \"},[_c('div',_vm._l((_vm.wordView),function(word,wordIndex){return _c('div',{key:wordIndex,staticClass:\"row word no-gutters\"},[(_vm.size === 'byte')?_vm._l((4),function(_,byteIndex){return _c('div',{key:(wordIndex + \"_\" + byteIndex),staticClass:\"col text-center\"},[_vm._v(\" \"+_vm._s(_vm.printByte(_vm.byteValue(wordIndex, byteIndex)))+\" \")])}):[_c('div',{staticClass:\"col text-center\"},[_vm._v(\" \"+_vm._s(_vm.printWord(word))+\" \")])]],2)}),0),_c('div',{staticClass:\"regions\"},[_c('div',{staticClass:\"region text fenced tippable\",style:((\"top: \" + (_vm.textOffset * 22) + \"px\")),on:{\"mouseenter\":function($event){return _vm.tip('text')},\"mouseleave\":_vm.untip}},_vm._l((_vm.textWordHeight),function(n,index){return _c('div',{key:n,staticClass:\"word hoverable\",on:{\"mouseenter\":function($event){_vm.instructionIndex = index;},\"mouseleave\":function($event){_vm.instructionIndex = undefined;}}})}),0),(_vm.dataWordHeight > 0)?_c('div',{staticClass:\"region data fenced tippable\",style:((\"top: \" + (_vm.dataOffset * 22) + \"px\")),on:{\"mouseenter\":function($event){return _vm.tip('data')},\"mouseleave\":_vm.untip}},_vm._l((_vm.dataWordHeight),function(w,wIndex){return _c('div',{key:w,staticClass:\"row word no-gutters\"},[(_vm.size === 'byte')?_vm._l((4),function(b,bIndex){return _c('div',{key:b,staticClass:\"col byte\",class:_vm.highlitData.includes((wIndex * 4) + bIndex) ? 'highlight' : '',on:{\"mouseenter\":function($event){return _vm.dataHover(wIndex, bIndex)},\"mouseleave\":function($event){_vm.highlitData = []; _vm.hoveredDeclaration = undefined;}}})}):_vm._e()],2)}),0):_vm._e(),(_vm.heapWordHeight > 0)?_c('div',{staticClass:\"region heap fenced tippable\",style:((\"top: \" + (_vm.heapOffset * 22) + \"px\")),on:{\"mouseenter\":function($event){return _vm.tip('heap')},\"mouseleave\":_vm.untip}},[_vm._l((_vm.heapBlocks),function(block,index){return _c('div',{key:index,staticClass:\"block\",style:((\"height: \" + ((block.size / 4) * 22) + \"px\"))})}),_c('div',{staticClass:\"region\",staticStyle:{\"top\":\"0\"}},_vm._l((_vm.heapContiguousBlocks),function(block,index){return _c('div',{key:index,class:block.allocated ? 'allocated' : '',style:((\"height: \" + ((block.size / 4) * 22) + \"px\")),on:{\"mouseenter\":function($event){return _vm.tip('heap')},\"mouseleave\":_vm.untip}})}),0)],2):_vm._e(),_c('div',{staticClass:\"region tippable\",style:((\"top: \" + (_vm.uninitOffset * 22) + \"px\")),on:{\"mouseenter\":function($event){return _vm.tip('uninitialised')},\"mouseleave\":_vm.untip}},_vm._l((_vm.uninitWordHeight),function(n){return _c('div',{key:n,staticClass:\"word\"})}),0),_c('div',{staticClass:\"region stack fenced tippable\",on:{\"mouseenter\":function($event){return _vm.tip('stack')},\"mouseleave\":_vm.untip}},_vm._l((_vm.stackWordHeight),function(n){return _c('div',{key:n,staticClass:\"word\"})}),0)])])]),_c('div',{staticClass:\"col-3 px-0\"},[_c('div',{staticClass:\"position-fixed fenced px-2\",staticStyle:{\"width\":\"117px\"}},[_c('h5',{staticClass:\"mb-2\"},[_vm._v(\"options\")]),_c('b-form-group',{attrs:{\"label\":\"chunk size\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar ariaDescribedby = ref.ariaDescribedby;\nreturn [_c('b-form-radio-group',{staticClass:\"radio\",attrs:{\"aria-describedby\":ariaDescribedby,\"buttons\":\"\",\"stacked\":\"\"},model:{value:(_vm.size),callback:function ($$v) {_vm.size=$$v},expression:\"size\"}},_vm._l((_vm.sizes),function(dsize){return _c('b-form-radio',{key:dsize.value,attrs:{\"value\":dsize.value}},[_vm._v(\" \"+_vm._s(dsize.text)+\" \")])}),1)]}}],null,false,3345607473)}),_c('b-form-group',{attrs:{\"label\":\"datatype\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar ariaDescribedby = ref.ariaDescribedby;\nreturn [_c('b-form-radio-group',{staticClass:\"radio\",attrs:{\"aria-describedby\":ariaDescribedby,\"buttons\":\"\",\"stacked\":\"\"},model:{value:(_vm.datatype),callback:function ($$v) {_vm.datatype=$$v},expression:\"datatype\"}},[_vm._l((_vm.datatypes),function(dtype){return _c('b-form-radio',{key:dtype.value,attrs:{\"value\":dtype.value}},[_vm._v(\" \"+_vm._s(dtype.text)+\" \")])}),(_vm.size !== 'word')?_c('b-form-radio',{attrs:{\"value\":\"ascii\"}},[_vm._v(\" ascii \")]):_vm._e()],2)]}}],null,false,2306554320)}),(_vm.size === 'byte')?_c('div',{staticClass:\"tippable\",on:{\"mouseenter\":function($event){return _vm.tip('endianness')},\"mouseleave\":_vm.untip}},[_c('b-form-group',{attrs:{\"label\":\"endianness\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar ariaDescribedby = ref.ariaDescribedby;\nreturn [_c('b-form-radio-group',{staticClass:\"radio\",attrs:{\"aria-describedby\":ariaDescribedby,\"buttons\":\"\",\"stacked\":\"\"},model:{value:(_vm.endianness),callback:function ($$v) {_vm.endianness=$$v},expression:\"endianness\"}},_vm._l((_vm.endiannesses),function(endian){return _c('b-form-radio',{key:endian.value,attrs:{\"value\":endian.value}},[_vm._v(\" \"+_vm._s(endian.text)+\" \")])}),1)]}}],null,false,1335541044)})],1):_vm._e()],1),_c('transition',{attrs:{\"name\":\"slide-fade-left\"}},[(_vm.shown)?[_c('div',{staticClass:\"position-fixed tooltip-container\"},[_c('div',{staticClass:\"fenced tooltip-box px-1 pb-1\"},[_c('div',{staticClass:\"pb-1\",domProps:{\"innerHTML\":_vm._s(_vm.tooltip.title)}}),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.tooltip.detail)}})])]),(_vm.instructionIndex !== undefined && _vm.instruction)?_c('div',{staticClass:\"fenced tooltip-box mt-3 px-1 pb-1\",staticStyle:{\"font-size\":\"14px\"}},[_c('div',[_vm._v(\"src: \"),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.highlight(_vm.instruction))}})]),_c('div',[_vm._v(\"adr: \"+_vm._s(_vm.instructionIndex * 4))]),_c('div',[_vm._v(\"hex: \"+_vm._s(_vm.hexstr(_vm.wordView[_vm.instructionIndex], 8)))]),_c('div',[_vm._v(\"bin: \"+_vm._s(_vm.binstr(_vm.wordView[_vm.instructionIndex], 32)))])]):_vm._e(),(_vm.hoveredDeclaration)?_c('div',{staticClass:\"fenced tooltip-box mt-3 px-1 pb-1\",staticStyle:{\"font-size\":\"14px\"}},[_c('div',[_vm._v(\"labl: \"),_c('span',{staticClass:\"token label\"},[_vm._v(_vm._s(_vm.hoveredDeclaration.label))])]),_c('div',[_vm._v(\" type: \"),_c('span',{staticClass:\"token directive\"},[_vm._v(_vm._s(_vm.hoveredDeclaration.type)+\" \")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hoveredDeclaration.size > _vm.dataTypeByteSizeMap[_vm.dataTypeMap[_vm.hoveredDeclaration.type]]),expression:\"hoveredDeclaration.size > dataTypeByteSizeMap[dataTypeMap[hoveredDeclaration.type]]\"}]},[_vm._v(\" [\"+_vm._s(_vm.hoveredDeclaration.size / _vm.dataTypeByteSizeMap[_vm.dataTypeMap[_vm.hoveredDeclaration.type]])+\"] \")])]),_c('div',[_vm._v(\"addr: \"+_vm._s(_vm.hoveredDeclaration.offset + _vm.textHeight))]),_c('div',[_vm._v(\"size: \"+_vm._s(_vm.hoveredDeclaration.size)+\" bytes\")])]):_vm._e()])]:_vm._e()],2),_c('transition',{attrs:{\"name\":\"slide-fade-right\"}},[(_vm.shown)?_c('div',{staticClass:\"position-fixed fenced control-box px-1 pb-1\"},[_c('div',{staticClass:\"pb-1\"},[_vm._v(\"debugger\")]),_c('debug',{staticClass:\"debugger\",attrs:{\"tooltip\":_vm.controlTooltip},on:{\"update:tooltip\":function($event){_vm.controlTooltip=$event}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.controlTooltip),expression:\"controlTooltip\"}],staticClass:\"control-tooltip fenced px-1\"},[_vm._v(\" \"+_vm._s(_vm.controlTooltip)+\" \")])],1):_vm._e()])],1)])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { BModal } from 'bootstrap-vue';\r\nimport { SimulatorState } from '@/simulator';\r\nimport { TDictionary, asciiTable } from \"@/assets\";\r\nimport Vue from 'vue';\r\nimport { highlight, languages } from 'prismjs';\r\nimport { TInstructionNode } from '@/syntax/types';\r\nimport debug from './debug.vue';\r\nimport { TAllocation, TDeclaration } from '@/simulator/types';\r\nimport clone from \"lodash.clonedeep\";\r\nimport Shepherd from 'shepherd.js';\r\nimport { dataTypeByteSizeMap, dataTypeMap } from '@/constants';\r\n\r\ntype TTip = {\r\n\ttitle: string;\r\n\tdetail: string;\r\n}\r\n\r\ntype TBoundary = {\r\n\tleft?: number;\r\n\tright?: number;\r\n\ttop: number[];\r\n\tbottom: number[];\r\n}\r\n\r\nexport default Vue.extend({\r\n\tname: 'explorer',\r\n\tcomponents: {\r\n\t\tdebug\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tsection: undefined as string | undefined,\r\n\r\n\t\t\tsize: 'byte',\r\n\t\t\tsizes: [\r\n\t\t\t\t{ text: 'byte', value: 'byte' },\r\n\t\t\t\t{ text: 'word', value: 'word' }\r\n\t\t\t],\r\n\r\n\t\t\tdatatype: 'hex',\r\n\t\t\tdatatypes: [\r\n\t\t\t\t{ text: 'hex', value: 'hex' },\r\n\t\t\t\t{ text: 'dec', value: 'dec' },\r\n\t\t\t\t{ text: 'bin', value: 'bin' }\r\n\t\t\t],\r\n\r\n\t\t\tendianness: 'little',\r\n\t\t\tendiannesses: [\r\n\t\t\t\t{ text: 'little', value: 'little' },\r\n\t\t\t\t{ text: 'big', value: 'big' }\r\n\t\t\t],\r\n\r\n\t\t\tinstructionIndex: undefined as number | undefined,\r\n\t\t\thighlitData: [] as number[],\r\n\t\t\thoveredDeclaration: undefined as TDeclaration | undefined,\r\n\r\n\t\t\ttooltip: {} as TTip,\r\n\t\t\ttips: {\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\ttitle: \"memory explorer\",\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThis explorer displays the current contents of the simulated memory arranged vertically into words and horizontally\\\r\n\t\t\t\t\t\tinto the 4 bytes which make up each word.\r\n\r\n\t\t\t\t\t\tInitialised regions are divided into <span class=\"label-text\">text</span>, <span class=\"label-data\">data</span> and\\\r\n\t\t\t\t\t\t<span class=\"label-stack\">stack</span>. The unfenced region between the <span class=\"label-data\">data</span> and\\\r\n\t\t\t\t\t\t<span class=\"label-stack\">stack</span> is unintialised memory.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\ttitle: `<span class=\"label-text\">text</span>`,\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThis region, situated in the lowest addresses of the program's virtual address space, contains the machine code\\\r\n\t\t\t\t\t\tfor each instruction in the program.\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tIn an ARMv7 CPU, every instruction fits into one word, so each row of the explorer within the text section is\\\r\n\t\t\t\t\t\ta single instruction from the loaded program, in the order that they were assembled.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\ttitle: `<span class=\"label-data\">data</span>`,\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThis region, which immediately follows the <span class=\"label-text\">text</span> region, contains all static data\\\r\n\t\t\t\t\t\tdefined in the .data region of the loaded program. It is used for storing information which cannot be represented\\\r\n\t\t\t\t\t\tin assembly language immediate values - such as strings and arrays. \r\n\r\n\t\t\t\t\t\tIf you have defined an <span class=\"token directive\">.asciz</span> string in the <span class=\"token directive\">.data</span>\\\r\n\t\t\t\t\t\tregion of your program, you can switch to the ascii datatype and read the string as it appears: byte by byte in memory.\r\n\r\n\t\t\t\t\t\tThis area of the virtual address space may be freely modified by the associated program; however, it cannot be extended\\\r\n\t\t\t\t\t\ti.e. the data can be changed, but not added to.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\theap: {\r\n\t\t\t\t\ttitle: `<span class=\"label-heap\">heap</span>`,\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThis region is the <span class=\"label-heap\">heap</span> and contains data which has been dynamically allocated during the execution of your program.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\tuninitialised: {\r\n\t\t\t\t\ttitle: \"uninitialised memory\",\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThis region contains uninitialised memory, separating the heap (an area of dynamic memory allocation which immediately\\\r\n\t\t\t\t\t\tfollows the data section) from the stack in the virtual address space allocated to the loaded program.\r\n\r\n\t\t\t\t\t\tThe bytes in this section cannot be assumed to be clean, they may contain junk data from whatever process owned this\\\r\n\t\t\t\t\t\tphysical address space before it was allocated to your program. Be aware of this when allocating dynamic data to\\\r\n\t\t\t\t\t\tthe heap.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\tstack: {\r\n\t\t\t\t\ttitle: `<span class=\"label-stack\">stack</span>`,\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\tThe stack is located in the highest addressess of the owning program's virtual address space. As items are pushed onto\\\r\n\t\t\t\t\t\tthe stack, it grows downwards through the addresses until it meets the top of the heap, at which point a segmentation fault\\\r\n\t\t\t\t\t\tis thrown.\r\n\r\n\t\t\t\t\t\tAccording to the Procedure Call Standard for the ARM Architecture (AAPCS), the stack should be 8-byte aligned, this means\\\r\n\t\t\t\t\t\tthat the stack must always contain an even number of words. There's nothing forcing you to do this but it is considered\\\r\n\t\t\t\t\t\tgood practice because it improves memory access speeds on some systems. \r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t\tendianness: {\r\n\t\t\t\t\ttitle: \"endianness\",\r\n\t\t\t\t\tdetail: // html\r\n\t\t\t\t\t`\\\r\n\t\t\t\t\t\t'Endianness' describes the byte order within collections of bytes in memory. Since ARMv7 is a 32 bit processor,\\\r\n\t\t\t\t\t\tthe most common 'collection' of bytes are 32-bit (4-byte) integers. In almost all modern computers, numbers are\\\r\n\t\t\t\t\t\tstored '<span class=\"irisc\">little-endian</span>', meaning that the 'logical' byte order as a human might expect\\\r\n\t\t\t\t\t\tis reversed (!!).\r\n\r\n\t\t\t\t\t\tTo take a common example, the hexadecimal number <span class=\"token immediate\">0x12345678</span> is split into its\\\r\n\t\t\t\t\t\trespective bytes:\\\r\n\r\n\t\t\t\t\t\t<div class=\"ml-3\">\r\n\t\t\t\t\t\t\t<span class=\"label-stack\">0x12</span>\\\r\n\t\t\t\t\t\t\t<span class=\"label-text\">0x34</span>\\\r\n\t\t\t\t\t\t\t<span class=\"label-data\">0x56</span>\\\r\n\t\t\t\t\t\t\t<span class=\"token immediate\">0x78</span>\r\n\t\t\t\t\t\t</div>\\\r\n\r\n\t\t\t\t\t\tIn '<span class=\"irisc\">big-endian</span>', these bytes are stored in the order shown; however, in\\\r\n\t\t\t\t\t\t'<span class=\"irisc\">little-endian</span>', the order of the bytes is reversed:\\\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"ml-3\">\r\n\t\t\t\t\t\t\t<span class=\"token immediate\">0x78</span>\\\r\n\t\t\t\t\t\t\t<span class=\"label-data\">0x56</span>\\\r\n\t\t\t\t\t\t\t<span class=\"label-text\">0x34</span>\\\r\n\t\t\t\t\t\t\t<span class=\"label-stack\">0x12</span>\r\n\t\t\t\t\t\t</div>\\\r\n\r\n\t\t\t\t\t\tThis reversed order is what is actually contained within the memory. I have provided a way to switch the endianness\\\r\n\t\t\t\t\t\tof each word so that they make a bit more sense when read as a whole.\r\n\t\t\t\t\t`\r\n\t\t\t\t},\r\n\t\t\t} as TDictionary<TTip>,\r\n\r\n\t\t\tcontrolTooltip: undefined as string | undefined,\r\n\r\n\t\t\tascii: asciiTable.ascii,\r\n\t\t\tdataTypeMap: dataTypeMap,\r\n\t\t\tdataTypeByteSizeMap: dataTypeByteSizeMap,\r\n\t\t\tshown: false\r\n\t\t};\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tbyteView: SimulatorState.byteView,\r\n\t\twordView: SimulatorState.wordView,\r\n\t\tmemSize: () => SimulatorState.memory().size,\r\n\r\n\t\tmemIsInitialised: () => SimulatorState.memory().buffer !== undefined,\r\n\r\n\t\ttextHeight: () => SimulatorState.memory().textHeight,\r\n\t\tdataHeight: () => SimulatorState.memory().dataHeight,\r\n\t\theapHeight: () => SimulatorState.memory().heapHeight,\r\n\t\tstackHeight: () => SimulatorState.memory().stackHeight,\r\n\r\n\t\ttextWordHeight: function (): number { return this.textHeight / 4 },\r\n\t\tdataWordHeight: function (): number { return this.dataHeight / 4 },\r\n\t\theapWordHeight: function (): number { return this.heapHeight / 4 },\r\n\t\tstackWordHeight: function (): number { return this.stackHeight / 4 },\r\n\t\tuninitWordHeight: function (): number { return Math.max((this.memSize / 4) - this.textWordHeight - this.dataWordHeight  - this.heapWordHeight - this.stackWordHeight, 0) },\r\n\r\n\t\ttextOffset: function (): number { return 0; },\r\n\t\tdataOffset: function (): number { return this.textOffset + this.textWordHeight; },\r\n\t\theapOffset: function (): number { return this.dataOffset + this.dataWordHeight; },\r\n\t\tuninitOffset: function (): number { return this.heapOffset + this.heapWordHeight; },\r\n\t\tstackOffset: function (): number { return this.uninitOffset + this.uninitWordHeight; },\r\n\r\n\t\tdataMap: () => SimulatorState.memory().dataMap,\r\n\t\tdataDeclarations: function (): TDeclaration[] {\r\n\t\t\treturn Array.from(this.dataMap)\r\n\t\t\t\t.sort(([aPtr, _a], [bPtr, _b]) => {\r\n\t\t\t\t\treturn aPtr - bPtr;\r\n\t\t\t\t})\r\n\t\t\t\t.map(e => e[1]);\r\n\t\t},\r\n\r\n\t\theapMap: () => SimulatorState.memory().heapMap,\r\n\t\theapBlocks: function (): TAllocation[] {\r\n\t\t\treturn Array.from(this.heapMap)\r\n\t\t\t\t.sort(([aPtr, _a], [bPtr, _b]) => {\r\n\t\t\t\t\treturn aPtr - bPtr;\r\n\t\t\t\t})\r\n\t\t\t\t.map(e => e[1]);\r\n\t\t},\r\n\t\theapContiguousBlocks: function (): TAllocation[] {\r\n\t\t\treturn this.heapBlocks\r\n\t\t\t\t.reduce((contig, block, index, allocations) => {\r\n\t\t\t\t\tconst lastAllocation = allocations[index - 1];\r\n\r\n\t\t\t\t\tif (lastAllocation?.allocated !== block.allocated) {\r\n\t\t\t\t\t\tcontig.push(clone(block));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse contig[contig.length - 1].size += block.size;\r\n\r\n\t\t\t\t\treturn contig;\r\n\t\t\t\t}, [] as TAllocation[])\r\n\t\t},\r\n\r\n\r\n\r\n\t\tinstructions: () => SimulatorState.memory().text,\r\n\t\tinstruction: function (): TInstructionNode | undefined {\r\n\t\t\tif (this.instructionIndex !== undefined) return this.instructions[this.instructionIndex];\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t},\r\n\r\n\tmethods: {\r\n\t\tshow: function (section: string) {\r\n\t\t\tthis.shown = false;\r\n\t\t\t(this.$refs.modal as BModal).show();\r\n\r\n\t\t\tconst v = this;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tv.shown = true;\r\n\t\t\t}, 350);\r\n\t\t},\r\n\r\n\t\tbyteValue: function (wordIndex: number, byteIndex: number): number {\r\n\t\t\tconst index = (wordIndex * 4) + this.endianify(byteIndex);\r\n\t\t\treturn this.byteView[index];\r\n\t\t},\r\n\r\n\t\twordValue: function (wordIndex: number): number {\r\n\t\t\treturn this.wordView[wordIndex];\r\n\t\t},\r\n\r\n\t\tendianify(byteIndex: number): number {\r\n\t\t\tif (this.endianness === 'big') return [3, 2, 1, 0][byteIndex];\r\n\t\t\treturn byteIndex;\r\n\t\t},\r\n\r\n\t\tprintByte: function (value: number): string {\r\n\t\t\tif (this.datatype === 'dec') return value.toString(10);\r\n\t\t\tif (this.datatype === 'bin') return this.binstr(value);\r\n\t\t\tif (this.datatype === 'ascii') return this.ascii[value][3];\r\n\t\t\telse return this.hexstr(value);\r\n\t\t},\r\n\r\n\t\tprintWord: function (value: number): string {\r\n\t\t\tif (this.datatype === 'dec') return value.toString(10);\r\n\t\t\tif (this.datatype === 'bin') return this.binstr(value, 32);\r\n\t\t\telse return this.hexstr(value, 8);\r\n\t\t},\r\n\r\n\t\thexstr: function (value: number, pad: number = 2): string {\r\n\t\t\treturn `${value?.toString(16).padStart(pad, '0')}`\r\n\t\t},\r\n\r\n\t\tbinstr: function (value: number, pad: number = 8): string {\r\n\t\t\treturn `${value?.toString(2).padStart(pad, '0')}`\r\n\t\t},\r\n\r\n\t\tdataHover(wordIndex: number, byteIndex: number) {\r\n\t\t\tconst offset = (wordIndex * 4) + byteIndex;\r\n\t\t\tconst declaration = this.dataDeclarations.find(e => e.offset <= offset && offset <= e.offset + e.size);\r\n\r\n\t\t\tif (declaration) {\r\n\t\t\t\tthis.highlitData = Array.from(Array(declaration.offset + declaration.size).keys()).slice(declaration.offset);\r\n\t\t\t\tthis.hoveredDeclaration = declaration;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thighlight: function (instruction: TInstructionNode): string {\r\n\t\t\treturn highlight(instruction.text, languages.armv7, 'ARMv7');\r\n\t\t},\r\n\r\n\t\ttip: function (name: string) {\r\n\t\t\tthis.tooltip = this.tips[name];\r\n\t\t},\r\n\r\n\t\tuntip: function () {\r\n\t\t\tthis.tooltip = this.tips['default'];\r\n\t\t}\r\n\t},\r\n\r\n\tcreated: function () {\r\n\t\tthis.untip();\r\n\t},\r\n\r\n\twatch: {\r\n\t\tsize: {\r\n\t\t\thandler: function (value) {\r\n\t\t\t\tif (value === 'word') {\r\n\t\t\t\t\tif (this.datatype === 'ascii') this.datatype = 'hex';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./explorer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./explorer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./explorer.vue?vue&type=template&id=1535a00a&scoped=true&\"\nimport script from \"./explorer.vue?vue&type=script&lang=ts&\"\nexport * from \"./explorer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./explorer.vue?vue&type=style&index=0&id=1535a00a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1535a00a\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { TDictionary } from \"@/assets\";\r\nimport { Register, StackTransfer } from '@/constants';\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { default as explorer } from \"./explorer.vue\";\r\nimport { BModal } from \"bootstrap-vue\";\r\nimport Vue from 'vue';\r\n\r\ntype TTip = {\r\n  name: string;\r\n  tip: string;\r\n  color: string;\r\n}\r\n\r\nexport default Vue.extend({\r\n  name: 'memory',\r\n  components: {\r\n    explorer\r\n  },\r\n  data() {\r\n    return {\r\n      tooltip: undefined as TTip | undefined,\r\n\r\n      tips: {\r\n        text: {\r\n          name: \"text\",\r\n          tip: \"The text section contains the instructions defined in the .text section of the program.\",\r\n          color: \"#0077aa\"\r\n        },\r\n        data: {\r\n          name: \"data\",\r\n          tip: \"The data section contains all the static data defined in the .data section of the program.\",\r\n          color: \"#ff5555\"\r\n        },\r\n        uninitialised: {\r\n          name: \"uninitialised memory\",\r\n          tip: \"This section contains uninitialised memory waiting to be used by your program.\",\r\n          color: \"#dcdcdc\"\r\n        },\r\n        stack: {\r\n          name: \"stack\",\r\n          tip: \"The stack contains data temporarily saved from CPU registers to prevent overwriting.\",\r\n          color: \"#5d9455\"\r\n        },\r\n        stackPointer: {\r\n          name: \"stack pointer\",\r\n          tip: \"The stack pointer is a reference to the memory location which represents the current top of the stack.\",\r\n          color: \"white\"\r\n        } \r\n      } as TDictionary<TTip>\r\n    }\r\n  },\r\n  computed: {\r\n    memory: SimulatorState.memory,\r\n    registers: SimulatorState.registers,\r\n\r\n    textWidth: function (): number {\r\n      return this.memory.textHeight / this.memory.size * 100;\r\n    },\r\n\r\n    dataWidth: function (): number {\r\n      return this.memory.dataHeight / this.memory.size * 100;\r\n    },\r\n\r\n    heapWidth: function (): number {\r\n      return this.memory.heapHeight / this.memory.size * 100;\r\n    },\r\n\r\n    uninitWidth: function (): number {\r\n      return Math.max(100 - this.textWidth - this.dataWidth - this.heapWidth - this.stackWidth, 0);\r\n    },\r\n\r\n    stackWidth: function (): number {\r\n      return this.memory.stackHeight / this.memory.size * 100;\r\n    },\r\n\r\n    hoveredSection: function (): string | undefined {\r\n      return this.tooltip?.name;\r\n    },\r\n\r\n    stackPointer: function (): number {\r\n      const reversePtr = this.memory.size - this.registers[Register.SP];\r\n      return (reversePtr / this.memory.size) * 100;\r\n    },\r\n\r\n    used: function (): number {\r\n      return this.memory.textHeight + this.memory.dataHeight + this.memory.heapHeight + this.memory.stackHeight;\r\n    }\r\n  },\r\n  methods: {\r\n    tip: function (section: string) : void {\r\n      this.tooltip = this.tips[section];\r\n    },\r\n\r\n    untip: function () : void {\r\n      this.tooltip = undefined;\r\n    },\r\n\r\n    explore: function (section: string) {\r\n      (this.$refs.explorer as any).show(section);\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memory.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memory.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./memory.vue?vue&type=template&id=03ad7fec&scoped=true&\"\nimport script from \"./memory.vue?vue&type=script&lang=ts&\"\nexport * from \"./memory.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./memory.vue?vue&type=style&index=0&id=03ad7fec&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"03ad7fec\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex flex-column container text-left py-3\"},[_vm._l((_vm.registers),function(value,index){return _c('div',{key:index,staticClass:\"register text-truncate\",attrs:{\"tour-item\":_vm.regName[index]},on:{\"mouseover\":function($event){return _vm.registerTip(index)},\"mouseleave\":_vm.untip}},[_c('span',{staticClass:\"register-name\"},[_vm._v(_vm._s(_vm.regName[index]))]),_c('span',{staticClass:\"ml-1 px-1\",class:{ 'changed': _vm.changeSet.has(index) }},[_vm._v(_vm._s(_vm.regstr(value)))])])}),_c('div',{staticClass:\"d-flex my-3 pr-0\"},[_c('div',{staticClass:\"flex-grow-1 cpsr\",on:{\"mouseover\":function($event){return _vm.tip(_vm.cpsrTitle, _vm.cpsrExplain)},\"mouseleave\":_vm.untip}},[_vm._v(\" cpsr \")]),_vm._l((_vm.cpsr),function(_,index){return _c('div',{key:index,staticClass:\"flag\",on:{\"mouseover\":function($event){return _vm.tip(_vm.flagTitle[index], _vm.flagExplain[index])},\"mouseleave\":_vm.untip}},[_c('span',{staticClass:\"flag-name\"},[_vm._v(_vm._s(_vm.flagName[index]))]),_c('span',{class:{ 'changed': _vm.flagChangeSet.has(index) }},[_vm._v(_vm._s(_vm.flagstr(_vm.cpsr[index])))])])})],2),_c('div',{staticClass:\"dashed flex-grow-1\"},[_c('div',[_vm._v(\" \"+_vm._s(_vm.computedTitle)+\" \")]),_c('div',{staticClass:\"description\"},[_vm._v(\" \"+_vm._s(_vm.computedDescription)+\" \")])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { zip } from '@/assets/functions';\r\nimport { flagExplain, flagName, flagTitle, regExplain, Register, regName, regTitle } from \"@/constants\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport Vue from 'vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'registers',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data() {\r\n    return {\r\n      regName,\r\n      regTitle,\r\n      regExplain,\r\n\r\n      flagName, \r\n      flagTitle,\r\n      flagExplain,\r\n\r\n      cpsrTitle: \"CPSR Flags\", \r\n      cpsrExplain: \"Four bits in the Current Program Status Register which are used to decide whether a conditional instruction should execute.\",\r\n\r\n      title: null as string | null,\r\n      description: null as string | null,\r\n\r\n      changeSet: new Set<Register>(),\r\n      flagChangeSet: new Set<number>()\r\n    };\r\n  },\r\n  computed: {\r\n    registers: SimulatorState.registers,\r\n    cpsr: SimulatorState.cpsr,\r\n\r\n    computedTitle() : string {\r\n      return this.title ?? \"Registers\";\r\n    },\r\n\r\n    computedDescription() : string {\r\n      return this.description ?? \"A simplified view of the data currently stored in the CPU. Hover over the different sections to learn more.\";\r\n    }\r\n  },\r\n  methods: {\r\n    regstr(value: number) : string {\r\n      return `0x${value.toString(16).padStart(8, '0')} (${value})`;\r\n    },\r\n\r\n    hexstr(value: number) : string {\r\n      return `0x${value.toString(16)}`\r\n    },\r\n\r\n    /**\r\n     * Returns a string representing the signed representation of a 32 bit number.\r\n     * Checks the top bit is set, if it is then returns the two's complement of the unsigned\r\n     * value with a preceding negative '-' sign. Otherwise the value is returned as-is, because\r\n     * the signed and unsigned representations are equal.\r\n     */\r\n    signedstr(value: number) : string {\r\n      if (value >>> 31 === 1) return `-${~value + 1}`\r\n      return `${value}`;\r\n    },\r\n\r\n    flagstr(value: boolean) : string {\r\n      return value ? '1' : '0';\r\n    },\r\n\r\n    registerTip(reg: Register) {\r\n      let value = this.registers[reg];\r\n      let hexValue = this.hexstr(value);\r\n      let signedValue = this.signedstr(value);\r\n\r\n      this.tip(\r\n        this.regTitle[reg],\r\n        `\\\r\n          ${this.regExplain[reg]}\r\n          \r\n          Hex: ${hexValue}\r\n          Dec:\r\n          - Unsigned: ${value}\r\n          - Signed:   ${signedValue}\\\r\n        `\r\n      )\r\n    },\r\n\r\n    tip(title: string, description: string) {\r\n      this.title = title;\r\n      this.description = description\r\n    },\r\n\r\n    untip() {\r\n      this.title = null;\r\n      this.description = null;\r\n    }\r\n  },\r\n  watch: {\r\n    registers: function (newVal, oldVal) {\r\n      let changeSet = new Set<Register>();\r\n      zip(newVal, oldVal).forEach(([newReg, oldReg], index) => {\r\n        if (newReg !== oldReg) changeSet.add(index);\r\n      });\r\n\r\n      this.changeSet = changeSet;\r\n    },\r\n\r\n    cpsr: function (newVal, oldVal) {\r\n      let changeSet = new Set<number>();\r\n      zip(newVal, oldVal).forEach(([newFlag, oldFlag], index) => {\r\n        if (newFlag !== oldFlag) changeSet.add(index);\r\n      });\r\n\r\n      this.$set(this, 'flagChangeSet', changeSet);\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./registers.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./registers.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./registers.vue?vue&type=template&id=6b0493ca&scoped=true&\"\nimport script from \"./registers.vue?vue&type=script&lang=ts&\"\nexport * from \"./registers.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./registers.vue?vue&type=style&index=0&id=6b0493ca&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b0493ca\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"terminal-container pl-1 py-1\",class:{ crt: _vm.settings.crtEffect }},[_c('div',{ref:\"container\",staticClass:\"prism-container px-2\",attrs:{\"tour-item\":\"terminal\"},on:{\"!keydown\":function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==67){ return null; }if(!$event.ctrlKey){ return null; }_vm.running && _vm.stop()},\"click\":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.focus($event)}}},[_c('pre',{staticClass:\"repl output\",domProps:{\"innerHTML\":_vm._s(_vm.output)}}),_c('pre',{ref:\"input\",staticClass:\"repl input\",attrs:{\"contenteditable\":!_vm.running || _vm.interrupted},on:{\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.stopPropagation();return _vm.enter($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.upHistory($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.downHistory($event)}],\"input\":_vm.onInput}}),_c('pre',{staticClass:\"repl input-highlight\",domProps:{\"innerHTML\":_vm._s(_vm.highlitInput)},on:{\"click\":_vm.focus}})]),_c('div',{staticClass:\"controls\"},[_c('div',{staticClass:\"clickable\",attrs:{\"tour-item\":\"editor-switch\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.$emit('switch')},\"mouseenter\":function($event){_vm.controlTooltip = 'editor'},\"mouseleave\":function($event){_vm.controlTooltip = undefined}}},[_c('i',{staticClass:\"button code fas fa-code\"})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.controlTooltip),expression:\"controlTooltip\"}],staticClass:\"control-tooltip\"},[_vm._v(_vm._s(_vm.controlTooltip))])]),_c('div',{staticClass:\"popup-output\"},[_c('div',{staticClass:\"p-1\",staticStyle:{\"border-radius\":\"0.3rem\",\"background-color\":\"#191d21\"}},[(_vm.computedTooltip.title !== '')?_c('div',[_c('div',{style:((\"color: \" + (_vm.computedTooltip.color)))},[_vm._v(_vm._s(_vm.computedTooltip.title))]),_c('div',[_vm._v(_vm._s(_vm.computedTooltip.message))])]):_vm._e(),(_vm.errors.length > 0)?_c('div',{staticClass:\"clickable hoverable rounded px-1\",on:{\"click\":_vm.run}},[_vm._v(\" \"+_vm._s(_vm.errors.length)+\" errors \")]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { replWelcome, terminalHelpString } from \"@/constants\";\r\nimport { Assembler, InteractiveError, Interpreter, IriscError, RuntimeError } from '@/interpreter';\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { InstructionNode } from '@/syntax';\r\nimport { BranchNode } from '@/syntax/flow/BranchNode';\r\nimport { BIconTelephoneMinus } from \"bootstrap-vue\";\r\nimport { highlight, languages } from 'prismjs';\r\nimport { SettingsState, TTooltip, getCaretPosition, setCaretPosition } from '@/utilities';\r\nimport Shepherd from \"shepherd.js\";\r\nimport Vue from 'vue';\r\nimport { FileSystemState } from \"@/files\";\r\n\r\nconst prompt = \"irisc:~$ \";\r\n\r\nexport default Vue.extend({\r\n  name: 'terminal',\r\n  data() {\r\n    return {\r\n      leadingLine: prompt,\r\n      input: \"\" as string,\r\n      output: replWelcome,\r\n      history: [] as string[],\r\n      historyIndex: -1 as number,\r\n\r\n      tooltip: {\r\n        // index: null as number | null,\r\n        title: '' as string,\r\n        message: '' as string\r\n      },\r\n\r\n      restoreDelay: false,\r\n      savedDelay: 0,\r\n      outputLength: 0,\r\n\r\n      controlTooltip: undefined as string | undefined,\r\n\r\n      isActive: false\r\n    }\r\n  },\r\n  computed: {\r\n    settings: SettingsState.settings,\r\n    errors: SimulatorState.errors,\r\n    currentInstruction: SimulatorState.currentInstruction,\r\n    running: SimulatorState.running,\r\n    simulatorOutput: SimulatorState.output,\r\n    interrupted: SimulatorState.interrupted,\r\n    exitStatus: SimulatorState.exitStatus,\r\n\r\n    breakpoints: SimulatorState.breakpoints,\r\n    paused: SimulatorState.paused,\r\n\r\n    highlitInput: function (): string {\r\n      const line = this.input.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n      if (this.interrupted || this.running) return line;\r\n\r\n      return highlight(line, languages.armv7, 'ARMv7');\r\n    },\r\n\r\n    computedTooltip: function (): TTooltip {\r\n      if (this.interrupted) {\r\n        return {\r\n          title: 'Interrupted',\r\n          color: '#7dad7d',\r\n          message: 'Input required.'\r\n        };\r\n      }\r\n\r\n      if (this.paused && this.breakpoints.includes(this.currentInstruction!)) {\r\n        return {\r\n          title: 'Breakpoint hit',\r\n          color: '#bf5c5f',\r\n          message: 'Switch to editor to continue.'\r\n        }\r\n      }\r\n\r\n      return {} as TTooltip;\r\n    },\r\n\r\n    currentFile: FileSystemState.currentFile,\r\n    currentDirectory: FileSystemState.currentDirectory\r\n  },\r\n  methods: {\r\n    stop: SimulatorState.stop,\r\n    run: SimulatorState.start,\r\n\r\n    focus: function () {\r\n      (this.$refs.input as HTMLElement).focus();\r\n      \r\n      if (this.isActive) {\r\n        // move cursor to the end\r\n        let sel = window.getSelection();\r\n        sel?.selectAllChildren((this.$refs.input as HTMLElement));\r\n        sel?.collapseToEnd();\r\n      }\r\n    },\r\n\r\n    onInput: function (e: InputEvent) {\r\n      const el = e.target as HTMLInputElement;\r\n\r\n      let actualInput = el.innerText.substring(this.leadingLine.length);\r\n      let caretOffset = getCaretPosition(el) - this.leadingLine.length;\r\n      if (caretOffset < 0) {\r\n        caretOffset = 0;\r\n        if (e.data) {\r\n          actualInput = e.data + actualInput.substring(1);\r\n          caretOffset = 1;\r\n        }\r\n      }\r\n\r\n      this.input = `${this.leadingLine}${actualInput}`;\r\n      el.innerText = `${\" \".repeat(this.leadingLine.length)}${actualInput}`;\r\n      \r\n      setCaretPosition(el, this.leadingLine.length + caretOffset);\r\n    },\r\n    \r\n    enter: function (e: any) {\r\n      e.preventDefault();\r\n\r\n      let input = this.input\r\n        .substring(this.leadingLine.length)\r\n        .trim()\r\n        .replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n      if (this.interrupted) {\r\n        this.stdin(input);\r\n        return;\r\n      }\r\n\r\n      this.addHistory(input)\r\n      this.historyIndex = -1;\r\n\r\n      this.$nextTick(() => {\r\n        this.output += `\\n${this.highlitInput}`;\r\n\r\n        // only bother executing if there is any text\r\n        if (input.length > 0) this.execute(input);\r\n        \r\n        this.setLeadingLine(prompt);\r\n        // // if (!this.running) \r\n        // this.input = this.leadingLine;\r\n        // // else this.input = \"\";\r\n\r\n        e.target.innerText = \" \".repeat(this.leadingLine.length);\r\n        this.focus();\r\n\r\n        this.$nextTick(() => {\r\n          let element = this.$refs.container as HTMLElement;\r\n          element.scrollTop = element.scrollHeight;\r\n        });\r\n      });\r\n    },\r\n\r\n    stdin: function (stdin: string) {\r\n      this.$nextTick(() => {\r\n        this.setLeadingLine(\"\");\r\n\r\n        this.$nextTick(() => {\r\n          let element = this.$refs.container as HTMLElement;\r\n          element.scrollTop = element.scrollHeight;\r\n        });\r\n\r\n        SimulatorState.setStdin(stdin + \"\\n\");\r\n      });\r\n    },\r\n\r\n    addHistory: function (input: string) {\r\n      if (this.history[0] === input) return;\r\n      if (input === \"\") return;\r\n      \r\n      this.history.unshift(input);\r\n    },\r\n\r\n    upHistory: function (e: any) {\r\n      this.historyIndex = Math.min(this.historyIndex + 1, this.history.length - 1);\r\n      if (this.historyIndex < 0) return;\r\n\r\n      let input = this.history[this.historyIndex];\r\n      this.insertInput(e.target, input);\r\n    },\r\n\r\n    downHistory: function (e: any) {\r\n      this.historyIndex = Math.max(this.historyIndex - 1, -1);\r\n      let input = \"\";\r\n      if (this.historyIndex > -1) {\r\n        input = this.history[this.historyIndex];\r\n      } \r\n\r\n      this.insertInput(e.target, input);\r\n    },\r\n\r\n    insertInput: function (target: any, input: string) {\r\n      target.innerText = `${\" \".repeat(this.leadingLine.length)}${input}`;\r\n      this.input = `${this.leadingLine}${input}`;\r\n      \r\n      this.$nextTick(() => {\r\n        this.focus();\r\n      });\r\n    },\r\n\r\n    setLeadingLine: function (leadingLine: string) {\r\n      this.input = leadingLine;\r\n      this.leadingLine = leadingLine;\r\n      (this.$refs.input as HTMLElement).innerText = \" \".repeat(this.leadingLine.length);\r\n    },\r\n\r\n    execute: function (input: string) {\r\n      try {\r\n        if (this.specialInput(input)) return;\r\n\r\n        let line = Assembler.parse(input)[0];\r\n        let node = Assembler.compileOne(line, 0);\r\n\r\n        if (node instanceof InstructionNode) {\r\n          if (node instanceof BranchNode) {\r\n            throw new InteractiveError(\"Branch instructions cannot be executed on the command-line.\", [], -1, -1);\r\n          }\r\n\r\n          Interpreter.execute(node, false);\r\n        }\r\n        else throw new InteractiveError(\"This operation is not supported on the command-line.\", [], -1, -1);\r\n      }\r\n      catch (e){\r\n        if (e instanceof IriscError) {\r\n          this.printError(e);\r\n        }\r\n        else throw e;\r\n      }\r\n    },\r\n\r\n    specialInput(input: string) {\r\n      if ([':reset', ':r'].includes(input)) {\r\n        SimulatorState.reset();\r\n        return true;\r\n      }\r\n\r\n      if ([':clear', ':c'].includes(input)) {\r\n        this.output = replWelcome;\r\n        return true;\r\n      }\r\n\r\n      if ([':help', ':h'].includes(input)) {\r\n        this.output += terminalHelpString;\r\n        return true;\r\n      }\r\n\r\n      const textEditRegex = /^(vi|vim|nvim|nano|ne|emacs -nw|micro|tilde)($|\\s)/g;\r\n      const textEditParam = input.replace(textEditRegex, \"\");\r\n      if (textEditParam !== input) {\r\n        if (Shepherd.activeTour) {\r\n          throw new InteractiveError(\"Can't switch to the editor yet. Do the tour! You'll get there.\", [], -1, -1);\r\n        }\r\n\r\n        if (textEditParam !== '') FileSystemState.textEdit(textEditParam);\r\n        this.$emit('switch');\r\n\r\n        return true;\r\n      }\r\n\r\n      if (input.startsWith(\"echo \")) {\r\n        this.output += `\\n<span style=\"white-space: normal\">${input.slice(5)}</span>`\r\n        return true;\r\n      }\r\n\r\n      if (input === 'pwd') {\r\n        this.output += `\\n${FileSystemState.pwd()}`;\r\n        return true;\r\n      }\r\n\r\n      if (input === 'ls') {\r\n        const directories = this.currentDirectory.directories.map(e => `<span class=\"col-3 directory\">${e.name}</span>`);\r\n        const files = this.currentDirectory.files.map(e => `<span class=\"col-3 file\">${e.name}</span>`);\r\n        const ls = [\r\n          '<span class=\"col-3 directory\">.</span>', \r\n          ...[this.currentDirectory.parent && '<span class=\"col-3 directory\">..</span>'],\r\n          ...directories.sort(), \r\n          ...files.sort()\r\n        ]\r\n\r\n        this.output += `\\n<div class=\"row\">${ls.join(\"\\t\")}</div>`;\r\n        return true;\r\n      }\r\n\r\n      if (input.startsWith('cd')) {\r\n        const param = input.substring(3).trim();\r\n        FileSystemState.cd(param);\r\n\r\n        return true;\r\n      }\r\n\r\n      // TODO: secret crash easter egg\r\n      // if (input === 'sudo rm -rf /*') {\r\n      //   SimulatorState.interrupt();\r\n\r\n      //   // remove prompt\r\n      //   this.setLeadingLine(\"\");\r\n      //   this.$emit('crash');\r\n\r\n      //   return true;\r\n      // }\r\n\r\n      if (input === './src') {\r\n        if (Shepherd.activeTour) {\r\n          throw new InteractiveError(\"Not allowed right now. Continue with the tour!\", [], -1, -1);\r\n        }\r\n\r\n        if (SimulatorState.memory().text.length < 1) {\r\n          throw new InteractiveError(\"Editor contains no runnable code.\", [], -1, -1);\r\n        }\r\n\r\n        // this.executing = true;\r\n        this.restoreDelay = true;\r\n        this.savedDelay = SimulatorState.delay();\r\n\r\n        SimulatorState.setDelay(2);\r\n        SimulatorState.start();\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    printError: function (e: IriscError) {\r\n      this.output += // html\r\n      `\r\n        <span class=\"error-type\">${e.type}</span>: ${e.message}\\\r\n      `\r\n      //<span class=\"ml-5\">${e.statement}</span>\\\r\n    },\r\n\r\n    loadHistory: function () {\r\n      this.history = JSON.parse(localStorage.getItem(\"history\") ?? \"[]\");\r\n    }\r\n  },\r\n\r\n  created: function () {\r\n    this.loadHistory();\r\n  },\r\n\r\n  mounted: function () {\r\n    this.setLeadingLine(prompt);\r\n  },\r\n\r\n  activated: function () {\r\n    this.isActive = true;\r\n    this.focus();\r\n  },\r\n\r\n  deactivated: function () {\r\n    this.isActive = false;\r\n  },\r\n\r\n  watch: {\r\n    history: function (value) {\r\n      localStorage.setItem(\"history\", JSON.stringify(value));\r\n    },\r\n\r\n    running: function (started: boolean) {\r\n      // when code is run: running changed false -> true\r\n      if (started) {\r\n        if (!this.output.endsWith('<span class=\"token op-label\">src</span>')) {\r\n          const highlitPrompt = highlight(prompt, languages.armv7, 'ARMv7');\r\n          this.output += `\\n${highlitPrompt}./<span class=\"token op-label\">src</span>`;\r\n\r\n          this.restoreDelay = false;\r\n        }\r\n\r\n        // save current output length\r\n        this.outputLength =  this.output.length;\r\n\r\n        // remove prompt\r\n        this.setLeadingLine(\"\");\r\n      }\r\n\r\n      // when code stops: running changed true -> false\r\n      else {\r\n        // restore previous delay\r\n        if (this.restoreDelay) SimulatorState.setDelay(this.savedDelay);\r\n\r\n        if (this.exitStatus instanceof RuntimeError) {\r\n          this.output += \"\\n\";\r\n          this.printError(this.exitStatus);\r\n\r\n          this.setLeadingLine(prompt);\r\n        }\r\n        else {          \r\n          // restore leading terminal prompt + existing leading\r\n          this.setLeadingLine(`${this.leadingLine}${prompt}`);\r\n        }\r\n\r\n        // focus to the end of the terminal\r\n        this.$nextTick(() => {\r\n          this.focus();\r\n        });\r\n      }\r\n    },\r\n\r\n\r\n    interrupted: function (isInterrupted: boolean) {\r\n      if (isInterrupted) {\r\n        this.$nextTick(() => {\r\n          this.focus();\r\n        });\r\n      }\r\n    },\r\n\r\n    simulatorOutput: function (value: string[]) {\r\n      if (this.running) {\r\n        const localValue = value.slice();\r\n        const lastLine = localValue.pop() ?? \"\";\r\n\r\n        // add all lines apart from the last to the output\r\n        if (localValue.length > 0) {\r\n          this.output = this.output.slice(0, this.outputLength) + '\\n' + localValue.join('\\n');\r\n        }\r\n\r\n        // set last line to leading output to respect lack of line feed\r\n        this.setLeadingLine(lastLine);\r\n\r\n        this.$nextTick(() => {\r\n          let element = this.$refs.container as HTMLElement;\r\n          element.scrollTop = element.scrollHeight;\r\n        });\r\n      }\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./terminal.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./terminal.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./terminal.vue?vue&type=template&id=6c1b718f&scoped=true&\"\nimport script from \"./terminal.vue?vue&type=script&lang=ts&\"\nexport * from \"./terminal.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./terminal.vue?vue&type=style&index=0&id=6c1b718f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c1b718f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"modal\",attrs:{\"centered\":\"\",\"hide-header\":\"\",\"hide-footer\":\"\",\"body-class\":\"irisc-modal p-1\"}},[_c('div',{staticClass:\"px-5 py-1\"},[_c('h4',[_vm._v(\"configuration\")]),_c('div',{staticClass:\"mt-3\"},[_c('div',[_vm._v(\" cpu tickrate \"),_c('span',{staticClass:\"float-right\"},[_vm._v(_vm._s((1000 / _vm.settings.delay).toFixed(2))+\" tps\")])]),_c('b-form-input',{attrs:{\"value\":1000 / _vm.settings.delay,\"type\":\"range\",\"min\":\"0.5\",\"max\":\"50\",\"step\":\"0.1\"},on:{\"change\":function($event){return _vm.simulatorState.setDelay(1000 / $event)}}}),_c('div',[_vm._v(\" ram size \"),_c('span',{staticClass:\"float-right\"},[_vm._v(_vm._s(_vm.settings.memSize)+\" bytes\")])]),_c('b-form-input',{attrs:{\"value\":_vm.memSizes.findIndex(function (e) { return e === _vm.settings.memSize; }),\"type\":\"range\",\"min\":\"0\",\"max\":_vm.memSizes.length - 1},on:{\"change\":function($event){return _vm.simulatorState.init(_vm.memSizes[+$event])}}}),_c('div',[_vm._v(\" crt effect (epilepsy warning) \")]),_c('b-form-checkbox',{attrs:{\"checked\":_vm.settings.crtEffect,\"name\":\"crt-effect\",\"switch\":\"\"},on:{\"change\":function($event){return _vm.settingsState.setCrtEffect($event)}}},[_vm._v(\" \"+_vm._s(_vm.settings.crtEffect ? 'on' : 'off')+\" \")])],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { SimulatorState } from '@/simulator';\r\nimport { SettingsState } from '@/utilities';\r\nimport { BModal } from 'bootstrap-vue';\r\nimport Vue from 'vue';\r\n\r\nexport default Vue.extend({\r\n  data() {\r\n    return {\r\n      simulatorState: SimulatorState,\r\n      settingsState: SettingsState,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    settings: SettingsState.settings,\r\n    memSizes: () => SimulatorState.memory().sizes\r\n  },\r\n\r\n  methods: {\r\n    show: function () {\r\n      (this.$refs.modal as BModal).show();\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    settings: {\r\n      handler: function () {\r\n        SettingsState.updateStorage();\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./settings.vue?vue&type=template&id=64605f75&scoped=true&\"\nimport script from \"./settings.vue?vue&type=script&lang=ts&\"\nexport * from \"./settings.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"64605f75\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"container\",staticClass:\"container p-2 text-left\",attrs:{\"tour-item\":\"tutorial\"}},[_c('div',[_c('div',{staticClass:\"title px-1\"},[_vm._v(_vm._s(_vm.pageData.title))]),_c('div',{staticClass:\"content mt-2 mb-5 p-1\",domProps:{\"innerHTML\":_vm._s(_vm.pageData.content)}})]),_c('div',{staticClass:\"controls\"},[_c('div',{staticClass:\"p-1\",staticStyle:{\"border-radius\":\"0.3rem\",\"background-color\":\"#191d21\"}},[_c('i',{staticClass:\"fas fa-chevron-left fa-sm p-1 clickable hoverable rounded-sm\",on:{\"click\":_vm.prevPage}}),_c('span',{staticClass:\"mx-1 user-select-none\"},[_vm._v(_vm._s(_vm.page)+\"/\"+_vm._s(_vm.pages.length - 1))]),_c('i',{staticClass:\"fas fa-chevron-right fa-sm p-1 clickable hoverable rounded-sm\",on:{\"click\":_vm.nextPage}})])]),_c('div',{staticClass:\"contents\"},[_c('div',{directives:[{name:\"click-outside\",rawName:\"v-click-outside\",value:(function () { return _vm.showContents = false; }),expression:\"() => showContents = false\"}],staticClass:\"p-1\",staticStyle:{\"border-radius\":\"0.3rem\",\"background-color\":\"#191d21\"}},[(!_vm.showContents)?_c('a',{staticClass:\"link clickable\",staticStyle:{\"color\":\"#f9e1b3\"},on:{\"click\":_vm.openContents}},[_vm._v(\"contents\")]):[_vm._l((_vm.contentsSlice),function(contentsLink){return _c('div',{key:contentsLink.index},[_c('a',{staticClass:\"link text-white clickable\",class:contentsLink.index === _vm.page ? 'current-page' : '',on:{\"click\":function($event){return _vm.navigateTo(contentsLink)}}},[_vm._v(\" \"+_vm._s(contentsLink.title)+\" \")])])}),_c('div',{staticClass:\"mt-1 text-right\"},[_c('span',{},[_c('i',{staticClass:\"fas fa-chevron-left fa-sm p-1 clickable hoverable rounded-sm\",on:{\"click\":function($event){_vm.contentsPage > 0 && _vm.contentsPage--}}}),_c('span',{staticClass:\"mx-1 user-select-none\"},[_vm._v(_vm._s(_vm.contentsPage)+\"/\"+_vm._s(_vm.nContentsPages - 1))]),_c('i',{staticClass:\"fas fa-chevron-right fa-sm p-1 clickable hoverable rounded-sm\",on:{\"click\":function($event){_vm.contentsPage < (_vm.nContentsPages - 1) && _vm.contentsPage++}}})])])]],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { TTutorialPage } from \"./types\"\r\n\r\nconst intro1: TTutorialPage = {\r\n  title: \"Introduction 0: Welcome\",\r\n  content: // html\r\n  `\\\r\n    Welcome to <span class=\"irisc\">iRISC</span>.\r\n\r\n    <span class=\"irisc\">iRISC</span> stands for <i>interactive reduced instruction-set computer</i>.\\\r\n    This web app is an interactive introduction to RISC computer architecture and assembly language.\\\r\n    Specifically, <span class=\"irisc\">ARMv7</span> assembly language. \r\n\r\n    I have tried to write a simple tutorial which goes through some of the basics, not only of\\\r\n    writing assembly, but also some aspects of computer architecture. I aimed to keep the required\\\r\n    knowledge to a minimum; however, I do assume some understanding of basic programming concepts: \\\r\n    number representations, signed and unsigned integers, etc.\r\n\r\n    Either way, I hope you find this to be a fun/useful tool!\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Note</div>\\\r\n      If you already know your assembly pretty well and are just here for fun, use the <u>files</u>\\\r\n      link in the bottom right of the editor screen to explore the demos.\r\n\r\n      You can switch to the editor screen using the <i class=\"fas fa-code fa-sm irisc\"></i> button.\r\n    </div>    \r\n  `\r\n  // TODO: maybe add\r\n  // Crucially, <span class=\"irisc\">iRISC</span> is <u>not</u> a perfect simulator for an ARMv7 processor.\\\r\n  // It is a specifically simplified demonstration simulator which remains faithful to the real processor\\\r\n  // in just enough ways so that it can serve as a teaching aid for architectures and programming basics.\r\n}\r\n\r\nconst intro2: TTutorialPage = {\r\n  title: \"Introduction 1: The Terminal\",\r\n  content: // html\r\n  `\\\r\n    In the center region of the page there is a simple <i>read-evaluate-print-loop</i> (REPL) terminal.\\\r\n    This terminal supports simple syntax highlighting and error checking for a subset of the\\\r\n    <span class=\"irisc\">ARMv7</span> instruction-set.\r\n\r\n    <span class=\"token operation\">Operations</span> are highlighted in red.\r\n    <span class=\"token register\">Registers</span> are highlighted in blue.\r\n    <span class=\"token immediate\">Immediates</span> are highlighted in grey.\r\n    Errors printed as command output.\r\n    \r\n    Type the string 'error' into the terminal and press enter to produce an error.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hint</div>\\\r\n      You can use ':clear' (or ':c' shorthand) to clear the terminal and ':reset' (':r') to reset\\\r\n      the simulator.\\\r\n    </div>\r\n  `\r\n}\r\n\r\nconst intro3: TTutorialPage = {\r\n  title: \"Introduction 2: The Editor\",\r\n  content: // html\r\n  `\\\r\n    Click the <i class=\"fas fa-code fa-sm irisc\"></i> button in the top right of the terminal to access the\\\r\n    code editor. \r\n    \r\n    This editor supports simple syntax highlighting and error checking for a larger subset\\\r\n    of the <span class=\"irisc\">ARMv7</span> instruction-set.\r\n\r\n    <span class=\"token operation\">Operations</span> are highlighted in red.\r\n    <span class=\"token register\">Registers</span> are highlighted in blue.\r\n    <span class=\"token immediate\">Immediates</span> are highlighted in grey.\r\n    <span class=\"token label\">Labels</span> are highlighted in yellow.\r\n    <span class=\"token error\">Errors</span> are shown with a wavy underline.\r\n    \r\n    Type the string 'error' into the text editor to produce an error. Hover over the underlined token\\\r\n    to show more detailed information about the error in the bottom left corner of the editor.\r\n\r\n    You can use the <i class=\"fas fa-terminal fa-sm irisc\"></i> button to return to the terminal at any time.\r\n  `\r\n}\r\n\r\nconst intro4: TTutorialPage = {\r\n  title: \"Introduction 3: The Registers 0\",\r\n  content: // html\r\n  `\\\r\n    The CPU registers are the most accessible form of storage in the modern computer. The trade-off is that\\\r\n    read/write speed comes at the cost of capacity. The CPU simulated here has 16 registers, each 32-bits\\\r\n    wide, totalling just 1/16 of a kB.\r\n\r\n    The first fifteen registers (<span class=\"token register\">r0</span> >> <span class=\"token register\">lr</span>)\\\r\n    are considered to be <i>general-purpose</i>, meaning that they are freely accessible to be edited by the executing program.\r\n\r\n    The final three registers \\\r\n     (<span class=\"token register\">sp</span>, \\\r\n      <span class=\"token register\">lr</span>, \\\r\n      <span class=\"token register\">pc</span>) \\\r\n    have semantic roles which, in general, a defensive programmer should aim to respect.\r\n\r\n    The registers can be found in the far left fenced section of the application. The current value is displayed as\\\r\n    an <span class=\"irisc\">unsigned integer</span> in both hexadecimal and decimal representations. \r\n    \r\n    Beneath the registers are the cpsr flags - more on these later.\r\n  `\r\n}\r\n\r\nconst intro5: TTutorialPage = {\r\n  title: \"Introduction 4: The Registers 1\",\r\n  content: // html\r\n  `\\\r\n    On the previous page, I mentioned the semantic roles of the final three registers.\r\n\r\n    The <span class=\"token register\">sp</span> is the <span class=\"token register\">stack pointer</span>. This register\\\r\n    is a memory address (or <span class=\"irisc\">pointer</span>) to the top of the stack; temporary local storage in RAM.\r\n\r\n    The <span class=\"token register\">lr</span> is the <span class=\"token register\">link register</span>. This register\\\r\n    stores a <span class=\"irisc\">pointer</span> to the next instruction following a function call so that the program\\\r\n    knows where to return to after the function completes.\r\n\r\n    The <span class=\"token register\">pc</span> is the <span class=\"token register\">program counter</span>. This register\\\r\n    is a <span class=\"irisc\">pointer</span> to the next instruction to be executed in the program; also stored in RAM.\r\n    \r\n    The <span class=\"token register\">program counter</span> is not considered <i>general-purpose</i> because editing the\\\r\n    contents of the <span class=\"token register\">pc</span> during execution has side-effects. Actually, just one very\\\r\n    important side-effect in that it alters which instruction is executed next. You may edit the\\\r\n    <span class=\"token register\">pc</span> during execution, but only with the express intent of controlling the flow\\\r\n    of the program.\r\n  `\r\n}\r\n\r\nconst intro6: TTutorialPage = {\r\n  title: \"Introduction 5: The Memory\",\r\n  content: // html\r\n  `\\\r\n    The simulation RAM is displayed in the lower right fenced section of the application window.\\\r\n    The <span class=\"token register\">text</span> (instructions) and <span class=\"token operation\">data</span>\\\r\n    sections grow from the left, and the <span class=\"token line-comment\">stack</span> grows from the right - mirroring\\\r\n    how memory is structured in a typical computer.\r\n\r\n    By default, <span class=\"irisc\">iRISC</span> simulates a system with an unrealisticaly limited amount of RAM.\\\r\n    This is by design. Principally, <span class=\"irisc\">iRISC</span> is a teaching aid - not a web-based ARM emulator.\\\r\n    Limiting the memory in this way enables it to demonstrate some slightly unclear aspects of how the software and\\\r\n    hardware interact under the hood. \r\n    \r\n    If you wish to increase the amount of RAM available, you can do so using the\\\r\n    <i class=\"fas fa-sliders-h fa-sm\"></i> button in the bottom right corner.\r\n  `\r\n}\r\n\r\nconst intro7: TTutorialPage = {\r\n  title: \"Introduction 6: The Assembler 0\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"irisc\">assembler</span> is located in the lower central fenced section of the application window.\\\r\n    The most recently interpreted instruction is assembled into machine code and displayed in the upper fenced section\\\r\n    of the assembler component. Extra information about the instruction is displayed in the fenced section below it.\r\n\r\n    In modern programming, code that you write is compiled into assembly language and then further assembled into machine\\\r\n    code. This machine code is then decoded and processed by the CPU where it is used to decide which action needs to be\\\r\n    taken. In the case of the ARMv7 family of processors, all assembled instructions fit into 32 bits of space.\r\n    \r\n    Machine code is the lowest level programming language. The language spoken by actual hardware. You will most certainly\\\r\n    never have to write it, but it can be beneficial (and interesting!) to understand how it works.\r\n  `\r\n}\r\n\r\nconst intro8: TTutorialPage = {\r\n  title: \"Introduction 7: The Assembler 1\",\r\n  content: // html\r\n  `\\\r\n    Switch back to the terminal view using the <i class=\"fas fa-terminal fa-sm irisc\"></i> button and enter the following\\\r\n    command.\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token operation\">mov</span>\\\r\n      <span class=\"token register\">r0</span>, \\\r\n      <span class=\"token immediate\">#1</span>\r\n    </div>\\\r\n\r\n    Press enter and you should see that the <span class=\"irisc\">assembler</span> section has been populated! Both the bitcode\\\r\n    and text versions of the instruction are displayed, along with the execution status. \r\n    \r\n    You will notice that the machine code for the instruction has been divided into many different sections. Each of these\\\r\n    sections has a particular meaning which the the CPU uses to understand which action it needs to take. \r\n    \r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hint</div>\\\r\n      You can hover over any one of these areas to learn more about how the computer is able to decode your instruction.\r\n    </div>\\\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">New!</div>\\\r\n      You can use the <i class=\"fas fa-history fa-sm text-white\"></i> button to view the history of executed instructions\\\r\n      and summaries of how they affected the state of the simulated CPU and memory.\r\n    </div>\r\n  `\r\n}\r\n\r\nconst intro99: TTutorialPage = {\r\n  title: \"Introduction 8: Outro\",\r\n  content: // html\r\n  `\\\r\n    Now that we've gone through the app interface and some computer architecture basics, it's time to get into writing\\\r\n    some actual assembly language and seeing what affect it has on the simulator.\r\n\r\n    Continue to the next page to start learning some <span class=\"irisc\">ASM</span> basics!\r\n  `\r\n}\r\n\r\nexport default [\r\n  intro1, intro2, intro3, intro4, intro5, intro6, intro7, intro8, intro99\r\n]\r\n","import { TTutorialPage } from \"./types\"\r\n\r\nconst basics1: TTutorialPage = {\r\n  title: \"Basics 0: mov\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"token operation\">mov</span> instruction is the most basic instruction in the ARM instruction-set.\\\r\n    It simply inserts a single, source value into a destination register. The source value is what is known as a\\\r\n    <span class=\"irisc\">flexible operand</span> which means it can either be an <span class=\"token immediate\">immediate</span>\\\r\n    (a numeric literal), or the contents of a <span class=\"token register\">register</span>.\r\n\r\n    For most instructions in ARM assembly, source values move from right to left into the destination register. For example:\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token operation\">mov</span>\\\r\n      <span class=\"token register\">r0</span>, \\\r\n      <span class=\"token immediate\">#1</span>\r\n    </div>\\\r\n\r\n    Takes the source value <span class=\"token immediate\">#1</span> (the number 1) and <span class=\"token operation\">mov</span>-es\\\r\n    it into the destination register <span class=\"token register\">r0</span>.\r\n\r\n    Click the <i class=\"fas fa-terminal fa-sm irisc\"></i> button to switch back to the terminal environment and experiment with the\\\r\n    <span class=\"token operation\">mov</span> instruction!\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      Try using a <span class=\"token register\">register</span> as a source value. How does this change the assembled machine code?\\\r\n    </div>\r\n  `\r\n}\r\n\r\nconst subroutine1: TTutorialPage = {\r\n  title: \"Subroutine 0-0: The Flex Operand\",\r\n  content: // html\r\n  `\\\r\n    On the previous page, I mentioned a concept called the <span class=\"irisc\">flexible operand</span>. The flexible operand is just\\\r\n    that, <span class=\"irisc\">flexible</span>. It can be a <span class=\"token register\">register</span>; a\\\r\n    <span class=\"token register\">register</span> with an additional, optional shift; or an <span class=\"token immediate\">immediate</span>\\\r\n    value. \r\n    \r\n    After assembling the rest of the required information for the <span class=\"token operation\">mov</span> instruction into machine code,\\\r\n    we have just 12 bits left over.\r\n\r\n    In the case of a <span class=\"token register\">register</span>, the final 12 bits of the instruction are arranged [8, 4]. The first eight\\\r\n    are used to describe the shift and the final four identify the <span class=\"token register\">register</span>.\r\n\r\n    In the case of an <span class=\"token immediate\">immediate</span> value, the 12 bits are arranged [4, 8]. The last eight bits describe\\\r\n    an 8-bit number (0 - 255). The first four are where things get clever. These four bits are the <span class=\"irisc\">barrel shifter</span>.\r\n  `\r\n}\r\n\r\nconst subroutine2: TTutorialPage = {\r\n  title: \"Subroutine 0-1: The Barrel Shifter\",\r\n  content: // html\r\n  `\\\r\n    In computer hardware, a <span class=\"irisc\">barrel shifter</span> is a circuit which can shift data by a specified number of bits.\\\r\n    In an ARMv7 processor the barrel shift is employed in a clever way to maximise the number of useful immediates that can be represented\\\r\n    in 12 bits without the need for extra instructions.\r\n\r\n    The first four bits of the 12 bits of space specify the number of bits by which the remaining 8-bit number should be rotated right.\\\r\n    Because the maximum number that can be represented in 4 bits is 15, this value is first multiplied by two before applying the rotation,\\\r\n    allowing for a full range of even rotations [0, 2, ..., 28, 30].\r\n\r\n    In this way, ARM enables many of the more useful constants to be represented rather than just any number with a maximum bit-width of 12\\\r\n    (up to 4095). For instance, all powers of 2 up to a full word width (32 bits). \r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hint</div>\\\r\n      You can experiment with this concept by using the binary (<span class=\"token immediate\">#0b...</span>), octal\\\r\n      (<span class=\"token immediate\">#0...</span>), and hexadecimal (<span class=\"token immediate\">#0x...</span>) immediate representations\\\r\n      in your instructions.\\\r\n\r\n      <div class=\"ml-5\">\r\n        <span class=\"token operation\">mov</span>\\\r\n        <span class=\"token register\">r0</span>, \\\r\n        <span class=\"token immediate\">#0xff00</span>\r\n      </div>\\\r\n    </div>    \r\n  `\r\n}\r\n\r\nconst basics2: TTutorialPage = {\r\n  title: \"Basics 1: mvn\",\r\n  content: // html\r\n  `\\\r\n    <span class=\"token operation\">mvn</span> is the negative counterpart of the <span class=\"token operation\">mov</span>\\\r\n    instruction. It has the same syntax and effect, except that the negated value of the source register is places into\\\r\n    the destination register.\r\n\r\n    Try an <span class=\"token operation\">mvn</span> instruction now!\r\n\r\n    \r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      You may notice that the result is a very large, positive number. This isn't a mistake... But why?\\\r\n    </div>\r\n  `\r\n}\r\n\r\nconst basics3: TTutorialPage = {\r\n  title: \"Basics 2: add\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"token operation\">add</span> instruction performs integer addition.\\\r\n    Like the <span class=\"token operation\">mov</span> instruction, the operation is evaluated from right to left.\\\r\n    For example:\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token operation\">add</span>\\\r\n      <span class=\"token register\">r0</span>, \\\r\n      <span class=\"token register\">r1</span>, \\\r\n      <span class=\"token immediate\">#1</span>\r\n    </div>\\\r\n\r\n    Takes the second source value <span class=\"token immediate\">#1</span> (the number 1), adds it to the first source value\\\r\n    <span class=\"token register\">r1</span>, and places the result into the destination register <span class=\"token register\">r0</span>.\r\n\r\n    Try out some <span class=\"token operation\">add</span> operations now!\r\n\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      What happens when the result of an addition is too large to store in a single register?\\\r\n    </div>\r\n  `\r\n}\r\n\r\nconst basics4: TTutorialPage = {\r\n  title: \"Basics 3: sub\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"token operation\">sub</span> instruction performs integer subtraction.\\\r\n    Like the <span class=\"token operation\">mov</span> and <span class=\"token operation\">add</span> instructions, the\\\r\n    operation is evaluated from right to left. For example:\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token operation\">sub</span>\\\r\n      <span class=\"token register\">r0</span>, \\\r\n      <span class=\"token register\">r1</span>, \\\r\n      <span class=\"token immediate\">#1</span>\r\n    </div>\\\r\n\r\n    Takes the second source value <span class=\"token immediate\">#1</span> (the number 1), subtracts it from the first source value\\\r\n    <span class=\"token register\">r1</span>, and places the result into the destination register <span class=\"token register\">r0</span>.\r\n\r\n    Experiment with <span class=\"token operation\">sub</span>tracting now.\r\n\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      What happens if you subtract a larger number from a smaller number?\r\n    </div>\r\n  `\r\n}\r\n\r\nconst basics5: TTutorialPage = {\r\n  title: \"Basics 4: rsb\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"token operation\">rsb</span> instruction works similarly to the regular <span class=\"token operation\">sub</span>\\\r\n    instruction, except the first source register is subtracted from the second source register and then the result is placed in the\\\r\n    destination register. For example:\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token operation\">rsb</span>\\\r\n      <span class=\"token register\">r0</span>, \\\r\n      <span class=\"token register\">r1</span>, \\\r\n      <span class=\"token immediate\">#1</span>\r\n    </div>\\\r\n\r\n    Takes the first source value <span class=\"token register\">r1</span>, subtracts it from the second source value\\\r\n    <span class=\"token immediate\">#1</span> (the number 1), and places the result into the destination register\\\r\n    <span class=\"token register\">r0</span>.\r\n\r\n    Try out the <span class=\"token operation\">rsb</span> instruction now.\r\n\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      Why have both the <span class=\"token operation\">rsb</span> and <span class=\"token operation\">sub</span> instructions? Maybe\\\r\n      it'll become clear later...\r\n    </div>\r\n  `\r\n}\r\n\r\nconst basics6: TTutorialPage = {\r\n  title: \"Basics 5: Bitwise Operations\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"token operation\">and</span>, <span class=\"token operation\">orr</span>, <span class=\"token operation\">eor</span>,\\\r\n    and <span class=\"token operation\">bic</span> instructions are all what are called bitwise operations. Much like the\\\r\n    <span class=\"token operation\">add</span> and <span class=\"token operation\">sub</span> instructions, they are evaluated from right\\\r\n    to left.\r\n\r\n    <span class=\"token operation\">and</span> performs a bitwise <i>and</i> operation.\\\r\n    <div class=\"ml-5 mt-1\">\\\r\n      <span class=\"token register\">1</span>01<span class=\"token register\">1</span>1 \r\n      <span class=\"token register\">1</span>10<span class=\"token register\">1</span>0 >>> <span class=\"token register\">10010</span>\r\n    </div>\\\r\n\r\n    <span class=\"token operation\">orr</span> performs a bitwise <i>or</i> operation.\\\r\n    <div class=\"ml-5 mt-1\">\\\r\n      10<span class=\"token register\">1</span>1<span class=\"token register\">1</span>\r\n      <span class=\"token register\">1</span><span class=\"token register\">1</span>0<span class=\"token register\">1</span>0 >>> <span class=\"token register\">11111</span>\r\n    </div>\\\r\n\r\n    <span class=\"token operation\">eor</span> performs an <i>exclusive or</i> operation.\\\r\n    <div class=\"ml-5 mt-1\">\\\r\n      10<span class=\"token register\">1</span>1<span class=\"token register\">1</span> \r\n      1<span class=\"token register\">1</span>010 >>> <span class=\"token register\">01101</span>\r\n    </div>\\\r\n\r\n    <span class=\"token operation\">bic</span> performs a <i>bit clear</i> operation, which is an <span class=\"token operation\">and</span>\\\r\n    operation between the first operand and the complement of the second.\\\r\n    <div class=\"ml-5 mt-1\">\\\r\n      10<span class=\"token register\">1</span>1<span class=\"token register\">1</span> \r\n      11<span class=\"token register\">0</span>1<span class=\"token register\">0</span> >>> <span class=\"token register\">00101</span>\r\n    </div>\\\r\n\r\n    Play around with the bitwise operations now to see their effects.\r\n  `\r\n}\r\n\r\nexport default [\r\n  basics1, subroutine1, subroutine2, basics2, basics3, basics4, basics5, basics6\r\n];","import { TTutorialPage } from \"./types\"\r\n\r\nconst intermediate1: TTutorialPage = {\r\n  title: \"Intermediate 0: The Editor (Revisited)\",\r\n  content: // html\r\n  `\\\r\n    Now that we've gone through the basics of writing individual instructions in the terminal. It's\\\r\n    time to switch to the editor and write some multi-line programs. Click the\\\r\n    <i class=\"fas fa-code fa-sm irisc\"></i> button to switch to the editor.\r\n\r\n    The editor allows you to write both scripts and complete programs in ARMv7 assembly language.\\\r\n    A script does not require an entry point and will run from top to bottom. A complete program\\\r\n    uses the <span class=\"token label\">main:</span> label as its entry point.\r\n\r\n    Both types of program will run until either a final <span class=\"token operation\">bx</span>\\\r\n    <span class=\"token register\">lr</span> instruction (more on this later) or until the program\\\r\n    counter runs off the end of the program.\r\n  `\r\n}\r\n\r\nconst intermediate2: TTutorialPage = {\r\n  title: \"Intermediate 1: Labels\",\r\n  content: // html\r\n  `\\\r\n    <span class=\"token label\">Labels</span> allow you, the programmer, to map names to locations\\\r\n    in the program which can then be <span class=\"token operation\">branch</span>ed to in order to\\\r\n    control the flow of the program. Labels are a vital aspect of writing assembly, necessary to\\\r\n    implement loops, functions and even conditions in some cases.\r\n\r\n    You can <span class=\"token label\">label</span> any instruction in the text section of the program.\\\r\n    In actual ARM, you can put a label and an instruction on the same line. To keep parsing simple,\\\r\n    this is not supported by <span class=\"irisc\">iRISC</span>, a label must be on its own line.\r\n\r\n    Let's start with the entry point. Add the <span class=\"token label\">main:</span> label and add\\\r\n    some of the instructions you learnt in the previous chapter to execute in order. Leave off the\\\r\n    <span class=\"token operation\">bx</span> <span class=\"token register\">lr</span> for now.\\\r\n\r\n    <div class=\"ml-5\">\r\n      <span class=\"token label\">main:</span>\\\r\n      \r\n      <div class=\"ml-5\">\\\r\n        <span class=\"token operation\">mov</span>\\\r\n        <span class=\"token register\">r0</span>, \\\r\n        <span class=\"token immediate\">#1</span>\\\r\n\r\n        <span class=\"token operation\">mov</span>\\\r\n        <span class=\"token register\">r1</span>, \\\r\n        <span class=\"token immediate\">#2</span>\\\r\n\r\n        ...\r\n      </div>\\\r\n    </div>\\\r\n\r\n    Execute the program using the <span class=\"green fas fa-play\"></span> button in the top right\\\r\n    of the editor. You can control the tickrate of the program using the range slider, or step\\\r\n    through each instruction manually using the <span class=\"amber fas fa-step-forward\"></span>\\\r\n    button.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      What happened when the program reached the end of your instructions? Add a final\\\r\n      <span class=\"token operation\">bx</span> <span class=\"token register\">lr</span> instruction\\\r\n      and try again. What's different?\r\n    </div>\r\n  `\r\n}\r\n\r\nconst intermediate3: TTutorialPage = {\r\n  title: \"Intermediate 2: Branches (b)\",\r\n  content: // html\r\n  `\\\r\n    Now that we've added <span class=\"token label\">labels</span> to our assembly language arsenal,\\\r\n    we can begin to control the flow of our program. We do this using\\\r\n    <span class=\"token operation\">branches</span>. There are a few different kinds of branches\\\r\n    available for different purposes. In this step we will be using the\\\r\n    <span class=\"token operation\">b</span> instruction.\r\n\r\n    The <span class=\"token operation\">b</span> instruction is as simple as branches get. You provide\\\r\n    a single operand, the label that you would like to branch to, and the assembler handles the rest.\r\n\r\n    Under the hood, during the assembly process, the text label is translated into an\\\r\n    <span class=\"irisc\">offset</span> from the branch instruction to the provided label.\\\r\n    If the label is three instructions before the branch, then the offset would be -3.\r\n\r\n    Add a <span class=\"token label\">label:</span> to the end of your program and some more instructions\\\r\n    of your choice afterward. Finally, add a <span class=\"token operation\">b</span>\\\r\n    <span class=\"token label\">label</span> instruction. You can name the <span class=\"token label\">label</span>\\\r\n    whatever you want.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Remember</div>\\\r\n      At this stage, the <span class=\"token operation\">bx</span> <span class=\"token register\">lr</span>\\\r\n      instruction will end the program, so this should be the last instruction executed by the simulator.\r\n    </div>\\\r\n\r\n    Your program should now look something like this:\r\n\r\n    <div class=\"ml-5\">\\\r\n      <span class=\"token label\">main:</span>\r\n        <div class=\"ml-5\">...</div>\r\n      <span class=\"token label\">label:</span>\r\n        <div class=\"ml-5\">\\\r\n          ...\r\n          <span class=\"token operation\">b</span> <span class=\"token label\">label</span>\r\n\r\n          <span class=\"token operation\">bx</span> <span class=\"token register\">lr</span>\r\n        </div>\\\r\n    </div>\\\r\n    \r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      What have we created? How would you write this same construct in a higher level language?\r\n    </div>\r\n  `\r\n}\r\n\r\nconst intermediate4: TTutorialPage = {\r\n  title: \"Intermediate 3: Comparisons (cmp)\",\r\n  content: // html\r\n  `\\\r\n    If you answered <span class=\"irisc\">an infinite loop</span> to the question at the end of the last\\\r\n    step then you'd be absolutely right.\r\n    \r\n    Infinite loops are cool, but, on their own, not particularly useful in the context of a full program.\\\r\n    At the very least we need some way of breaking out of this loop if some condition is met so that our\\\r\n    program can end. Enter the <span class=\"token operation\">cmp</span> instruction. \r\n    \r\n    You'd better strap in if this is new to you because there's gonna be a lot of new concepts introduced\\\r\n    in the next few steps.\r\n\r\n    The <span class=\"token operation\">cmp</span> instruction performs an arithmetic subtraction and uses\\\r\n    the result to set the <span class=\"irisc\">cpsr</span> flags. Crucially, the\\\r\n    <span class=\"token operation\">cmp</span> instruction does not alter the contents of any register during\\\r\n    this process, the result of the operation is discarded after the flags are set.\r\n\r\n    Continue to the next page to learn more about the <span class=\"irisc\">cpsr</span> and its flags.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Remember</div>\\\r\n      Stop the infinite loop with the <i class=\"red fas fa-stop\"></i> button.\r\n    </div>\\\r\n  `\r\n}\r\n\r\nconst subroutine1: TTutorialPage = {\r\n  title: \"Subroutine 1-0: The CPSR\",\r\n  content: // html\r\n  `\\\r\n    The <span class=\"irisc\">cpsr</span> stands for the 'current program status register' and is one of the\\\r\n    <i>non</i> general-purpose registers in the ARMv7 CPU. Four bits of this register are dedicated to the\\\r\n    condition code flags: boolean values most often used to evaluate the result of comparisons in the context\\\r\n    of <span class=\"irisc\">conditional operations</span>. \r\n    \r\n    The four flags are as follows:\r\n\r\n    <div class=\"ml-5\">\\\r\n      <span class=\"irisc\">N</span> - result is negative\r\n      <span class=\"irisc\">Z</span> - result is equal to zero\r\n      <span class=\"irisc\">C</span> - result did carry\r\n      <span class=\"irisc\">V</span> - result did overflow\r\n    </div>\\\r\n\r\n    The first two should be fairly self explanatory, but <span class=\"irisc\">C</span> and\\\r\n    <span class=\"irisc\">V</span> are a little more nebulous. Let's revisit them in more detail.\r\n  `\r\n}\r\n\r\nconst subroutine2: TTutorialPage = {\r\n  title: \"Subroutine 1-1: Signed Overflow\",\r\n  content: // html\r\n  `\\\r\n    <span class=\"irisc\">V</span>, the overflow condition, triggers when an operation results a sign change in\\\r\n    an unexpected way. For example, if an addition of two positive <span class=\"irisc\">addends</span> results\\\r\n    in a sign change from positive to negative.\r\n\r\n    The <span class=\"irisc\">sign</span> of an integer is stored using a truly beautiful concept called\\\r\n    <span class=\"irisc\">two's complement</span>. The important thing to know about two's complement number\\\r\n    representation is that if the most significant bit (msb) is set, then the number is\\\r\n    <span class=\"irisc\">negative</span>, and the absolute value of a negative number is read by inverting the\\\r\n    bits and adding 1.\r\n\r\n    Imagine a computer with only four bits of space (called a <span class=\"irisc\">nibble</span>, by the way)\\\r\n    in each of its registers. Consider this binary add for both signed and unsigned representations.\r\n\r\n    <div class=\"ml-5\">\\\r\n      b | <span class=\"token register\">0111</span> + <span class=\"token register\">0001</span> = <span class=\"token register\">1000</span>\r\n      u | &nbsp;&nbsp;&nbsp;7 + &nbsp;&nbsp;&nbsp;1 = &nbsp;&nbsp;&nbsp;8 &nbsp;<span class=\"irisc\">&#10003;</span>\r\n      s | &nbsp;&nbsp;&nbsp;7 + &nbsp;&nbsp;&nbsp;1 = &nbsp;&nbsp;-8 &nbsp;<span class=\"irisc\">??</span>\r\n    </div>\\\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Remember</div>\\\r\n      You need to invert the bits and add one to get the absolute signed value from the binary.\r\n    </div>\\\r\n\r\n    It's important to note that the computer doesn't care whether you as the programmer are treating this data\\\r\n    as signed or unsigned, it just applies the rules of binary maths. The overflow flag will be set to indicate\\\r\n    that a signed overflow has occurred, but it's up to you to decide whether or not that matters. \r\n  `\r\n}\r\n\r\nconst subroutine3: TTutorialPage = {\r\n  title: \"Subroutine 1-2: Unsigned Carry\",\r\n  content: // html\r\n  `\\\r\n    <span class=\"irisc\">C</span>, the carry condition, triggers when an operation results in a carry out or borrow\\\r\n    into the most significant bit. This is a little difficult to explain, but effectively what this flag tells you\\\r\n    is that the result would have been different if the computer had an extra bit of space to store the result.\r\n\r\n    Imagine again a computer that has only a nibble of space in its registers, and a phantom 5th bit which doesn't\\\r\n    physically exist, but we know it's there.\r\n\r\n    <div class=\"ml-5\">\\\r\n      <span class=\"token immediate\">0</span><span class=\"token register\">1111</span> +\\\r\n      <span class=\"token immediate\">0</span><span class=\"token register\">0001</span> =\\\r\n      <span class=\"token immediate\">1</span><span class=\"token register\">0000</span>\r\n    </div>\\\r\n\r\n    The 5th set-bit cannot be represented in the <span class=\"irisc\">nibble</span> so, in unsigned arithmetic, the\\\r\n    largest number we can represent has wrapped round to the smallest, setting the flag in the process. This is the\\\r\n    <span class=\"irisc\">carry</span> condition.\r\n    \r\n    Similarly, the flag can also be set by a subtraction causing a wrap in the opposite direction, resulting in a\\\r\n    <span class=\"irisc\">borrow</span> condition.\r\n\r\n    <div class=\"ml-5\">\\\r\n      <span class=\"token immediate\">1</span><span class=\"token register\">0000</span> -\\\r\n      <span class=\"token immediate\">0</span><span class=\"token register\">0001</span> =\\\r\n      <span class=\"token immediate\">0</span><span class=\"token register\">1111</span>\r\n    </div>\\\r\n\r\n    To confuse matters just a little more though (just in case you were starting to get it), ARM uses an\\\r\n    <span class=\"irisc\">inverted</span> carry flag for the <i>borrow</i> condition, but not for the <i>carry</i>. This means that,\\\r\n    when subtracting, the carry flag will be <u>unset</u> if the borrow condition is met, and set if not.\r\n  `\r\n}\r\n\r\nconst intermediate5: TTutorialPage = {\r\n  title: \"Intermediate 4: Conditions 0\",\r\n  content: // html\r\n  `\\\r\n    Now that we've gone over the flags and how to set them, we can start to work in constructs that read those flags\\\r\n    and decide whether or not to execute the associated instruction. These are called <span class=\"irisc\">conditions</span>.\r\n\r\n    We have a 15 different condition suffixes available to us in ARM assembly, each of which inspect the value of one\\\r\n    or more of the cpsr flags to evaluate some scenario, some of which may be familiar to you.\r\n\r\n    <div class=\"ml-5\">\\\r\n      <div><span class=\"irisc\">al</span> : always</div>\\\r\n      <div><span class=\"irisc\">eq</span> : equal</div>\\\r\n      <div><span class=\"irisc\">ne</span> : not equal</div>\\\r\n      <div><span class=\"irisc\">mi</span> : negative</div>\\\r\n      <div><span class=\"irisc\">pl</span> : positive or zero</div>\\\r\n      <div><span class=\"irisc\">vs</span> : overflow</div>\\\r\n      <div><span class=\"irisc\">vc</span> : no overflow</div>\\\r\n\r\n      <div>signed</div>\\\r\n      <div><span class=\"irisc\">gt</span> : greater than</div>\\\r\n      <div><span class=\"irisc\">ge</span> : greater than or equal</div>\\\r\n      <div><span class=\"irisc\">lt</span> : less than</div>\\\r\n      <div><span class=\"irisc\">le</span> : less than or equal</div>\\\r\n\r\n      <div>unsigned</div>\\\r\n      <div><span class=\"irisc\">hi</span> : greater than</div>\\\r\n      <div><span class=\"irisc\">cs</span> : greater than or equal</div>\\\r\n      <div><span class=\"irisc\">cc</span> : less than</div>\\\r\n      <div><span class=\"irisc\">ls</span> : less than or equal</div>\\\r\n    </div>\\\r\n\r\n    Continue to the next step to learn how to use these condition suffixes.\r\n  `\r\n}\r\n\r\nconst intermediate6: TTutorialPage = {\r\n  title: \"Intermediate 5: Conditions 1\",\r\n  content: // html\r\n  `\\\r\n    You can place any of the condition suffixes mentioned on the previous page after nearly any instruction in\\\r\n    ARMv7 assembly in order to conditionally execute it. Click the <i class=\"fas fa-terminal fa-sm irisc\"></i>\\\r\n    button to switch back to the terminal and we'll try some out.\r\n\r\n    First let's reset the simulator. Enter ':r' into the terminal.\r\n\r\n    Now use the <span class=\"token operation\">cmp</span> instruction to compare the value in\\\r\n    <span class=\"token register\">r0</span> to the immediate value <span class=\"token immediate\">#1</span>.\\\r\n    Remember, only the flexible operand can contain an immediate value. Check the reported flag values underneath\\\r\n    the registers marked <span class=\"irisc\">cpsr</span>.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hint</div>\\\r\n      You should see that only the <span class=\"irisc\">negative</span> (N) condition flag has been set. If you're\\\r\n      seeing something different, check that you have reset the terminal with ':r' and that your\\\r\n      <span class=\"token operation\">cmp</span> instruction is correct.\r\n    </div>\\\r\n\r\n    Now try using the <span class=\"token operation\">eq</span> condition suffix on an instruction of your choosing.\\\r\n    Your instuction should take the following form:\r\n\r\n    <div class=\"ml-5\">\\\r\n      <span class=\"token operation\">mov<u>eq</u></span> ...\\\r\n    </div>\\\r\n\r\n    In the <span class=\"irisc\">assembler</span> window, you should see that the instruction has been marked as\\\r\n    <span class=\"not-executed\">Not Executed</span>. The CPU has skipped this instruction because the\\\r\n    <span class=\"token operation\">eq</span> condition was not met.\r\n\r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Remember</div>\\\r\n      You can hover the different sections of the instruction to learn more.\r\n    </div>\\\r\n  `\r\n}\r\n\r\nconst intermediate7: TTutorialPage = {\r\n  title: \"Intermediate 7: Breaking the Loop\",\r\n  content: // html\r\n  `\\\r\n    Switch back to the editor where we left the loop earlier. \r\n    \r\n    Remove your code from between the <span class=\"token label\">main:</span> and\\\r\n    <span class=\"token label\">label:</span> labels and add a single instruction which sets the value of\\\r\n    <span class=\"token register\">r0</span> to <span class=\"token immediate\">#0</span>.\r\n\r\n    Next, replace the code within your loop with:\r\n\r\n    <div class=\"ml-5\">\\\r\n      <ol>\\\r\n        <li>\\\r\n          an instruction which increments the value of <span class=\"token register\">r0</span>\r\n        </li>\\\r\n        <li>\\\r\n          a comparison which compares the value of <span class=\"token register\">r0</span> to\\\r\n          <span class=\"token immediate\">#6</span>\r\n        </li>\\\r\n        <li>\\\r\n          add a <span class=\"token operation\">ne</span> (not equal) condition suffix to the\\\r\n          <span class=\"token operation\">b</span> <span class=\"token label\">label</span> instruction\r\n        </li>\\\r\n      </ol>\\\r\n    </div>\\\r\n\r\n    Run the program again. \r\n    \r\n    <div class=\"hmm\">\\\r\n      <div class=\"token label mb-1\">Hmm...</div>\\\r\n      What happens now?\r\n    </div>\\\r\n    \r\n  `\r\n}\r\n\r\n\r\n// Remove your code from before the <span class=\"token operation\">b</span> <span class=\"token label\">main</span>\\\r\n// instruction and add an instruction to set <span class=\"token register\">r0</span> equal to\\\r\n// <span class=\"token immediate\">0</span>.\r\n\r\n\r\nexport default [\r\n  intermediate1, intermediate2, intermediate3, intermediate4, \r\n  subroutine1, subroutine2, subroutine3, \r\n  intermediate5, intermediate6, intermediate7\r\n];","// import { intro, basics } from \"./tutorial\";\r\nexport { TTutorialPage, TContentsLink } from \"./types\";\r\nimport intro from \"./intro\";\r\nimport basics from \"./basics\";\r\nimport intermediate from \"./intermediate\";\r\nimport { TTutorialPage, TContentsLink } from \"./types\";\r\n\r\nconst chapters: TTutorialPage[][] = [\r\n  intro,\r\n  basics,\r\n  intermediate\r\n]\r\n\r\nexport const tutorialPages = chapters\r\n  .reduce((pages, chapter) => {\r\n    return [...pages, ...chapter];\r\n  }, []);\r\n\r\nexport const contentsPage = tutorialPages\r\n  .map((page, index) => {\r\n    let matches = [...page.title.matchAll(/([\\d-]+)(?::\\s)(.*)/g)][0];\r\n    let chapter = chapters.findIndex(e => e.includes(page));\r\n\r\n    let contentsLink: TContentsLink = {\r\n      title: `${chapter}-${matches[1]} ${matches[2]}`,\r\n      index: index\r\n    };\r\n\r\n    return contentsLink;\r\n  });","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { TTutorialPage, tutorialPages, TContentsLink, contentsPage } from \"@/tutorial\";\r\nimport Vue from 'vue';\r\n\r\nexport default Vue.extend({\r\n  name: 'tutorial',\r\n  data() {\r\n    return {\r\n      pages: tutorialPages as TTutorialPage[],\r\n      page: 0 as number,\r\n\r\n      contents: contentsPage as TContentsLink[],\r\n      contentsPerPage: 10,\r\n      contentsPage: 0,\r\n      showContents: false\r\n    }\r\n  },\r\n  computed: {\r\n    pageData: function () : TTutorialPage {\r\n      return this.pages[this.page];\r\n    },\r\n\r\n    nContentsPages: function () : number {\r\n      return Math.ceil(this.contents.length / this.contentsPerPage);\r\n    },\r\n\r\n    contentsSlice: function () : TContentsLink[] {\r\n      return this.contents.slice(\r\n        this.contentsPage * this.contentsPerPage, \r\n        (this.contentsPage + 1) * this.contentsPerPage\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    nextPage: function () {\r\n      if (this.pages.length > this.page + 1) {\r\n        this.page++;\r\n      }\r\n    },\r\n\r\n    prevPage: function () {\r\n      if (this.page > 0) {\r\n        this.page--;\r\n      }\r\n    },\r\n\r\n    openContents: function () {\r\n      this.contentsPage = Math.floor(this.page / 10);\r\n      this.showContents = true;\r\n    },\r\n\r\n    navigateTo: function (page: TContentsLink) {\r\n      this.page = page.index;\r\n    }\r\n  },\r\n\r\n  created: function () {\r\n    this.page = JSON.parse(localStorage.getItem('tutorial') ?? \"0\");\r\n  },\r\n\r\n  watch: {\r\n    page: function () {\r\n      this.showContents = false;\r\n      localStorage.setItem('tutorial', JSON.stringify(this.page));\r\n\r\n      this.$nextTick(() => {\r\n        (this.$refs.container as HTMLElement).scrollTo({\r\n          top: 0,\r\n          behavior: 'auto'\r\n        });\r\n      })\r\n      \r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tutorial.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tutorial.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./tutorial.vue?vue&type=template&id=a80cebae&scoped=true&\"\nimport script from \"./tutorial.vue?vue&type=script&lang=ts&\"\nexport * from \"./tutorial.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./tutorial.vue?vue&type=style&index=0&id=a80cebae&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a80cebae\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport { editor, terminal, registers, memory, instruction, tutorial, settings } from \"@/vue\";\r\nimport { SimulatorState } from \"@/simulator\";\r\nimport { Interpreter, RuntimeError } from '@/interpreter';\r\nimport { Register, EnvironmentType } from \"@/constants\"\r\nimport { createTour, SettingsState } from '@/utilities';\r\n\r\nimport './assets/generic.css';\r\nimport './assets/syntax.css';\r\nimport './assets/shepherd.css';\r\n\r\nimport { TInstructionNode } from '@/syntax/types';\r\nimport Shepherd from 'shepherd.js';\r\nimport { FileSystemState } from './files';\r\n\r\nexport default Vue.extend({\r\n  name: 'emulator',\r\n  components: {\r\n    editor,\r\n    terminal,\r\n    registers,\r\n    memory,\r\n    instruction,\r\n    tutorial, \r\n    settings\r\n  },\r\n  data() {\r\n    return {\r\n      env: EnvironmentType.TERMINAL,\r\n\r\n      dismissTooSmall: false,\r\n      windowSize: 0\r\n    }\r\n  },\r\n  computed: {\r\n    currentTick: SimulatorState.currentTick,\r\n\r\n    // registers: SimulatorState.registers,\r\n    // breakpoints: SimulatorState.breakpoints,\r\n    errors: SimulatorState.errors,\r\n    errorSummary: function (): string[] {\r\n      return this.errors.map(e => `${e.constructHelperHTML()}`)\r\n    },\r\n    \r\n    running: SimulatorState.running,\r\n    paused: SimulatorState.paused,\r\n    // step: SimulatorState.step,\r\n\r\n    isTooSmall: function (): boolean {\r\n      return !this.dismissTooSmall && this.windowSize < 1250;\r\n    },\r\n\r\n    // hack so we can access the enum in dom\r\n    EnvironmentType: () => EnvironmentType,\r\n  },\r\n  methods: {\r\n    /**\r\n     * \r\n     */\r\n    switchEnvironment: function () {\r\n      if (this.env === EnvironmentType.TERMINAL) this.env = EnvironmentType.EDITOR;\r\n      else this.env = EnvironmentType.TERMINAL;\r\n\r\n      localStorage.setItem('environment', this.env);\r\n    },\r\n\r\n    startTour: function () {\r\n      this.env = EnvironmentType.TERMINAL;\r\n      createTour().start();\r\n\r\n      Shepherd.activeTour?.once(\r\n        'complete', \r\n        () => { \r\n          localStorage.setItem('doneTour', 'true');\r\n          SimulatorState.reset(); \r\n        });\r\n    },\r\n\r\n    windowSizeListener: function () {\r\n      this.windowSize = window.innerWidth;\r\n    },\r\n\r\n    keyListener: function (e: KeyboardEvent) {\r\n      if (this.env !== EnvironmentType.EDITOR) return;\r\n\r\n      if (e.code === \"ArrowDown\" && (e.ctrlKey || e.metaKey)) {\r\n        e.preventDefault();\r\n        \r\n        if (!this.running) {\r\n          SimulatorState.start();\r\n        }\r\n        else {\r\n          if (this.paused) SimulatorState.resume();\r\n          else SimulatorState.pause();\r\n        }\r\n      }\r\n\r\n      else if (e.code === \"ArrowUp\" && (e.ctrlKey || e.metaKey)) {\r\n        e.preventDefault();\r\n        SimulatorState.stop();\r\n      }\r\n\r\n      else if (e.code === \"ArrowRight\" && (e.ctrlKey || e.metaKey)) {\r\n        e.preventDefault();\r\n        SimulatorState.stepForward();\r\n      }\r\n\r\n      else if (e.code === \"ArrowLeft\" && (e.ctrlKey || e.metaKey)) {\r\n        e.preventDefault();\r\n        SimulatorState.stepBack();\r\n      }\r\n    }\r\n  },\r\n\r\n  created: function () {\r\n    SettingsState.init();\r\n    SimulatorState.init();\r\n    FileSystemState.init();\r\n    SimulatorState.setVueInstance(this)\r\n\r\n    window.addEventListener(\"resize\", this.windowSizeListener);\r\n    this.windowSizeListener();\r\n  },\r\n\r\n  mounted: function () {\r\n    document.addEventListener('keydown', this.keyListener.bind(this));\r\n\r\n    let doneTour = localStorage.getItem('doneTour') ?? false;\r\n    if (!doneTour) this.startTour();\r\n    else {\r\n      this.env = (localStorage.getItem('environment') as EnvironmentType) ?? EnvironmentType.TERMINAL;\r\n\r\n      // hack to prompt editor to load any code from localStorage on refresh\r\n      this.switchEnvironment();\r\n      this.$nextTick(() => this.switchEnvironment());\r\n    }\r\n  },\r\n\r\n  beforeDestroy: function () {\r\n    window.removeEventListener(\"resize\", this.windowSizeListener);\r\n    document.removeEventListener('keydown', this.keyListener);\r\n  },\r\n\r\n  watch: {\r\n    crtEffect: function (on: boolean) {\r\n      const element: Element = document.getElementsByTagName('html')[0];\r\n      if (on) element.classList.add(\"crt\");\r\n      else element.classList.remove(\"crt\");\r\n    }\r\n  }\r\n})\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./app.vue?vue&type=template&id=f966f082&\"\nimport script from \"./app.vue?vue&type=script&lang=ts&\"\nexport * from \"./app.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./app.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport app from './app.vue'\r\n\r\nimport { BootstrapVue, BootstrapVueIcons } from 'bootstrap-vue'\r\nimport vClickOutside  from 'v-click-outside';\r\n\r\nimport 'shepherd.js/dist/css/shepherd.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\n\r\nimport './assets/prism-armv7';\r\n\r\nVue.use(BootstrapVue)\r\nVue.use(BootstrapVueIcons)\r\nVue.use(vClickOutside);\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(app),\r\n}).$mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./memory.vue?vue&type=style&index=0&id=03ad7fec&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./registers.vue?vue&type=style&index=0&id=6b0493ca&scoped=true&lang=css&\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}